# generated by datamodel-codegen:
#   filename:  https://github.com/kubernetes/kubernetes/raw/master/api/openapi-spec/swagger.json
#   timestamp: 2024-08-12T18:58:22+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Key(BaseModel):
    description: str
    type: str


class ValueExpression(BaseModel):
    description: str
    type: str


class Properties(BaseModel):
    key: Key
    valueExpression: ValueExpression


class IoK8sApiAdmissionregistrationV1AuditAnnotation(BaseModel):
    description: str
    properties: Properties
    required: List[str]
    type: str


class FieldRef(BaseModel):
    description: str
    type: str


class Warning(BaseModel):
    description: str
    type: str


class Properties1(BaseModel):
    fieldRef: FieldRef
    warning: Warning


class IoK8sApiAdmissionregistrationV1ExpressionWarning(BaseModel):
    description: str
    properties: Properties1
    required: List[str]
    type: str


class Expression(BaseModel):
    description: str
    type: str


class Name(BaseModel):
    description: str
    type: str


class Properties2(BaseModel):
    expression: Expression
    name: Name


class IoK8sApiAdmissionregistrationV1MatchCondition(BaseModel):
    description: str
    properties: Properties2
    required: List[str]
    type: str


class Items(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ExcludeResourceRules(BaseModel):
    description: str
    items: Items
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchPolicy(BaseModel):
    description: str
    type: str


class NamespaceSelector(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ObjectSelector(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ResourceRules(BaseModel):
    description: str
    items: Items
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties3(BaseModel):
    excludeResourceRules: ExcludeResourceRules
    matchPolicy: MatchPolicy
    namespaceSelector: NamespaceSelector
    objectSelector: ObjectSelector
    resourceRules: ResourceRules


class IoK8sApiAdmissionregistrationV1MatchResources(BaseModel):
    description: str
    properties: Properties3
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items2(BaseModel):
    type: str


class AdmissionReviewVersions(BaseModel):
    description: str
    items: Items2
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ClientConfig(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class FailurePolicy(BaseModel):
    description: str
    type: str


class Items3(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MatchConditions(BaseModel):
    description: str
    items: Items3
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class ReinvocationPolicy(BaseModel):
    description: str
    type: str


class Rules(BaseModel):
    description: str
    items: Items3
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SideEffects(BaseModel):
    description: str
    type: str


class TimeoutSeconds(BaseModel):
    description: str
    format: str
    type: str


class Properties4(BaseModel):
    admissionReviewVersions: AdmissionReviewVersions
    clientConfig: ClientConfig
    failurePolicy: FailurePolicy
    matchConditions: MatchConditions
    matchPolicy: MatchPolicy
    name: Name
    namespaceSelector: NamespaceSelector
    objectSelector: ObjectSelector
    reinvocationPolicy: ReinvocationPolicy
    rules: Rules
    sideEffects: SideEffects
    timeoutSeconds: TimeoutSeconds


class IoK8sApiAdmissionregistrationV1MutatingWebhook(BaseModel):
    description: str
    properties: Properties4
    required: List[str]
    type: str


class ApiVersion(BaseModel):
    description: str
    type: str


class Kind(BaseModel):
    description: str
    type: str


class Metadata(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Webhooks(BaseModel):
    description: str
    items: Items3
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties5(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    webhooks: Webhooks


class XKubernetesGroupVersionKindItem(BaseModel):
    group: str
    kind: str
    version: str


class IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration(BaseModel):
    description: str
    properties: Properties5
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items6(BaseModel):
    description: str
    items: Items3
    type: str


class Properties6(BaseModel):
    apiVersion: ApiVersion
    items: Items6
    kind: Kind
    metadata: Metadata


class IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationList(BaseModel):
    description: str
    properties: Properties6
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items8(BaseModel):
    type: str


class ApiGroups(BaseModel):
    description: str
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ApiVersions(BaseModel):
    description: str
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Operations(BaseModel):
    description: str
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceNames(BaseModel):
    description: str
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Resources(BaseModel):
    description: str
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Scope(BaseModel):
    description: str
    type: str


class Properties7(BaseModel):
    apiGroups: ApiGroups
    apiVersions: ApiVersions
    operations: Operations
    resourceNames: ResourceNames
    resources: Resources
    scope: Scope


class IoK8sApiAdmissionregistrationV1NamedRuleWithOperations(BaseModel):
    description: str
    properties: Properties7
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties8(BaseModel):
    apiVersion: ApiVersion
    kind: Kind


class IoK8sApiAdmissionregistrationV1ParamKind(BaseModel):
    description: str
    properties: Properties8
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Namespace(BaseModel):
    description: str
    type: str


class ParameterNotFoundAction(BaseModel):
    description: str
    type: str


class Selector(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties9(BaseModel):
    name: Name
    namespace: Namespace
    parameterNotFoundAction: ParameterNotFoundAction
    selector: Selector


class IoK8sApiAdmissionregistrationV1ParamRef(BaseModel):
    description: str
    properties: Properties9
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class ApiGroups1(BaseModel):
    description: str
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ApiVersions1(BaseModel):
    description: str
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Operations1(BaseModel):
    description: str
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Resources1(BaseModel):
    description: str
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties10(BaseModel):
    apiGroups: ApiGroups1
    apiVersions: ApiVersions1
    operations: Operations1
    resources: Resources1
    scope: Scope


class IoK8sApiAdmissionregistrationV1RuleWithOperations(BaseModel):
    description: str
    properties: Properties10
    type: str


class Path(BaseModel):
    description: str
    type: str


class Port(BaseModel):
    description: str
    format: str
    type: str


class Properties11(BaseModel):
    name: Name
    namespace: Namespace
    path: Path
    port: Port


class IoK8sApiAdmissionregistrationV1ServiceReference(BaseModel):
    description: str
    properties: Properties11
    required: List[str]
    type: str


class Items17(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ExpressionWarnings(BaseModel):
    description: str
    items: Items17
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties12(BaseModel):
    expressionWarnings: ExpressionWarnings


class IoK8sApiAdmissionregistrationV1TypeChecking(BaseModel):
    description: str
    properties: Properties12
    type: str


class Spec(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Status(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties13(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status


class IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicy(BaseModel):
    description: str
    properties: Properties13
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties14(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec


class IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyBinding(BaseModel):
    description: str
    properties: Properties14
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items18(BaseModel):
    description: str
    items: Items17
    type: str


class Properties15(BaseModel):
    apiVersion: ApiVersion
    items: Items18
    kind: Kind
    metadata: Metadata


class IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyBindingList(BaseModel):
    description: str
    properties: Properties15
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class MatchResources(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ParamRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PolicyName(BaseModel):
    description: str
    type: str


class Items20(BaseModel):
    type: str


class ValidationActions(BaseModel):
    description: str
    items: Items20
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties16(BaseModel):
    matchResources: MatchResources
    paramRef: ParamRef
    policyName: PolicyName
    validationActions: ValidationActions


class IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyBindingSpec(BaseModel):
    description: str
    properties: Properties16
    type: str


class Items22(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items21(BaseModel):
    description: str
    items: Items22
    type: str


class Properties17(BaseModel):
    apiVersion: ApiVersion
    items: Items21
    kind: Kind
    metadata: Metadata


class IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyList(BaseModel):
    description: str
    properties: Properties17
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items23(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AuditAnnotations(BaseModel):
    description: str
    items: Items23
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchConditions1(BaseModel):
    description: str
    items: Items23
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class MatchConstraints(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ParamKind(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Validations(BaseModel):
    description: str
    items: Items23
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Variables(BaseModel):
    description: str
    items: Items23
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties18(BaseModel):
    auditAnnotations: AuditAnnotations
    failurePolicy: FailurePolicy
    matchConditions: MatchConditions1
    matchConstraints: MatchConstraints
    paramKind: ParamKind
    validations: Validations
    variables: Variables


class IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicySpec(BaseModel):
    description: str
    properties: Properties18
    type: str


class Conditions(BaseModel):
    description: str
    items: Items23
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ObservedGeneration(BaseModel):
    description: str
    format: str
    type: str


class TypeChecking(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties19(BaseModel):
    conditions: Conditions
    observedGeneration: ObservedGeneration
    typeChecking: TypeChecking


class IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyStatus(BaseModel):
    description: str
    properties: Properties19
    type: str


class Items28(BaseModel):
    type: str


class AdmissionReviewVersions1(BaseModel):
    description: str
    items: Items28
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items29(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MatchConditions2(BaseModel):
    description: str
    items: Items29
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Rules1(BaseModel):
    description: str
    items: Items29
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties20(BaseModel):
    admissionReviewVersions: AdmissionReviewVersions1
    clientConfig: ClientConfig
    failurePolicy: FailurePolicy
    matchConditions: MatchConditions2
    matchPolicy: MatchPolicy
    name: Name
    namespaceSelector: NamespaceSelector
    objectSelector: ObjectSelector
    rules: Rules1
    sideEffects: SideEffects
    timeoutSeconds: TimeoutSeconds


class IoK8sApiAdmissionregistrationV1ValidatingWebhook(BaseModel):
    description: str
    properties: Properties20
    required: List[str]
    type: str


class Webhooks1(BaseModel):
    description: str
    items: Items29
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties21(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    webhooks: Webhooks1


class IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration(BaseModel):
    description: str
    properties: Properties21
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items32(BaseModel):
    description: str
    items: Items29
    type: str


class Properties22(BaseModel):
    apiVersion: ApiVersion
    items: Items32
    kind: Kind
    metadata: Metadata


class IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationList(BaseModel):
    description: str
    properties: Properties22
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Message(BaseModel):
    description: str
    type: str


class MessageExpression(BaseModel):
    description: str
    type: str


class Reason(BaseModel):
    description: str
    type: str


class Properties23(BaseModel):
    expression: Expression
    message: Message
    messageExpression: MessageExpression
    reason: Reason


class IoK8sApiAdmissionregistrationV1Validation(BaseModel):
    description: str
    properties: Properties23
    required: List[str]
    type: str


class Properties24(BaseModel):
    expression: Expression
    name: Name


class IoK8sApiAdmissionregistrationV1Variable(BaseModel):
    description: str
    properties: Properties24
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class CaBundle(BaseModel):
    description: str
    format: str
    type: str


class Service(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Url(BaseModel):
    description: str
    type: str


class Properties25(BaseModel):
    caBundle: CaBundle
    service: Service
    url: Url


class IoK8sApiAdmissionregistrationV1WebhookClientConfig(BaseModel):
    description: str
    properties: Properties25
    type: str


class Properties26(BaseModel):
    key: Key
    valueExpression: ValueExpression


class IoK8sApiAdmissionregistrationV1alpha1AuditAnnotation(BaseModel):
    description: str
    properties: Properties26
    required: List[str]
    type: str


class Properties27(BaseModel):
    fieldRef: FieldRef
    warning: Warning


class IoK8sApiAdmissionregistrationV1alpha1ExpressionWarning(BaseModel):
    description: str
    properties: Properties27
    required: List[str]
    type: str


class Properties28(BaseModel):
    expression: Expression
    name: Name


class IoK8sApiAdmissionregistrationV1alpha1MatchCondition(BaseModel):
    properties: Properties28
    required: List[str]
    type: str


class Items34(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ExcludeResourceRules1(BaseModel):
    description: str
    items: Items34
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceRules1(BaseModel):
    description: str
    items: Items34
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties29(BaseModel):
    excludeResourceRules: ExcludeResourceRules1
    matchPolicy: MatchPolicy
    namespaceSelector: NamespaceSelector
    objectSelector: ObjectSelector
    resourceRules: ResourceRules1


class IoK8sApiAdmissionregistrationV1alpha1MatchResources(BaseModel):
    description: str
    properties: Properties29
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items36(BaseModel):
    type: str


class ApiGroups2(BaseModel):
    description: str
    items: Items36
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ApiVersions2(BaseModel):
    description: str
    items: Items36
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Operations2(BaseModel):
    description: str
    items: Items36
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceNames1(BaseModel):
    description: str
    items: Items36
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Resources2(BaseModel):
    description: str
    items: Items36
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties30(BaseModel):
    apiGroups: ApiGroups2
    apiVersions: ApiVersions2
    operations: Operations2
    resourceNames: ResourceNames1
    resources: Resources2
    scope: Scope


class IoK8sApiAdmissionregistrationV1alpha1NamedRuleWithOperations(BaseModel):
    description: str
    properties: Properties30
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties31(BaseModel):
    apiVersion: ApiVersion
    kind: Kind


class IoK8sApiAdmissionregistrationV1alpha1ParamKind(BaseModel):
    description: str
    properties: Properties31
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties32(BaseModel):
    name: Name
    namespace: Namespace
    parameterNotFoundAction: ParameterNotFoundAction
    selector: Selector


class IoK8sApiAdmissionregistrationV1alpha1ParamRef(BaseModel):
    description: str
    properties: Properties32
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items41(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ExpressionWarnings1(BaseModel):
    description: str
    items: Items41
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties33(BaseModel):
    expressionWarnings: ExpressionWarnings1


class IoK8sApiAdmissionregistrationV1alpha1TypeChecking(BaseModel):
    description: str
    properties: Properties33
    type: str


class Properties34(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status


class IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicy(BaseModel):
    description: str
    properties: Properties34
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties35(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec


class IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyBinding(BaseModel):
    description: str
    properties: Properties35
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items42(BaseModel):
    description: str
    items: Items41
    type: str


class Properties36(BaseModel):
    apiVersion: ApiVersion
    items: Items42
    kind: Kind
    metadata: Metadata


class IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyBindingList(
    BaseModel
):
    description: str
    properties: Properties36
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items44(BaseModel):
    type: str


class ValidationActions1(BaseModel):
    description: str
    items: Items44
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties37(BaseModel):
    matchResources: MatchResources
    paramRef: ParamRef
    policyName: PolicyName
    validationActions: ValidationActions1


class IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyBindingSpec(
    BaseModel
):
    description: str
    properties: Properties37
    type: str


class Items46(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items45(BaseModel):
    description: str
    items: Items46
    type: str


class Properties38(BaseModel):
    apiVersion: ApiVersion
    items: Items45
    kind: Kind
    metadata: Metadata


class IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyList(BaseModel):
    description: str
    properties: Properties38
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items47(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AuditAnnotations1(BaseModel):
    description: str
    items: Items47
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchConditions3(BaseModel):
    description: str
    items: Items47
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Validations1(BaseModel):
    description: str
    items: Items47
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Variables1(BaseModel):
    description: str
    items: Items47
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties39(BaseModel):
    auditAnnotations: AuditAnnotations1
    failurePolicy: FailurePolicy
    matchConditions: MatchConditions3
    matchConstraints: MatchConstraints
    paramKind: ParamKind
    validations: Validations1
    variables: Variables1


class IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicySpec(BaseModel):
    description: str
    properties: Properties39
    type: str


class Conditions1(BaseModel):
    description: str
    items: Items47
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties40(BaseModel):
    conditions: Conditions1
    observedGeneration: ObservedGeneration
    typeChecking: TypeChecking


class IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyStatus(BaseModel):
    description: str
    properties: Properties40
    type: str


class Properties41(BaseModel):
    expression: Expression
    message: Message
    messageExpression: MessageExpression
    reason: Reason


class IoK8sApiAdmissionregistrationV1alpha1Validation(BaseModel):
    description: str
    properties: Properties41
    required: List[str]
    type: str


class Properties42(BaseModel):
    expression: Expression
    name: Name


class IoK8sApiAdmissionregistrationV1alpha1Variable(BaseModel):
    description: str
    properties: Properties42
    required: List[str]
    type: str


class Properties43(BaseModel):
    key: Key
    valueExpression: ValueExpression


class IoK8sApiAdmissionregistrationV1beta1AuditAnnotation(BaseModel):
    description: str
    properties: Properties43
    required: List[str]
    type: str


class Properties44(BaseModel):
    fieldRef: FieldRef
    warning: Warning


class IoK8sApiAdmissionregistrationV1beta1ExpressionWarning(BaseModel):
    description: str
    properties: Properties44
    required: List[str]
    type: str


class Properties45(BaseModel):
    expression: Expression
    name: Name


class IoK8sApiAdmissionregistrationV1beta1MatchCondition(BaseModel):
    description: str
    properties: Properties45
    required: List[str]
    type: str


class ExcludeResourceRules2(BaseModel):
    description: str
    items: Items47
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceRules2(BaseModel):
    description: str
    items: Items47
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties46(BaseModel):
    excludeResourceRules: ExcludeResourceRules2
    matchPolicy: MatchPolicy
    namespaceSelector: NamespaceSelector
    objectSelector: ObjectSelector
    resourceRules: ResourceRules2


class IoK8sApiAdmissionregistrationV1beta1MatchResources(BaseModel):
    description: str
    properties: Properties46
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items54(BaseModel):
    type: str


class ApiGroups3(BaseModel):
    description: str
    items: Items54
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ApiVersions3(BaseModel):
    description: str
    items: Items54
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Operations3(BaseModel):
    description: str
    items: Items54
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceNames2(BaseModel):
    description: str
    items: Items54
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Resources3(BaseModel):
    description: str
    items: Items54
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties47(BaseModel):
    apiGroups: ApiGroups3
    apiVersions: ApiVersions3
    operations: Operations3
    resourceNames: ResourceNames2
    resources: Resources3
    scope: Scope


class IoK8sApiAdmissionregistrationV1beta1NamedRuleWithOperations(BaseModel):
    description: str
    properties: Properties47
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties48(BaseModel):
    apiVersion: ApiVersion
    kind: Kind


class IoK8sApiAdmissionregistrationV1beta1ParamKind(BaseModel):
    description: str
    properties: Properties48
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties49(BaseModel):
    name: Name
    namespace: Namespace
    parameterNotFoundAction: ParameterNotFoundAction
    selector: Selector


class IoK8sApiAdmissionregistrationV1beta1ParamRef(BaseModel):
    description: str
    properties: Properties49
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items59(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ExpressionWarnings2(BaseModel):
    description: str
    items: Items59
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties50(BaseModel):
    expressionWarnings: ExpressionWarnings2


class IoK8sApiAdmissionregistrationV1beta1TypeChecking(BaseModel):
    description: str
    properties: Properties50
    type: str


class Properties51(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status


class IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicy(BaseModel):
    description: str
    properties: Properties51
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties52(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec


class IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyBinding(BaseModel):
    description: str
    properties: Properties52
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items60(BaseModel):
    description: str
    items: Items59
    type: str


class Properties53(BaseModel):
    apiVersion: ApiVersion
    items: Items60
    kind: Kind
    metadata: Metadata


class IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyBindingList(
    BaseModel
):
    description: str
    properties: Properties53
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items62(BaseModel):
    type: str


class ValidationActions2(BaseModel):
    description: str
    items: Items62
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties54(BaseModel):
    matchResources: MatchResources
    paramRef: ParamRef
    policyName: PolicyName
    validationActions: ValidationActions2


class IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyBindingSpec(
    BaseModel
):
    description: str
    properties: Properties54
    type: str


class Items64(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items63(BaseModel):
    description: str
    items: Items64
    type: str


class Properties55(BaseModel):
    apiVersion: ApiVersion
    items: Items63
    kind: Kind
    metadata: Metadata


class IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyList(BaseModel):
    description: str
    properties: Properties55
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items65(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AuditAnnotations2(BaseModel):
    description: str
    items: Items65
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchConditions4(BaseModel):
    description: str
    items: Items65
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Validations2(BaseModel):
    description: str
    items: Items65
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Variables2(BaseModel):
    description: str
    items: Items65
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties56(BaseModel):
    auditAnnotations: AuditAnnotations2
    failurePolicy: FailurePolicy
    matchConditions: MatchConditions4
    matchConstraints: MatchConstraints
    paramKind: ParamKind
    validations: Validations2
    variables: Variables2


class IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicySpec(BaseModel):
    description: str
    properties: Properties56
    type: str


class Conditions2(BaseModel):
    description: str
    items: Items65
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties57(BaseModel):
    conditions: Conditions2
    observedGeneration: ObservedGeneration
    typeChecking: TypeChecking


class IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyStatus(BaseModel):
    description: str
    properties: Properties57
    type: str


class Properties58(BaseModel):
    expression: Expression
    message: Message
    messageExpression: MessageExpression
    reason: Reason


class IoK8sApiAdmissionregistrationV1beta1Validation(BaseModel):
    description: str
    properties: Properties58
    required: List[str]
    type: str


class Properties59(BaseModel):
    expression: Expression
    name: Name


class IoK8sApiAdmissionregistrationV1beta1Variable(BaseModel):
    description: str
    properties: Properties59
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class ApiServerID(BaseModel):
    description: str
    type: str


class Items70(BaseModel):
    type: str


class DecodableVersions(BaseModel):
    description: str
    items: Items70
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class EncodingVersion(BaseModel):
    description: str
    type: str


class ServedVersions(BaseModel):
    description: str
    items: Items70
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties60(BaseModel):
    apiServerID: ApiServerID
    decodableVersions: DecodableVersions
    encodingVersion: EncodingVersion
    servedVersions: ServedVersions


class IoK8sApiApiserverinternalV1alpha1ServerStorageVersion(BaseModel):
    description: str
    properties: Properties60
    type: str


class Properties61(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status


class IoK8sApiApiserverinternalV1alpha1StorageVersion(BaseModel):
    description: str
    properties: Properties61
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class LastTransitionTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Status4(BaseModel):
    description: str
    type: str


class Type(BaseModel):
    description: str
    type: str


class Properties62(BaseModel):
    lastTransitionTime: LastTransitionTime
    message: Message
    observedGeneration: ObservedGeneration
    reason: Reason
    status: Status4
    type: Type


class IoK8sApiApiserverinternalV1alpha1StorageVersionCondition(BaseModel):
    description: str
    properties: Properties62
    required: List[str]
    type: str


class Items73(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items72(BaseModel):
    description: str
    items: Items73
    type: str


class Properties63(BaseModel):
    apiVersion: ApiVersion
    items: Items72
    kind: Kind
    metadata: Metadata


class IoK8sApiApiserverinternalV1alpha1StorageVersionList(BaseModel):
    description: str
    properties: Properties63
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class IoK8sApiApiserverinternalV1alpha1StorageVersionSpec(BaseModel):
    description: str
    type: str


class CommonEncodingVersion(BaseModel):
    description: str
    type: str


class Items74(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions3(BaseModel):
    description: str
    items: Items74
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class StorageVersions(BaseModel):
    description: str
    items: Items74
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties64(BaseModel):
    commonEncodingVersion: CommonEncodingVersion
    conditions: Conditions3
    storageVersions: StorageVersions


class IoK8sApiApiserverinternalV1alpha1StorageVersionStatus(BaseModel):
    description: str
    properties: Properties64
    type: str


class Data(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Revision(BaseModel):
    description: str
    format: str
    type: str


class Properties65(BaseModel):
    apiVersion: ApiVersion
    data: Data
    kind: Kind
    metadata: Metadata
    revision: Revision


class IoK8sApiAppsV1ControllerRevision(BaseModel):
    description: str
    properties: Properties65
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items76(BaseModel):
    description: str
    items: Items74
    type: str


class Properties66(BaseModel):
    apiVersion: ApiVersion
    items: Items76
    kind: Kind
    metadata: Metadata


class IoK8sApiAppsV1ControllerRevisionList(BaseModel):
    description: str
    properties: Properties66
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status5(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties67(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status5


class IoK8sApiAppsV1DaemonSet(BaseModel):
    description: str
    properties: Properties67
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status6(BaseModel):
    description: str
    type: str


class Properties68(BaseModel):
    lastTransitionTime: LastTransitionTime
    message: Message
    reason: Reason
    status: Status6
    type: Type


class IoK8sApiAppsV1DaemonSetCondition(BaseModel):
    description: str
    properties: Properties68
    required: List[str]
    type: str


class Items79(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items78(BaseModel):
    description: str
    items: Items79
    type: str


class Properties69(BaseModel):
    apiVersion: ApiVersion
    items: Items78
    kind: Kind
    metadata: Metadata


class IoK8sApiAppsV1DaemonSetList(BaseModel):
    description: str
    properties: Properties69
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class MinReadySeconds(BaseModel):
    description: str
    format: str
    type: str


class RevisionHistoryLimit(BaseModel):
    description: str
    format: str
    type: str


class Template(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class UpdateStrategy(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties70(BaseModel):
    minReadySeconds: MinReadySeconds
    revisionHistoryLimit: RevisionHistoryLimit
    selector: Selector
    template: Template
    updateStrategy: UpdateStrategy


class IoK8sApiAppsV1DaemonSetSpec(BaseModel):
    description: str
    properties: Properties70
    required: List[str]
    type: str


class CollisionCount(BaseModel):
    description: str
    format: str
    type: str


class Items80(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions4(BaseModel):
    description: str
    items: Items80
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class CurrentNumberScheduled(BaseModel):
    description: str
    format: str
    type: str


class DesiredNumberScheduled(BaseModel):
    description: str
    format: str
    type: str


class NumberAvailable(BaseModel):
    description: str
    format: str
    type: str


class NumberMisscheduled(BaseModel):
    description: str
    format: str
    type: str


class NumberReady(BaseModel):
    description: str
    format: str
    type: str


class NumberUnavailable(BaseModel):
    description: str
    format: str
    type: str


class UpdatedNumberScheduled(BaseModel):
    description: str
    format: str
    type: str


class Properties71(BaseModel):
    collisionCount: CollisionCount
    conditions: Conditions4
    currentNumberScheduled: CurrentNumberScheduled
    desiredNumberScheduled: DesiredNumberScheduled
    numberAvailable: NumberAvailable
    numberMisscheduled: NumberMisscheduled
    numberReady: NumberReady
    numberUnavailable: NumberUnavailable
    observedGeneration: ObservedGeneration
    updatedNumberScheduled: UpdatedNumberScheduled


class IoK8sApiAppsV1DaemonSetStatus(BaseModel):
    description: str
    properties: Properties71
    required: List[str]
    type: str


class RollingUpdate(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties72(BaseModel):
    rollingUpdate: RollingUpdate
    type: Type


class IoK8sApiAppsV1DaemonSetUpdateStrategy(BaseModel):
    description: str
    properties: Properties72
    type: str


class Status7(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties73(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status7


class IoK8sApiAppsV1Deployment(BaseModel):
    description: str
    properties: Properties73
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class LastUpdateTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Status8(BaseModel):
    description: str
    type: str


class Properties74(BaseModel):
    lastTransitionTime: LastTransitionTime
    lastUpdateTime: LastUpdateTime
    message: Message
    reason: Reason
    status: Status8
    type: Type


class IoK8sApiAppsV1DeploymentCondition(BaseModel):
    description: str
    properties: Properties74
    required: List[str]
    type: str


class Items81(BaseModel):
    description: str
    items: Items80
    type: str


class Properties75(BaseModel):
    apiVersion: ApiVersion
    items: Items81
    kind: Kind
    metadata: Metadata


class IoK8sApiAppsV1DeploymentList(BaseModel):
    description: str
    properties: Properties75
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Paused(BaseModel):
    description: str
    type: str


class ProgressDeadlineSeconds(BaseModel):
    description: str
    format: str
    type: str


class Replicas(BaseModel):
    description: str
    format: str
    type: str


class Strategy(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties76(BaseModel):
    minReadySeconds: MinReadySeconds
    paused: Paused
    progressDeadlineSeconds: ProgressDeadlineSeconds
    replicas: Replicas
    revisionHistoryLimit: RevisionHistoryLimit
    selector: Selector
    strategy: Strategy
    template: Template


class IoK8sApiAppsV1DeploymentSpec(BaseModel):
    description: str
    properties: Properties76
    required: List[str]
    type: str


class AvailableReplicas(BaseModel):
    description: str
    format: str
    type: str


class Items83(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions5(BaseModel):
    description: str
    items: Items83
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class ReadyReplicas(BaseModel):
    description: str
    format: str
    type: str


class UnavailableReplicas(BaseModel):
    description: str
    format: str
    type: str


class UpdatedReplicas(BaseModel):
    description: str
    format: str
    type: str


class Properties77(BaseModel):
    availableReplicas: AvailableReplicas
    collisionCount: CollisionCount
    conditions: Conditions5
    observedGeneration: ObservedGeneration
    readyReplicas: ReadyReplicas
    replicas: Replicas
    unavailableReplicas: UnavailableReplicas
    updatedReplicas: UpdatedReplicas


class IoK8sApiAppsV1DeploymentStatus(BaseModel):
    description: str
    properties: Properties77
    type: str


class Properties78(BaseModel):
    rollingUpdate: RollingUpdate
    type: Type


class IoK8sApiAppsV1DeploymentStrategy(BaseModel):
    description: str
    properties: Properties78
    type: str


class Status9(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties79(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status9


class IoK8sApiAppsV1ReplicaSet(BaseModel):
    description: str
    properties: Properties79
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status10(BaseModel):
    description: str
    type: str


class Properties80(BaseModel):
    lastTransitionTime: LastTransitionTime
    message: Message
    reason: Reason
    status: Status10
    type: Type


class IoK8sApiAppsV1ReplicaSetCondition(BaseModel):
    description: str
    properties: Properties80
    required: List[str]
    type: str


class Items84(BaseModel):
    description: str
    items: Items83
    type: str


class Properties81(BaseModel):
    apiVersion: ApiVersion
    items: Items84
    kind: Kind
    metadata: Metadata


class IoK8sApiAppsV1ReplicaSetList(BaseModel):
    description: str
    properties: Properties81
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties82(BaseModel):
    minReadySeconds: MinReadySeconds
    replicas: Replicas
    selector: Selector
    template: Template


class IoK8sApiAppsV1ReplicaSetSpec(BaseModel):
    description: str
    properties: Properties82
    required: List[str]
    type: str


class Items86(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions6(BaseModel):
    description: str
    items: Items86
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class FullyLabeledReplicas(BaseModel):
    description: str
    format: str
    type: str


class Properties83(BaseModel):
    availableReplicas: AvailableReplicas
    conditions: Conditions6
    fullyLabeledReplicas: FullyLabeledReplicas
    observedGeneration: ObservedGeneration
    readyReplicas: ReadyReplicas
    replicas: Replicas


class IoK8sApiAppsV1ReplicaSetStatus(BaseModel):
    description: str
    properties: Properties83
    required: List[str]
    type: str


class MaxSurge(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class MaxUnavailable(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties84(BaseModel):
    maxSurge: MaxSurge
    maxUnavailable: MaxUnavailable


class IoK8sApiAppsV1RollingUpdateDaemonSet(BaseModel):
    description: str
    properties: Properties84
    type: str


class Properties85(BaseModel):
    maxSurge: MaxSurge
    maxUnavailable: MaxUnavailable


class IoK8sApiAppsV1RollingUpdateDeployment(BaseModel):
    description: str
    properties: Properties85
    type: str


class Partition(BaseModel):
    description: str
    format: str
    type: str


class Properties86(BaseModel):
    maxUnavailable: MaxUnavailable
    partition: Partition


class IoK8sApiAppsV1RollingUpdateStatefulSetStrategy(BaseModel):
    description: str
    properties: Properties86
    type: str


class Status11(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties87(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status11


class IoK8sApiAppsV1StatefulSet(BaseModel):
    description: str
    properties: Properties87
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status12(BaseModel):
    description: str
    type: str


class Properties88(BaseModel):
    lastTransitionTime: LastTransitionTime
    message: Message
    reason: Reason
    status: Status12
    type: Type


class IoK8sApiAppsV1StatefulSetCondition(BaseModel):
    description: str
    properties: Properties88
    required: List[str]
    type: str


class Items87(BaseModel):
    description: str
    items: Items86
    type: str


class Properties89(BaseModel):
    apiVersion: ApiVersion
    items: Items87
    kind: Kind
    metadata: Metadata


class IoK8sApiAppsV1StatefulSetList(BaseModel):
    description: str
    properties: Properties89
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Start(BaseModel):
    description: str
    format: str
    type: str


class Properties90(BaseModel):
    start: Start


class IoK8sApiAppsV1StatefulSetOrdinals(BaseModel):
    description: str
    properties: Properties90
    type: str


class WhenDeleted(BaseModel):
    description: str
    type: str


class WhenScaled(BaseModel):
    description: str
    type: str


class Properties91(BaseModel):
    whenDeleted: WhenDeleted
    whenScaled: WhenScaled


class IoK8sApiAppsV1StatefulSetPersistentVolumeClaimRetentionPolicy(BaseModel):
    description: str
    properties: Properties91
    type: str


class Ordinals(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PersistentVolumeClaimRetentionPolicy(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PodManagementPolicy(BaseModel):
    description: str
    type: str


class ServiceName(BaseModel):
    description: str
    type: str


class Items89(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class VolumeClaimTemplates(BaseModel):
    description: str
    items: Items89
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties92(BaseModel):
    minReadySeconds: MinReadySeconds
    ordinals: Ordinals
    persistentVolumeClaimRetentionPolicy: PersistentVolumeClaimRetentionPolicy
    podManagementPolicy: PodManagementPolicy
    replicas: Replicas
    revisionHistoryLimit: RevisionHistoryLimit
    selector: Selector
    serviceName: ServiceName
    template: Template
    updateStrategy: UpdateStrategy
    volumeClaimTemplates: VolumeClaimTemplates


class IoK8sApiAppsV1StatefulSetSpec(BaseModel):
    description: str
    properties: Properties92
    required: List[str]
    type: str


class Conditions7(BaseModel):
    description: str
    items: Items89
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class CurrentReplicas(BaseModel):
    description: str
    format: str
    type: str


class CurrentRevision(BaseModel):
    description: str
    type: str


class UpdateRevision(BaseModel):
    description: str
    type: str


class Properties93(BaseModel):
    availableReplicas: AvailableReplicas
    collisionCount: CollisionCount
    conditions: Conditions7
    currentReplicas: CurrentReplicas
    currentRevision: CurrentRevision
    observedGeneration: ObservedGeneration
    readyReplicas: ReadyReplicas
    replicas: Replicas
    updateRevision: UpdateRevision
    updatedReplicas: UpdatedReplicas


class IoK8sApiAppsV1StatefulSetStatus(BaseModel):
    description: str
    properties: Properties93
    required: List[str]
    type: str


class Properties94(BaseModel):
    rollingUpdate: RollingUpdate
    type: Type


class IoK8sApiAppsV1StatefulSetUpdateStrategy(BaseModel):
    description: str
    properties: Properties94
    type: str


class Uid(BaseModel):
    description: str
    type: str


class Properties95(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    name: Name
    uid: Uid


class IoK8sApiAuthenticationV1BoundObjectReference(BaseModel):
    description: str
    properties: Properties95
    type: str


class Status13(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties96(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    status: Status13


class IoK8sApiAuthenticationV1SelfSubjectReview(BaseModel):
    description: str
    properties: Properties96
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class UserInfo(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties97(BaseModel):
    userInfo: UserInfo


class IoK8sApiAuthenticationV1SelfSubjectReviewStatus(BaseModel):
    description: str
    properties: Properties97
    type: str


class Properties98(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status13


class IoK8sApiAuthenticationV1TokenRequest(BaseModel):
    description: str
    properties: Properties98
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items91(BaseModel):
    type: str


class Audiences(BaseModel):
    description: str
    items: Items91
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class BoundObjectRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ExpirationSeconds(BaseModel):
    description: str
    format: str
    type: str


class Properties99(BaseModel):
    audiences: Audiences
    boundObjectRef: BoundObjectRef
    expirationSeconds: ExpirationSeconds


class IoK8sApiAuthenticationV1TokenRequestSpec(BaseModel):
    description: str
    properties: Properties99
    required: List[str]
    type: str


class ExpirationTimestamp(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Token(BaseModel):
    description: str
    type: str


class Properties100(BaseModel):
    expirationTimestamp: ExpirationTimestamp
    token: Token


class IoK8sApiAuthenticationV1TokenRequestStatus(BaseModel):
    description: str
    properties: Properties100
    required: List[str]
    type: str


class Properties101(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status13


class IoK8sApiAuthenticationV1TokenReview(BaseModel):
    description: str
    properties: Properties101
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Audiences1(BaseModel):
    description: str
    items: Items91
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties102(BaseModel):
    audiences: Audiences1
    token: Token


class IoK8sApiAuthenticationV1TokenReviewSpec(BaseModel):
    description: str
    properties: Properties102
    type: str


class Audiences2(BaseModel):
    description: str
    items: Items91
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Authenticated(BaseModel):
    description: str
    type: str


class Error(BaseModel):
    description: str
    type: str


class User(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties103(BaseModel):
    audiences: Audiences2
    authenticated: Authenticated
    error: Error
    user: User


class IoK8sApiAuthenticationV1TokenReviewStatus(BaseModel):
    description: str
    properties: Properties103
    type: str


class AdditionalProperties(BaseModel):
    items: Items91
    type: str


class Extra(BaseModel):
    additionalProperties: AdditionalProperties
    description: str
    type: str


class Groups(BaseModel):
    description: str
    items: Items91
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Username(BaseModel):
    description: str
    type: str


class Properties104(BaseModel):
    extra: Extra
    groups: Groups
    uid: Uid
    username: Username


class IoK8sApiAuthenticationV1UserInfo(BaseModel):
    description: str
    properties: Properties104
    type: str


class Properties105(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    status: Status13


class IoK8sApiAuthenticationV1alpha1SelfSubjectReview(BaseModel):
    description: str
    properties: Properties105
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties106(BaseModel):
    userInfo: UserInfo


class IoK8sApiAuthenticationV1alpha1SelfSubjectReviewStatus(BaseModel):
    description: str
    properties: Properties106
    type: str


class Properties107(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    status: Status13


class IoK8sApiAuthenticationV1beta1SelfSubjectReview(BaseModel):
    description: str
    properties: Properties107
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties108(BaseModel):
    userInfo: UserInfo


class IoK8sApiAuthenticationV1beta1SelfSubjectReviewStatus(BaseModel):
    description: str
    properties: Properties108
    type: str


class RawSelector(BaseModel):
    description: str
    type: str


class Items96(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Requirements(BaseModel):
    description: str
    items: Items96
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties109(BaseModel):
    rawSelector: RawSelector
    requirements: Requirements


class IoK8sApiAuthorizationV1FieldSelectorAttributes(BaseModel):
    description: str
    properties: Properties109
    type: str


class Requirements1(BaseModel):
    description: str
    items: Items96
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties110(BaseModel):
    rawSelector: RawSelector
    requirements: Requirements1


class IoK8sApiAuthorizationV1LabelSelectorAttributes(BaseModel):
    description: str
    properties: Properties110
    type: str


class Properties111(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status13


class IoK8sApiAuthorizationV1LocalSubjectAccessReview(BaseModel):
    description: str
    properties: Properties111
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Verb(BaseModel):
    description: str
    type: str


class Properties112(BaseModel):
    path: Path
    verb: Verb


class IoK8sApiAuthorizationV1NonResourceAttributes(BaseModel):
    description: str
    properties: Properties112
    type: str


class Items98(BaseModel):
    type: str


class NonResourceURLs(BaseModel):
    description: str
    items: Items98
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Verbs(BaseModel):
    description: str
    items: Items98
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties113(BaseModel):
    nonResourceURLs: NonResourceURLs
    verbs: Verbs


class IoK8sApiAuthorizationV1NonResourceRule(BaseModel):
    description: str
    properties: Properties113
    required: List[str]
    type: str


class FieldSelector(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Group(BaseModel):
    description: str
    type: str


class LabelSelector(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Resource(BaseModel):
    description: str
    type: str


class Subresource(BaseModel):
    description: str
    type: str


class Version(BaseModel):
    description: str
    type: str


class Properties114(BaseModel):
    fieldSelector: FieldSelector
    group: Group
    labelSelector: LabelSelector
    name: Name
    namespace: Namespace
    resource: Resource
    subresource: Subresource
    verb: Verb
    version: Version


class IoK8sApiAuthorizationV1ResourceAttributes(BaseModel):
    description: str
    properties: Properties114
    type: str


class ApiGroups4(BaseModel):
    description: str
    items: Items98
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceNames3(BaseModel):
    description: str
    items: Items98
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Resources4(BaseModel):
    description: str
    items: Items98
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Verbs1(BaseModel):
    description: str
    items: Items98
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties115(BaseModel):
    apiGroups: ApiGroups4
    resourceNames: ResourceNames3
    resources: Resources4
    verbs: Verbs1


class IoK8sApiAuthorizationV1ResourceRule(BaseModel):
    description: str
    properties: Properties115
    required: List[str]
    type: str


class Properties116(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status13


class IoK8sApiAuthorizationV1SelfSubjectAccessReview(BaseModel):
    description: str
    properties: Properties116
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class NonResourceAttributes(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ResourceAttributes(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties117(BaseModel):
    nonResourceAttributes: NonResourceAttributes
    resourceAttributes: ResourceAttributes


class IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec(BaseModel):
    description: str
    properties: Properties117
    type: str


class Properties118(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status13


class IoK8sApiAuthorizationV1SelfSubjectRulesReview(BaseModel):
    description: str
    properties: Properties118
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties119(BaseModel):
    namespace: Namespace


class IoK8sApiAuthorizationV1SelfSubjectRulesReviewSpec(BaseModel):
    description: str
    properties: Properties119
    type: str


class Properties120(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status13


class IoK8sApiAuthorizationV1SubjectAccessReview(BaseModel):
    description: str
    properties: Properties120
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AdditionalProperties1(BaseModel):
    items: Items98
    type: str


class Extra1(BaseModel):
    additionalProperties: AdditionalProperties1
    description: str
    type: str


class Groups1(BaseModel):
    description: str
    items: Items98
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class User1(BaseModel):
    description: str
    type: str


class Properties121(BaseModel):
    extra: Extra1
    groups: Groups1
    nonResourceAttributes: NonResourceAttributes
    resourceAttributes: ResourceAttributes
    uid: Uid
    user: User1


class IoK8sApiAuthorizationV1SubjectAccessReviewSpec(BaseModel):
    description: str
    properties: Properties121
    type: str


class Allowed(BaseModel):
    description: str
    type: str


class Denied(BaseModel):
    description: str
    type: str


class EvaluationError(BaseModel):
    description: str
    type: str


class Properties122(BaseModel):
    allowed: Allowed
    denied: Denied
    evaluationError: EvaluationError
    reason: Reason


class IoK8sApiAuthorizationV1SubjectAccessReviewStatus(BaseModel):
    description: str
    properties: Properties122
    required: List[str]
    type: str


class Incomplete(BaseModel):
    description: str
    type: str


class Items106(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class NonResourceRules(BaseModel):
    description: str
    items: Items106
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceRules3(BaseModel):
    description: str
    items: Items106
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties123(BaseModel):
    evaluationError: EvaluationError
    incomplete: Incomplete
    nonResourceRules: NonResourceRules
    resourceRules: ResourceRules3


class IoK8sApiAuthorizationV1SubjectRulesReviewStatus(BaseModel):
    description: str
    properties: Properties123
    required: List[str]
    type: str


class Properties124(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    name: Name


class IoK8sApiAutoscalingV1CrossVersionObjectReference(BaseModel):
    description: str
    properties: Properties124
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties125(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status13


class IoK8sApiAutoscalingV1HorizontalPodAutoscaler(BaseModel):
    description: str
    properties: Properties125
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items108(BaseModel):
    description: str
    items: Items106
    type: str


class Properties126(BaseModel):
    apiVersion: ApiVersion
    items: Items108
    kind: Kind
    metadata: Metadata


class IoK8sApiAutoscalingV1HorizontalPodAutoscalerList(BaseModel):
    description: str
    properties: Properties126
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class MaxReplicas(BaseModel):
    description: str
    format: str
    type: str


class MinReplicas(BaseModel):
    description: str
    format: str
    type: str


class ScaleTargetRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class TargetCPUUtilizationPercentage(BaseModel):
    description: str
    format: str
    type: str


class Properties127(BaseModel):
    maxReplicas: MaxReplicas
    minReplicas: MinReplicas
    scaleTargetRef: ScaleTargetRef
    targetCPUUtilizationPercentage: TargetCPUUtilizationPercentage


class IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec(BaseModel):
    description: str
    properties: Properties127
    required: List[str]
    type: str


class CurrentCPUUtilizationPercentage(BaseModel):
    description: str
    format: str
    type: str


class DesiredReplicas(BaseModel):
    description: str
    format: str
    type: str


class LastScaleTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties128(BaseModel):
    currentCPUUtilizationPercentage: CurrentCPUUtilizationPercentage
    currentReplicas: CurrentReplicas
    desiredReplicas: DesiredReplicas
    lastScaleTime: LastScaleTime
    observedGeneration: ObservedGeneration


class IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus(BaseModel):
    description: str
    properties: Properties128
    required: List[str]
    type: str


class Properties129(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status13


class IoK8sApiAutoscalingV1Scale(BaseModel):
    description: str
    properties: Properties129
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties130(BaseModel):
    replicas: Replicas


class IoK8sApiAutoscalingV1ScaleSpec(BaseModel):
    description: str
    properties: Properties130
    type: str


class Selector7(BaseModel):
    description: str
    type: str


class Properties131(BaseModel):
    replicas: Replicas
    selector: Selector7


class IoK8sApiAutoscalingV1ScaleStatus(BaseModel):
    description: str
    properties: Properties131
    required: List[str]
    type: str


class Container(BaseModel):
    description: str
    type: str


class Target(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties132(BaseModel):
    container: Container
    name: Name
    target: Target


class IoK8sApiAutoscalingV2ContainerResourceMetricSource(BaseModel):
    description: str
    properties: Properties132
    required: List[str]
    type: str


class Current(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties133(BaseModel):
    container: Container
    current: Current
    name: Name


class IoK8sApiAutoscalingV2ContainerResourceMetricStatus(BaseModel):
    description: str
    properties: Properties133
    required: List[str]
    type: str


class Properties134(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    name: Name


class IoK8sApiAutoscalingV2CrossVersionObjectReference(BaseModel):
    description: str
    properties: Properties134
    required: List[str]
    type: str


class Metric(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties135(BaseModel):
    metric: Metric
    target: Target


class IoK8sApiAutoscalingV2ExternalMetricSource(BaseModel):
    description: str
    properties: Properties135
    required: List[str]
    type: str


class Properties136(BaseModel):
    current: Current
    metric: Metric


class IoK8sApiAutoscalingV2ExternalMetricStatus(BaseModel):
    description: str
    properties: Properties136
    required: List[str]
    type: str


class PeriodSeconds(BaseModel):
    description: str
    format: str
    type: str


class Value(BaseModel):
    description: str
    format: str
    type: str


class Properties137(BaseModel):
    periodSeconds: PeriodSeconds
    type: Type
    value: Value


class IoK8sApiAutoscalingV2HPAScalingPolicy(BaseModel):
    description: str
    properties: Properties137
    required: List[str]
    type: str


class Items110(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Policies(BaseModel):
    description: str
    items: Items110
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SelectPolicy(BaseModel):
    description: str
    type: str


class StabilizationWindowSeconds(BaseModel):
    description: str
    format: str
    type: str


class Properties138(BaseModel):
    policies: Policies
    selectPolicy: SelectPolicy
    stabilizationWindowSeconds: StabilizationWindowSeconds


class IoK8sApiAutoscalingV2HPAScalingRules(BaseModel):
    description: str
    properties: Properties138
    type: str


class Properties139(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status13


class IoK8sApiAutoscalingV2HorizontalPodAutoscaler(BaseModel):
    description: str
    properties: Properties139
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class ScaleDown(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ScaleUp(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties140(BaseModel):
    scaleDown: ScaleDown
    scaleUp: ScaleUp


class IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior(BaseModel):
    description: str
    properties: Properties140
    type: str


class Status25(BaseModel):
    description: str
    type: str


class Properties141(BaseModel):
    lastTransitionTime: LastTransitionTime
    message: Message
    reason: Reason
    status: Status25
    type: Type


class IoK8sApiAutoscalingV2HorizontalPodAutoscalerCondition(BaseModel):
    description: str
    properties: Properties141
    required: List[str]
    type: str


class Items111(BaseModel):
    description: str
    items: Items110
    type: str


class Properties142(BaseModel):
    apiVersion: ApiVersion
    items: Items111
    kind: Kind
    metadata: Metadata


class IoK8sApiAutoscalingV2HorizontalPodAutoscalerList(BaseModel):
    description: str
    properties: Properties142
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Behavior(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Items113(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Metrics(BaseModel):
    description: str
    items: Items113
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties143(BaseModel):
    behavior: Behavior
    maxReplicas: MaxReplicas
    metrics: Metrics
    minReplicas: MinReplicas
    scaleTargetRef: ScaleTargetRef


class IoK8sApiAutoscalingV2HorizontalPodAutoscalerSpec(BaseModel):
    description: str
    properties: Properties143
    required: List[str]
    type: str


class Conditions8(BaseModel):
    description: str
    items: Items113
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class CurrentMetrics(BaseModel):
    description: str
    items: Items113
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties144(BaseModel):
    conditions: Conditions8
    currentMetrics: CurrentMetrics
    currentReplicas: CurrentReplicas
    desiredReplicas: DesiredReplicas
    lastScaleTime: LastScaleTime
    observedGeneration: ObservedGeneration


class IoK8sApiAutoscalingV2HorizontalPodAutoscalerStatus(BaseModel):
    description: str
    properties: Properties144
    required: List[str]
    type: str


class Selector8(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties145(BaseModel):
    name: Name
    selector: Selector8


class IoK8sApiAutoscalingV2MetricIdentifier(BaseModel):
    description: str
    properties: Properties145
    required: List[str]
    type: str


class ContainerResource(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class External(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Object(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Pods(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Resource1(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties146(BaseModel):
    containerResource: ContainerResource
    external: External
    object: Object
    pods: Pods
    resource: Resource1
    type: Type


class IoK8sApiAutoscalingV2MetricSpec(BaseModel):
    description: str
    properties: Properties146
    required: List[str]
    type: str


class Properties147(BaseModel):
    containerResource: ContainerResource
    external: External
    object: Object
    pods: Pods
    resource: Resource1
    type: Type


class IoK8sApiAutoscalingV2MetricStatus(BaseModel):
    description: str
    properties: Properties147
    required: List[str]
    type: str


class AverageUtilization(BaseModel):
    description: str
    format: str
    type: str


class AverageValue(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Value1(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties148(BaseModel):
    averageUtilization: AverageUtilization
    averageValue: AverageValue
    type: Type
    value: Value1


class IoK8sApiAutoscalingV2MetricTarget(BaseModel):
    description: str
    properties: Properties148
    required: List[str]
    type: str


class Properties149(BaseModel):
    averageUtilization: AverageUtilization
    averageValue: AverageValue
    value: Value1


class IoK8sApiAutoscalingV2MetricValueStatus(BaseModel):
    description: str
    properties: Properties149
    type: str


class DescribedObject(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties150(BaseModel):
    describedObject: DescribedObject
    metric: Metric
    target: Target


class IoK8sApiAutoscalingV2ObjectMetricSource(BaseModel):
    description: str
    properties: Properties150
    required: List[str]
    type: str


class Properties151(BaseModel):
    current: Current
    describedObject: DescribedObject
    metric: Metric


class IoK8sApiAutoscalingV2ObjectMetricStatus(BaseModel):
    description: str
    properties: Properties151
    required: List[str]
    type: str


class Properties152(BaseModel):
    metric: Metric
    target: Target


class IoK8sApiAutoscalingV2PodsMetricSource(BaseModel):
    description: str
    properties: Properties152
    required: List[str]
    type: str


class Properties153(BaseModel):
    current: Current
    metric: Metric


class IoK8sApiAutoscalingV2PodsMetricStatus(BaseModel):
    description: str
    properties: Properties153
    required: List[str]
    type: str


class Properties154(BaseModel):
    name: Name
    target: Target


class IoK8sApiAutoscalingV2ResourceMetricSource(BaseModel):
    description: str
    properties: Properties154
    required: List[str]
    type: str


class Properties155(BaseModel):
    current: Current
    name: Name


class IoK8sApiAutoscalingV2ResourceMetricStatus(BaseModel):
    description: str
    properties: Properties155
    required: List[str]
    type: str


class Status26(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties156(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status26


class IoK8sApiBatchV1CronJob(BaseModel):
    description: str
    properties: Properties156
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items116(BaseModel):
    description: str
    items: Items113
    type: str


class Properties157(BaseModel):
    apiVersion: ApiVersion
    items: Items116
    kind: Kind
    metadata: Metadata


class IoK8sApiBatchV1CronJobList(BaseModel):
    description: str
    properties: Properties157
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class ConcurrencyPolicy(BaseModel):
    description: str
    type: str


class FailedJobsHistoryLimit(BaseModel):
    description: str
    format: str
    type: str


class JobTemplate(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Schedule(BaseModel):
    description: str
    type: str


class StartingDeadlineSeconds(BaseModel):
    description: str
    format: str
    type: str


class SuccessfulJobsHistoryLimit(BaseModel):
    description: str
    format: str
    type: str


class Suspend(BaseModel):
    description: str
    type: str


class TimeZone(BaseModel):
    description: str
    type: str


class Properties158(BaseModel):
    concurrencyPolicy: ConcurrencyPolicy
    failedJobsHistoryLimit: FailedJobsHistoryLimit
    jobTemplate: JobTemplate
    schedule: Schedule
    startingDeadlineSeconds: StartingDeadlineSeconds
    successfulJobsHistoryLimit: SuccessfulJobsHistoryLimit
    suspend: Suspend
    timeZone: TimeZone


class IoK8sApiBatchV1CronJobSpec(BaseModel):
    description: str
    properties: Properties158
    required: List[str]
    type: str


class Items118(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Active(BaseModel):
    description: str
    items: Items118
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class LastScheduleTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class LastSuccessfulTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties159(BaseModel):
    active: Active
    lastScheduleTime: LastScheduleTime
    lastSuccessfulTime: LastSuccessfulTime


class IoK8sApiBatchV1CronJobStatus(BaseModel):
    description: str
    properties: Properties159
    type: str


class Properties160(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata
    spec: Spec
    status: Status26


class IoK8sApiBatchV1Job(BaseModel):
    description: str
    properties: Properties160
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class LastProbeTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Status28(BaseModel):
    description: str
    type: str


class Properties161(BaseModel):
    lastProbeTime: LastProbeTime
    lastTransitionTime: LastTransitionTime
    message: Message
    reason: Reason
    status: Status28
    type: Type


class IoK8sApiBatchV1JobCondition(BaseModel):
    description: str
    properties: Properties161
    required: List[str]
    type: str


class Items119(BaseModel):
    description: str
    items: Items118
    type: str


class Properties162(BaseModel):
    apiVersion: ApiVersion
    items: Items119
    kind: Kind
    metadata: Metadata


class IoK8sApiBatchV1JobList(BaseModel):
    description: str
    properties: Properties162
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class ActiveDeadlineSeconds(BaseModel):
    description: str
    format: str
    type: str


class BackoffLimit(BaseModel):
    description: str
    format: str
    type: str


class BackoffLimitPerIndex(BaseModel):
    description: str
    format: str
    type: str


class CompletionMode(BaseModel):
    description: str
    type: str


class Completions(BaseModel):
    description: str
    format: str
    type: str


class ManagedBy(BaseModel):
    description: str
    type: str


class ManualSelector(BaseModel):
    description: str
    type: str


class MaxFailedIndexes(BaseModel):
    description: str
    format: str
    type: str


class Parallelism(BaseModel):
    description: str
    format: str
    type: str


class PodFailurePolicy(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PodReplacementPolicy(BaseModel):
    description: str
    type: str


class SuccessPolicy(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class TtlSecondsAfterFinished(BaseModel):
    description: str
    format: str
    type: str


class Properties163(BaseModel):
    activeDeadlineSeconds: ActiveDeadlineSeconds
    backoffLimit: BackoffLimit
    backoffLimitPerIndex: BackoffLimitPerIndex
    completionMode: CompletionMode
    completions: Completions
    managedBy: ManagedBy
    manualSelector: ManualSelector
    maxFailedIndexes: MaxFailedIndexes
    parallelism: Parallelism
    podFailurePolicy: PodFailurePolicy
    podReplacementPolicy: PodReplacementPolicy
    selector: Selector8
    successPolicy: SuccessPolicy
    suspend: Suspend
    template: Template
    ttlSecondsAfterFinished: TtlSecondsAfterFinished


class IoK8sApiBatchV1JobSpec(BaseModel):
    description: str
    properties: Properties163
    required: List[str]
    type: str


class Active1(BaseModel):
    description: str
    format: str
    type: str


class CompletedIndexes(BaseModel):
    description: str
    type: str


class CompletionTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Items121(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions9(BaseModel):
    description: str
    items: Items121
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Failed(BaseModel):
    description: str
    format: str
    type: str


class FailedIndexes(BaseModel):
    description: str
    type: str


class Ready(BaseModel):
    description: str
    format: str
    type: str


class StartTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Succeeded(BaseModel):
    description: str
    format: str
    type: str


class Terminating(BaseModel):
    description: str
    format: str
    type: str


class UncountedTerminatedPods(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties164(BaseModel):
    active: Active1
    completedIndexes: CompletedIndexes
    completionTime: CompletionTime
    conditions: Conditions9
    failed: Failed
    failedIndexes: FailedIndexes
    ready: Ready
    startTime: StartTime
    succeeded: Succeeded
    terminating: Terminating
    uncountedTerminatedPods: UncountedTerminatedPods


class IoK8sApiBatchV1JobStatus(BaseModel):
    description: str
    properties: Properties164
    type: str


class Properties165(BaseModel):
    metadata: Metadata
    spec: Spec


class IoK8sApiBatchV1JobTemplateSpec(BaseModel):
    description: str
    properties: Properties165
    type: str


class Rules2(BaseModel):
    description: str
    items: Items121
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties166(BaseModel):
    rules: Rules2


class IoK8sApiBatchV1PodFailurePolicy(BaseModel):
    description: str
    properties: Properties166
    required: List[str]
    type: str


class ContainerName(BaseModel):
    description: str
    type: str


class Operator(BaseModel):
    description: str
    type: str


class Items123(BaseModel):
    format: str
    type: str


class Values(BaseModel):
    description: str
    items: Items123
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties167(BaseModel):
    containerName: ContainerName
    operator: Operator
    values: Values


class IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement(BaseModel):
    description: str
    properties: Properties167
    required: List[str]
    type: str


class Properties168(BaseModel):
    status: Status28
    type: Type


class IoK8sApiBatchV1PodFailurePolicyOnPodConditionsPattern(BaseModel):
    description: str
    properties: Properties168
    required: List[str]
    type: str


class Action(BaseModel):
    description: str
    type: str


class OnExitCodes(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Items124(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class OnPodConditions(BaseModel):
    description: str
    items: Items124
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties169(BaseModel):
    action: Action
    onExitCodes: OnExitCodes
    onPodConditions: OnPodConditions


class IoK8sApiBatchV1PodFailurePolicyRule(BaseModel):
    description: str
    properties: Properties169
    required: List[str]
    type: str


class Rules3(BaseModel):
    description: str
    items: Items124
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties170(BaseModel):
    rules: Rules3


class IoK8sApiBatchV1SuccessPolicy(BaseModel):
    description: str
    properties: Properties170
    required: List[str]
    type: str


class SucceededCount(BaseModel):
    description: str
    format: str
    type: str


class SucceededIndexes(BaseModel):
    description: str
    type: str


class Properties171(BaseModel):
    succeededCount: SucceededCount
    succeededIndexes: SucceededIndexes


class IoK8sApiBatchV1SuccessPolicyRule(BaseModel):
    description: str
    properties: Properties171
    type: str


class Items126(BaseModel):
    type: str


class Failed1(BaseModel):
    description: str
    items: Items126
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Succeeded1(BaseModel):
    description: str
    items: Items126
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties172(BaseModel):
    failed: Failed1
    succeeded: Succeeded1


class IoK8sApiBatchV1UncountedTerminatedPods(BaseModel):
    description: str
    properties: Properties172
    type: str


class Metadata47(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Status30(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties173(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata47
    spec: Spec
    status: Status30


class IoK8sApiCertificatesV1CertificateSigningRequest(BaseModel):
    description: str
    properties: Properties173
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status31(BaseModel):
    description: str
    type: str


class Properties174(BaseModel):
    lastTransitionTime: LastTransitionTime
    lastUpdateTime: LastUpdateTime
    message: Message
    reason: Reason
    status: Status31
    type: Type


class IoK8sApiCertificatesV1CertificateSigningRequestCondition(BaseModel):
    description: str
    properties: Properties174
    required: List[str]
    type: str


class Items129(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items128(BaseModel):
    description: str
    items: Items129
    type: str


class Properties175(BaseModel):
    apiVersion: ApiVersion
    items: Items128
    kind: Kind
    metadata: Metadata47


class IoK8sApiCertificatesV1CertificateSigningRequestList(BaseModel):
    description: str
    properties: Properties175
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items130(BaseModel):
    type: str


class AdditionalProperties2(BaseModel):
    items: Items130
    type: str


class Extra2(BaseModel):
    additionalProperties: AdditionalProperties2
    description: str
    type: str


class Groups2(BaseModel):
    description: str
    items: Items130
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Request(BaseModel):
    description: str
    format: str
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SignerName(BaseModel):
    description: str
    type: str


class Usages(BaseModel):
    description: str
    items: Items130
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties176(BaseModel):
    expirationSeconds: ExpirationSeconds
    extra: Extra2
    groups: Groups2
    request: Request
    signerName: SignerName
    uid: Uid
    usages: Usages
    username: Username


class IoK8sApiCertificatesV1CertificateSigningRequestSpec(BaseModel):
    description: str
    properties: Properties176
    required: List[str]
    type: str


class Certificate(BaseModel):
    description: str
    format: str
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items133(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions10(BaseModel):
    description: str
    items: Items133
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties177(BaseModel):
    certificate: Certificate
    conditions: Conditions10


class IoK8sApiCertificatesV1CertificateSigningRequestStatus(BaseModel):
    description: str
    properties: Properties177
    type: str


class Metadata49(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties178(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiCertificatesV1alpha1ClusterTrustBundle(BaseModel):
    description: str
    properties: Properties178
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items134(BaseModel):
    description: str
    items: Items133
    type: str


class Properties179(BaseModel):
    apiVersion: ApiVersion
    items: Items134
    kind: Kind
    metadata: Metadata49


class IoK8sApiCertificatesV1alpha1ClusterTrustBundleList(BaseModel):
    description: str
    properties: Properties179
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class TrustBundle(BaseModel):
    description: str
    type: str


class Properties180(BaseModel):
    signerName: SignerName
    trustBundle: TrustBundle


class IoK8sApiCertificatesV1alpha1ClusterTrustBundleSpec(BaseModel):
    description: str
    properties: Properties180
    required: List[str]
    type: str


class Properties181(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiCoordinationV1Lease(BaseModel):
    description: str
    properties: Properties181
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items137(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items136(BaseModel):
    description: str
    items: Items137
    type: str


class Properties182(BaseModel):
    apiVersion: ApiVersion
    items: Items136
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoordinationV1LeaseList(BaseModel):
    description: str
    properties: Properties182
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AcquireTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class HolderIdentity(BaseModel):
    description: str
    type: str


class LeaseDurationSeconds(BaseModel):
    description: str
    format: str
    type: str


class LeaseTransitions(BaseModel):
    description: str
    format: str
    type: str


class PreferredHolder(BaseModel):
    description: str
    type: str


class RenewTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Strategy1(BaseModel):
    description: str
    type: str


class Properties183(BaseModel):
    acquireTime: AcquireTime
    holderIdentity: HolderIdentity
    leaseDurationSeconds: LeaseDurationSeconds
    leaseTransitions: LeaseTransitions
    preferredHolder: PreferredHolder
    renewTime: RenewTime
    strategy: Strategy1


class IoK8sApiCoordinationV1LeaseSpec(BaseModel):
    description: str
    properties: Properties183
    type: str


class Properties184(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiCoordinationV1alpha1LeaseCandidate(BaseModel):
    description: str
    properties: Properties184
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items139(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items138(BaseModel):
    description: str
    items: Items139
    type: str


class Properties185(BaseModel):
    apiVersion: ApiVersion
    items: Items138
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoordinationV1alpha1LeaseCandidateList(BaseModel):
    description: str
    properties: Properties185
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class BinaryVersion(BaseModel):
    description: str
    type: str


class EmulationVersion(BaseModel):
    description: str
    type: str


class LeaseName(BaseModel):
    description: str
    type: str


class PingTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Items140(BaseModel):
    type: str


class PreferredStrategies(BaseModel):
    description: str
    items: Items140
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties186(BaseModel):
    binaryVersion: BinaryVersion
    emulationVersion: EmulationVersion
    leaseName: LeaseName
    pingTime: PingTime
    preferredStrategies: PreferredStrategies
    renewTime: RenewTime


class IoK8sApiCoordinationV1alpha1LeaseCandidateSpec(BaseModel):
    description: str
    properties: Properties186
    required: List[str]
    type: str


class FsType(BaseModel):
    description: str
    type: str


class ReadOnly(BaseModel):
    description: str
    type: str


class VolumeID(BaseModel):
    description: str
    type: str


class Properties187(BaseModel):
    fsType: FsType
    partition: Partition
    readOnly: ReadOnly
    volumeID: VolumeID


class IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource(BaseModel):
    description: str
    properties: Properties187
    required: List[str]
    type: str


class NodeAffinity(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PodAffinity(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PodAntiAffinity(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties188(BaseModel):
    nodeAffinity: NodeAffinity
    podAffinity: PodAffinity
    podAntiAffinity: PodAntiAffinity


class IoK8sApiCoreV1Affinity(BaseModel):
    description: str
    properties: Properties188
    type: str


class LocalhostProfile(BaseModel):
    description: str
    type: str


class Properties189(BaseModel):
    localhostProfile: LocalhostProfile
    type: Type


class FieldsToDiscriminateBy(BaseModel):
    localhostProfile: str


class XKubernetesUnion(BaseModel):
    discriminator: str
    fields_to_discriminateBy: FieldsToDiscriminateBy = Field(
        ..., alias='fields-to-discriminateBy'
    )


class IoK8sApiCoreV1AppArmorProfile(BaseModel):
    description: str
    properties: Properties189
    required: List[str]
    type: str
    x_kubernetes_unions: List[XKubernetesUnion] = Field(
        ..., alias='x-kubernetes-unions'
    )


class DevicePath(BaseModel):
    description: str
    type: str


class Properties190(BaseModel):
    devicePath: DevicePath
    name: Name


class IoK8sApiCoreV1AttachedVolume(BaseModel):
    description: str
    properties: Properties190
    required: List[str]
    type: str


class CachingMode(BaseModel):
    description: str
    type: str


class DiskName(BaseModel):
    description: str
    type: str


class DiskURI(BaseModel):
    description: str
    type: str


class Properties191(BaseModel):
    cachingMode: CachingMode
    diskName: DiskName
    diskURI: DiskURI
    fsType: FsType
    kind: Kind
    readOnly: ReadOnly


class IoK8sApiCoreV1AzureDiskVolumeSource(BaseModel):
    description: str
    properties: Properties191
    required: List[str]
    type: str


class SecretName(BaseModel):
    description: str
    type: str


class SecretNamespace(BaseModel):
    description: str
    type: str


class ShareName(BaseModel):
    description: str
    type: str


class Properties192(BaseModel):
    readOnly: ReadOnly
    secretName: SecretName
    secretNamespace: SecretNamespace
    shareName: ShareName


class IoK8sApiCoreV1AzureFilePersistentVolumeSource(BaseModel):
    description: str
    properties: Properties192
    required: List[str]
    type: str


class Properties193(BaseModel):
    readOnly: ReadOnly
    secretName: SecretName
    shareName: ShareName


class IoK8sApiCoreV1AzureFileVolumeSource(BaseModel):
    description: str
    properties: Properties193
    required: List[str]
    type: str


class Properties194(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    target: Target


class IoK8sApiCoreV1Binding(BaseModel):
    description: str
    properties: Properties194
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class ControllerExpandSecretRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ControllerPublishSecretRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Driver(BaseModel):
    description: str
    type: str


class NodeExpandSecretRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class NodePublishSecretRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class NodeStageSecretRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class AdditionalProperties3(BaseModel):
    type: str


class VolumeAttributes(BaseModel):
    additionalProperties: AdditionalProperties3
    description: str
    type: str


class VolumeHandle(BaseModel):
    description: str
    type: str


class Properties195(BaseModel):
    controllerExpandSecretRef: ControllerExpandSecretRef
    controllerPublishSecretRef: ControllerPublishSecretRef
    driver: Driver
    fsType: FsType
    nodeExpandSecretRef: NodeExpandSecretRef
    nodePublishSecretRef: NodePublishSecretRef
    nodeStageSecretRef: NodeStageSecretRef
    readOnly: ReadOnly
    volumeAttributes: VolumeAttributes
    volumeHandle: VolumeHandle


class IoK8sApiCoreV1CSIPersistentVolumeSource(BaseModel):
    description: str
    properties: Properties195
    required: List[str]
    type: str


class VolumeAttributes1(BaseModel):
    additionalProperties: AdditionalProperties3
    description: str
    type: str


class Properties196(BaseModel):
    driver: Driver
    fsType: FsType
    nodePublishSecretRef: NodePublishSecretRef
    readOnly: ReadOnly
    volumeAttributes: VolumeAttributes1


class IoK8sApiCoreV1CSIVolumeSource(BaseModel):
    description: str
    properties: Properties196
    required: List[str]
    type: str


class Add(BaseModel):
    description: str
    items: Items140
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Drop(BaseModel):
    description: str
    items: Items140
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties197(BaseModel):
    add: Add
    drop: Drop


class IoK8sApiCoreV1Capabilities(BaseModel):
    description: str
    properties: Properties197
    type: str


class Monitors(BaseModel):
    description: str
    items: Items140
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SecretFile(BaseModel):
    description: str
    type: str


class SecretRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties198(BaseModel):
    monitors: Monitors
    path: Path
    readOnly: ReadOnly
    secretFile: SecretFile
    secretRef: SecretRef
    user: User1


class IoK8sApiCoreV1CephFSPersistentVolumeSource(BaseModel):
    description: str
    properties: Properties198
    required: List[str]
    type: str


class Monitors1(BaseModel):
    description: str
    items: Items140
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties199(BaseModel):
    monitors: Monitors1
    path: Path
    readOnly: ReadOnly
    secretFile: SecretFile
    secretRef: SecretRef
    user: User1


class IoK8sApiCoreV1CephFSVolumeSource(BaseModel):
    description: str
    properties: Properties199
    required: List[str]
    type: str


class Properties200(BaseModel):
    fsType: FsType
    readOnly: ReadOnly
    secretRef: SecretRef
    volumeID: VolumeID


class IoK8sApiCoreV1CinderPersistentVolumeSource(BaseModel):
    description: str
    properties: Properties200
    required: List[str]
    type: str


class Properties201(BaseModel):
    fsType: FsType
    readOnly: ReadOnly
    secretRef: SecretRef
    volumeID: VolumeID


class IoK8sApiCoreV1CinderVolumeSource(BaseModel):
    description: str
    properties: Properties201
    required: List[str]
    type: str


class Properties202(BaseModel):
    timeoutSeconds: TimeoutSeconds


class IoK8sApiCoreV1ClientIPConfig(BaseModel):
    description: str
    properties: Properties202
    type: str


class OptionalModel(BaseModel):
    description: str
    type: str


class Properties203(BaseModel):
    labelSelector: LabelSelector
    name: Name
    optional: OptionalModel
    path: Path
    signerName: SignerName


class IoK8sApiCoreV1ClusterTrustBundleProjection(BaseModel):
    description: str
    properties: Properties203
    required: List[str]
    type: str


class Properties204(BaseModel):
    error: Error
    message: Message
    status: Status31
    type: Type


class IoK8sApiCoreV1ComponentCondition(BaseModel):
    description: str
    properties: Properties204
    required: List[str]
    type: str


class Items145(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions11(BaseModel):
    description: str
    items: Items145
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties205(BaseModel):
    apiVersion: ApiVersion
    conditions: Conditions11
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1ComponentStatus(BaseModel):
    description: str
    properties: Properties205
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items146(BaseModel):
    description: str
    items: Items145
    type: str


class Properties206(BaseModel):
    apiVersion: ApiVersion
    items: Items146
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1ComponentStatusList(BaseModel):
    description: str
    properties: Properties206
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AdditionalProperties5(BaseModel):
    format: str
    type: str


class BinaryData(BaseModel):
    additionalProperties: AdditionalProperties5
    description: str
    type: str


class AdditionalProperties6(BaseModel):
    type: str


class Data1(BaseModel):
    additionalProperties: AdditionalProperties6
    description: str
    type: str


class Immutable(BaseModel):
    description: str
    type: str


class Properties207(BaseModel):
    apiVersion: ApiVersion
    binaryData: BinaryData
    data: Data1
    immutable: Immutable
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1ConfigMap(BaseModel):
    description: str
    properties: Properties207
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties208(BaseModel):
    name: Name
    optional: OptionalModel


class IoK8sApiCoreV1ConfigMapEnvSource(BaseModel):
    description: str
    properties: Properties208
    type: str


class Properties209(BaseModel):
    key: Key
    name: Name
    optional: OptionalModel


class IoK8sApiCoreV1ConfigMapKeySelector(BaseModel):
    description: str
    properties: Properties209
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items149(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items148(BaseModel):
    description: str
    items: Items149
    type: str


class Properties210(BaseModel):
    apiVersion: ApiVersion
    items: Items148
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1ConfigMapList(BaseModel):
    description: str
    properties: Properties210
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class KubeletConfigKey(BaseModel):
    description: str
    type: str


class ResourceVersion(BaseModel):
    description: str
    type: str


class Properties211(BaseModel):
    kubeletConfigKey: KubeletConfigKey
    name: Name
    namespace: Namespace
    resourceVersion: ResourceVersion
    uid: Uid


class IoK8sApiCoreV1ConfigMapNodeConfigSource(BaseModel):
    description: str
    properties: Properties211
    required: List[str]
    type: str


class Items151(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items150(BaseModel):
    description: str
    items: Items151
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties212(BaseModel):
    items: Items150
    name: Name
    optional: OptionalModel


class IoK8sApiCoreV1ConfigMapProjection(BaseModel):
    description: str
    properties: Properties212
    type: str


class DefaultMode(BaseModel):
    description: str
    format: str
    type: str


class Items153(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items152(BaseModel):
    description: str
    items: Items153
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties213(BaseModel):
    defaultMode: DefaultMode
    items: Items152
    name: Name
    optional: OptionalModel


class IoK8sApiCoreV1ConfigMapVolumeSource(BaseModel):
    description: str
    properties: Properties213
    type: str


class Items154(BaseModel):
    type: str


class Args(BaseModel):
    description: str
    items: Items154
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Command(BaseModel):
    description: str
    items: Items154
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items156(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Env(BaseModel):
    description: str
    items: Items156
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class EnvFrom(BaseModel):
    description: str
    items: Items156
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Image(BaseModel):
    description: str
    type: str


class ImagePullPolicy(BaseModel):
    description: str
    type: str


class Lifecycle(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class LivenessProbe(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Ports(BaseModel):
    description: str
    items: Items156
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class ReadinessProbe(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ResizePolicy(BaseModel):
    description: str
    items: Items156
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Resources5(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class RestartPolicy(BaseModel):
    description: str
    type: str


class SecurityContext(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class StartupProbe(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Stdin(BaseModel):
    description: str
    type: str


class StdinOnce(BaseModel):
    description: str
    type: str


class TerminationMessagePath(BaseModel):
    description: str
    type: str


class TerminationMessagePolicy(BaseModel):
    description: str
    type: str


class Tty(BaseModel):
    description: str
    type: str


class VolumeDevices(BaseModel):
    description: str
    items: Items156
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class VolumeMounts(BaseModel):
    description: str
    items: Items156
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class WorkingDir(BaseModel):
    description: str
    type: str


class Properties214(BaseModel):
    args: Args
    command: Command
    env: Env
    envFrom: EnvFrom
    image: Image
    imagePullPolicy: ImagePullPolicy
    lifecycle: Lifecycle
    livenessProbe: LivenessProbe
    name: Name
    ports: Ports
    readinessProbe: ReadinessProbe
    resizePolicy: ResizePolicy
    resources: Resources5
    restartPolicy: RestartPolicy
    securityContext: SecurityContext
    startupProbe: StartupProbe
    stdin: Stdin
    stdinOnce: StdinOnce
    terminationMessagePath: TerminationMessagePath
    terminationMessagePolicy: TerminationMessagePolicy
    tty: Tty
    volumeDevices: VolumeDevices
    volumeMounts: VolumeMounts
    workingDir: WorkingDir


class IoK8sApiCoreV1Container(BaseModel):
    description: str
    properties: Properties214
    required: List[str]
    type: str


class Items162(BaseModel):
    type: str


class Names(BaseModel):
    description: str
    items: Items162
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SizeBytes(BaseModel):
    description: str
    format: str
    type: str


class Properties215(BaseModel):
    names: Names
    sizeBytes: SizeBytes


class IoK8sApiCoreV1ContainerImage(BaseModel):
    description: str
    properties: Properties215
    type: str


class ContainerPort(BaseModel):
    description: str
    format: str
    type: str


class HostIP(BaseModel):
    description: str
    type: str


class HostPort(BaseModel):
    description: str
    format: str
    type: str


class Protocol(BaseModel):
    description: str
    type: str


class Properties216(BaseModel):
    containerPort: ContainerPort
    hostIP: HostIP
    hostPort: HostPort
    name: Name
    protocol: Protocol


class IoK8sApiCoreV1ContainerPort(BaseModel):
    description: str
    properties: Properties216
    required: List[str]
    type: str


class ResourceName(BaseModel):
    description: str
    type: str


class Properties217(BaseModel):
    resourceName: ResourceName
    restartPolicy: RestartPolicy


class IoK8sApiCoreV1ContainerResizePolicy(BaseModel):
    description: str
    properties: Properties217
    required: List[str]
    type: str


class Running(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Terminated(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Waiting(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties218(BaseModel):
    running: Running
    terminated: Terminated
    waiting: Waiting


class IoK8sApiCoreV1ContainerState(BaseModel):
    description: str
    properties: Properties218
    type: str


class StartedAt(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties219(BaseModel):
    startedAt: StartedAt


class IoK8sApiCoreV1ContainerStateRunning(BaseModel):
    description: str
    properties: Properties219
    type: str


class ContainerID(BaseModel):
    description: str
    type: str


class ExitCode(BaseModel):
    description: str
    format: str
    type: str


class FinishedAt(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Signal(BaseModel):
    description: str
    format: str
    type: str


class Properties220(BaseModel):
    containerID: ContainerID
    exitCode: ExitCode
    finishedAt: FinishedAt
    message: Message
    reason: Reason
    signal: Signal
    startedAt: StartedAt


class IoK8sApiCoreV1ContainerStateTerminated(BaseModel):
    description: str
    properties: Properties220
    required: List[str]
    type: str


class Properties221(BaseModel):
    message: Message
    reason: Reason


class IoK8sApiCoreV1ContainerStateWaiting(BaseModel):
    description: str
    properties: Properties221
    type: str


class AdditionalProperties7(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AllocatedResources(BaseModel):
    additionalProperties: AdditionalProperties7
    description: str
    type: str


class Items163(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AllocatedResourcesStatus(BaseModel):
    description: str
    items: Items163
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class ImageID(BaseModel):
    description: str
    type: str


class LastState(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Ready1(BaseModel):
    description: str
    type: str


class RestartCount(BaseModel):
    description: str
    format: str
    type: str


class Started(BaseModel):
    description: str
    type: str


class State(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class User4(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class VolumeMounts1(BaseModel):
    description: str
    items: Items163
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties222(BaseModel):
    allocatedResources: AllocatedResources
    allocatedResourcesStatus: AllocatedResourcesStatus
    containerID: ContainerID
    image: Image
    imageID: ImageID
    lastState: LastState
    name: Name
    ready: Ready1
    resources: Resources5
    restartCount: RestartCount
    started: Started
    state: State
    user: User4
    volumeMounts: VolumeMounts1


class IoK8sApiCoreV1ContainerStatus(BaseModel):
    description: str
    properties: Properties222
    required: List[str]
    type: str


class Linux(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties223(BaseModel):
    linux: Linux


class IoK8sApiCoreV1ContainerUser(BaseModel):
    description: str
    properties: Properties223
    type: str


class Properties224(BaseModel):
    Port: Port


class IoK8sApiCoreV1DaemonEndpoint(BaseModel):
    description: str
    properties: Properties224
    required: List[str]
    type: str


class Items165(BaseModel):
    description: str
    items: Items163
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties225(BaseModel):
    items: Items165


class IoK8sApiCoreV1DownwardAPIProjection(BaseModel):
    description: str
    properties: Properties225
    type: str


class FieldRef3(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Mode(BaseModel):
    description: str
    format: str
    type: str


class ResourceFieldRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties226(BaseModel):
    fieldRef: FieldRef3
    mode: Mode
    path: Path
    resourceFieldRef: ResourceFieldRef


class IoK8sApiCoreV1DownwardAPIVolumeFile(BaseModel):
    description: str
    properties: Properties226
    required: List[str]
    type: str


class Items168(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items167(BaseModel):
    description: str
    items: Items168
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties227(BaseModel):
    defaultMode: DefaultMode
    items: Items167


class IoK8sApiCoreV1DownwardAPIVolumeSource(BaseModel):
    description: str
    properties: Properties227
    type: str


class Medium(BaseModel):
    description: str
    type: str


class SizeLimit(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties228(BaseModel):
    medium: Medium
    sizeLimit: SizeLimit


class IoK8sApiCoreV1EmptyDirVolumeSource(BaseModel):
    description: str
    properties: Properties228
    type: str


class Hostname(BaseModel):
    description: str
    type: str


class Ip(BaseModel):
    description: str
    type: str


class NodeName(BaseModel):
    description: str
    type: str


class TargetRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties229(BaseModel):
    hostname: Hostname
    ip: Ip
    nodeName: NodeName
    targetRef: TargetRef


class IoK8sApiCoreV1EndpointAddress(BaseModel):
    description: str
    properties: Properties229
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class AppProtocol(BaseModel):
    description: str
    type: str


class Properties230(BaseModel):
    appProtocol: AppProtocol
    name: Name
    port: Port
    protocol: Protocol


class IoK8sApiCoreV1EndpointPort(BaseModel):
    description: str
    properties: Properties230
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items169(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Addresses(BaseModel):
    description: str
    items: Items169
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class NotReadyAddresses(BaseModel):
    description: str
    items: Items169
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Ports1(BaseModel):
    description: str
    items: Items169
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties231(BaseModel):
    addresses: Addresses
    notReadyAddresses: NotReadyAddresses
    ports: Ports1


class IoK8sApiCoreV1EndpointSubset(BaseModel):
    description: str
    properties: Properties231
    type: str


class Subsets(BaseModel):
    description: str
    items: Items169
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties232(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    subsets: Subsets


class IoK8sApiCoreV1Endpoints(BaseModel):
    description: str
    properties: Properties232
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items173(BaseModel):
    description: str
    items: Items169
    type: str


class Properties233(BaseModel):
    apiVersion: ApiVersion
    items: Items173
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1EndpointsList(BaseModel):
    description: str
    properties: Properties233
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class ConfigMapRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Prefix(BaseModel):
    description: str
    type: str


class Properties234(BaseModel):
    configMapRef: ConfigMapRef
    prefix: Prefix
    secretRef: SecretRef


class IoK8sApiCoreV1EnvFromSource(BaseModel):
    description: str
    properties: Properties234
    type: str


class Value3(BaseModel):
    description: str
    type: str


class ValueFrom(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties235(BaseModel):
    name: Name
    value: Value3
    valueFrom: ValueFrom


class IoK8sApiCoreV1EnvVar(BaseModel):
    description: str
    properties: Properties235
    required: List[str]
    type: str


class ConfigMapKeyRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class SecretKeyRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties236(BaseModel):
    configMapKeyRef: ConfigMapKeyRef
    fieldRef: FieldRef3
    resourceFieldRef: ResourceFieldRef
    secretKeyRef: SecretKeyRef


class IoK8sApiCoreV1EnvVarSource(BaseModel):
    description: str
    properties: Properties236
    type: str


class Items175(BaseModel):
    type: str


class Args1(BaseModel):
    description: str
    items: Items175
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Command1(BaseModel):
    description: str
    items: Items175
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items177(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Env1(BaseModel):
    description: str
    items: Items177
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class EnvFrom1(BaseModel):
    description: str
    items: Items177
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Ports2(BaseModel):
    description: str
    items: Items177
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class ResizePolicy1(BaseModel):
    description: str
    items: Items177
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class TargetContainerName(BaseModel):
    description: str
    type: str


class VolumeDevices1(BaseModel):
    description: str
    items: Items177
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class VolumeMounts2(BaseModel):
    description: str
    items: Items177
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties237(BaseModel):
    args: Args1
    command: Command1
    env: Env1
    envFrom: EnvFrom1
    image: Image
    imagePullPolicy: ImagePullPolicy
    lifecycle: Lifecycle
    livenessProbe: LivenessProbe
    name: Name
    ports: Ports2
    readinessProbe: ReadinessProbe
    resizePolicy: ResizePolicy1
    resources: Resources5
    restartPolicy: RestartPolicy
    securityContext: SecurityContext
    startupProbe: StartupProbe
    stdin: Stdin
    stdinOnce: StdinOnce
    targetContainerName: TargetContainerName
    terminationMessagePath: TerminationMessagePath
    terminationMessagePolicy: TerminationMessagePolicy
    tty: Tty
    volumeDevices: VolumeDevices1
    volumeMounts: VolumeMounts2
    workingDir: WorkingDir


class IoK8sApiCoreV1EphemeralContainer(BaseModel):
    description: str
    properties: Properties237
    required: List[str]
    type: str


class VolumeClaimTemplate(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties238(BaseModel):
    volumeClaimTemplate: VolumeClaimTemplate


class IoK8sApiCoreV1EphemeralVolumeSource(BaseModel):
    description: str
    properties: Properties238
    type: str


class Count(BaseModel):
    description: str
    format: str
    type: str


class EventTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class FirstTimestamp(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class InvolvedObject(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class LastTimestamp(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Related(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ReportingComponent(BaseModel):
    description: str
    type: str


class ReportingInstance(BaseModel):
    description: str
    type: str


class Series(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Source(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties239(BaseModel):
    action: Action
    apiVersion: ApiVersion
    count: Count
    eventTime: EventTime
    firstTimestamp: FirstTimestamp
    involvedObject: InvolvedObject
    kind: Kind
    lastTimestamp: LastTimestamp
    message: Message
    metadata: Metadata49
    reason: Reason
    related: Related
    reportingComponent: ReportingComponent
    reportingInstance: ReportingInstance
    series: Series
    source: Source
    type: Type


class IoK8sApiCoreV1Event(BaseModel):
    description: str
    properties: Properties239
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items183(BaseModel):
    description: str
    items: Items177
    type: str


class Properties240(BaseModel):
    apiVersion: ApiVersion
    items: Items183
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1EventList(BaseModel):
    description: str
    properties: Properties240
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class LastObservedTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties241(BaseModel):
    count: Count
    lastObservedTime: LastObservedTime


class IoK8sApiCoreV1EventSeries(BaseModel):
    description: str
    properties: Properties241
    type: str


class Component(BaseModel):
    description: str
    type: str


class Host(BaseModel):
    description: str
    type: str


class Properties242(BaseModel):
    component: Component
    host: Host


class IoK8sApiCoreV1EventSource(BaseModel):
    description: str
    properties: Properties242
    type: str


class Items185(BaseModel):
    type: str


class Command2(BaseModel):
    description: str
    items: Items185
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties243(BaseModel):
    command: Command2


class IoK8sApiCoreV1ExecAction(BaseModel):
    description: str
    properties: Properties243
    type: str


class Lun(BaseModel):
    description: str
    format: str
    type: str


class TargetWWNs(BaseModel):
    description: str
    items: Items185
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Wwids(BaseModel):
    description: str
    items: Items185
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties244(BaseModel):
    fsType: FsType
    lun: Lun
    readOnly: ReadOnly
    targetWWNs: TargetWWNs
    wwids: Wwids


class IoK8sApiCoreV1FCVolumeSource(BaseModel):
    description: str
    properties: Properties244
    type: str


class AdditionalProperties8(BaseModel):
    type: str


class Options(BaseModel):
    additionalProperties: AdditionalProperties8
    description: str
    type: str


class Properties245(BaseModel):
    driver: Driver
    fsType: FsType
    options: Options
    readOnly: ReadOnly
    secretRef: SecretRef


class IoK8sApiCoreV1FlexPersistentVolumeSource(BaseModel):
    description: str
    properties: Properties245
    required: List[str]
    type: str


class Options1(BaseModel):
    additionalProperties: AdditionalProperties8
    description: str
    type: str


class Properties246(BaseModel):
    driver: Driver
    fsType: FsType
    options: Options1
    readOnly: ReadOnly
    secretRef: SecretRef


class IoK8sApiCoreV1FlexVolumeSource(BaseModel):
    description: str
    properties: Properties246
    required: List[str]
    type: str


class DatasetName(BaseModel):
    description: str
    type: str


class DatasetUUID(BaseModel):
    description: str
    type: str


class Properties247(BaseModel):
    datasetName: DatasetName
    datasetUUID: DatasetUUID


class IoK8sApiCoreV1FlockerVolumeSource(BaseModel):
    description: str
    properties: Properties247
    type: str


class PdName(BaseModel):
    description: str
    type: str


class Properties248(BaseModel):
    fsType: FsType
    partition: Partition
    pdName: PdName
    readOnly: ReadOnly


class IoK8sApiCoreV1GCEPersistentDiskVolumeSource(BaseModel):
    description: str
    properties: Properties248
    required: List[str]
    type: str


class Service1(BaseModel):
    description: str
    type: str


class Properties249(BaseModel):
    port: Port
    service: Service1


class IoK8sApiCoreV1GRPCAction(BaseModel):
    properties: Properties249
    required: List[str]
    type: str


class Directory(BaseModel):
    description: str
    type: str


class Repository(BaseModel):
    description: str
    type: str


class Revision1(BaseModel):
    description: str
    type: str


class Properties250(BaseModel):
    directory: Directory
    repository: Repository
    revision: Revision1


class IoK8sApiCoreV1GitRepoVolumeSource(BaseModel):
    description: str
    properties: Properties250
    required: List[str]
    type: str


class Endpoints(BaseModel):
    description: str
    type: str


class EndpointsNamespace(BaseModel):
    description: str
    type: str


class Properties251(BaseModel):
    endpoints: Endpoints
    endpointsNamespace: EndpointsNamespace
    path: Path
    readOnly: ReadOnly


class IoK8sApiCoreV1GlusterfsPersistentVolumeSource(BaseModel):
    description: str
    properties: Properties251
    required: List[str]
    type: str


class Properties252(BaseModel):
    endpoints: Endpoints
    path: Path
    readOnly: ReadOnly


class IoK8sApiCoreV1GlusterfsVolumeSource(BaseModel):
    description: str
    properties: Properties252
    required: List[str]
    type: str


class Items188(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class HttpHeaders(BaseModel):
    description: str
    items: Items188
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Port4(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Scheme(BaseModel):
    description: str
    type: str


class Properties253(BaseModel):
    host: Host
    httpHeaders: HttpHeaders
    path: Path
    port: Port4
    scheme: Scheme


class IoK8sApiCoreV1HTTPGetAction(BaseModel):
    description: str
    properties: Properties253
    required: List[str]
    type: str


class Properties254(BaseModel):
    name: Name
    value: Value3


class IoK8sApiCoreV1HTTPHeader(BaseModel):
    description: str
    properties: Properties254
    required: List[str]
    type: str


class Items189(BaseModel):
    type: str


class Hostnames(BaseModel):
    description: str
    items: Items189
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties255(BaseModel):
    hostnames: Hostnames
    ip: Ip


class IoK8sApiCoreV1HostAlias(BaseModel):
    description: str
    properties: Properties255
    required: List[str]
    type: str


class Properties256(BaseModel):
    ip: Ip


class IoK8sApiCoreV1HostIP(BaseModel):
    description: str
    properties: Properties256
    required: List[str]
    type: str


class Properties257(BaseModel):
    path: Path
    type: Type


class IoK8sApiCoreV1HostPathVolumeSource(BaseModel):
    description: str
    properties: Properties257
    required: List[str]
    type: str


class ChapAuthDiscovery(BaseModel):
    description: str
    type: str


class ChapAuthSession(BaseModel):
    description: str
    type: str


class InitiatorName(BaseModel):
    description: str
    type: str


class Iqn(BaseModel):
    description: str
    type: str


class IscsiInterface(BaseModel):
    description: str
    type: str


class Portals(BaseModel):
    description: str
    items: Items189
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class TargetPortal(BaseModel):
    description: str
    type: str


class Properties258(BaseModel):
    chapAuthDiscovery: ChapAuthDiscovery
    chapAuthSession: ChapAuthSession
    fsType: FsType
    initiatorName: InitiatorName
    iqn: Iqn
    iscsiInterface: IscsiInterface
    lun: Lun
    portals: Portals
    readOnly: ReadOnly
    secretRef: SecretRef
    targetPortal: TargetPortal


class IoK8sApiCoreV1ISCSIPersistentVolumeSource(BaseModel):
    description: str
    properties: Properties258
    required: List[str]
    type: str


class Portals1(BaseModel):
    description: str
    items: Items189
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties259(BaseModel):
    chapAuthDiscovery: ChapAuthDiscovery
    chapAuthSession: ChapAuthSession
    fsType: FsType
    initiatorName: InitiatorName
    iqn: Iqn
    iscsiInterface: IscsiInterface
    lun: Lun
    portals: Portals1
    readOnly: ReadOnly
    secretRef: SecretRef
    targetPortal: TargetPortal


class IoK8sApiCoreV1ISCSIVolumeSource(BaseModel):
    description: str
    properties: Properties259
    required: List[str]
    type: str


class PullPolicy(BaseModel):
    description: str
    type: str


class Reference(BaseModel):
    description: str
    type: str


class Properties260(BaseModel):
    pullPolicy: PullPolicy
    reference: Reference


class IoK8sApiCoreV1ImageVolumeSource(BaseModel):
    description: str
    properties: Properties260
    type: str


class Properties261(BaseModel):
    key: Key
    mode: Mode
    path: Path


class IoK8sApiCoreV1KeyToPath(BaseModel):
    description: str
    properties: Properties261
    required: List[str]
    type: str


class PostStart(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PreStop(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties262(BaseModel):
    postStart: PostStart
    preStop: PreStop


class IoK8sApiCoreV1Lifecycle(BaseModel):
    description: str
    properties: Properties262
    type: str


class Exec(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class HttpGet(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Sleep(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class TcpSocket(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties263(BaseModel):
    exec: Exec
    httpGet: HttpGet
    sleep: Sleep
    tcpSocket: TcpSocket


class IoK8sApiCoreV1LifecycleHandler(BaseModel):
    description: str
    properties: Properties263
    type: str


class Properties264(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiCoreV1LimitRange(BaseModel):
    description: str
    properties: Properties264
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AdditionalProperties10(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Default(BaseModel):
    additionalProperties: AdditionalProperties10
    description: str
    type: str


class DefaultRequest(BaseModel):
    additionalProperties: AdditionalProperties10
    description: str
    type: str


class Max(BaseModel):
    additionalProperties: AdditionalProperties10
    description: str
    type: str


class MaxLimitRequestRatio(BaseModel):
    additionalProperties: AdditionalProperties10
    description: str
    type: str


class Min(BaseModel):
    additionalProperties: AdditionalProperties10
    description: str
    type: str


class Properties265(BaseModel):
    default: Default
    defaultRequest: DefaultRequest
    max: Max
    maxLimitRequestRatio: MaxLimitRequestRatio
    min: Min
    type: Type


class IoK8sApiCoreV1LimitRangeItem(BaseModel):
    description: str
    properties: Properties265
    required: List[str]
    type: str


class Items193(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items192(BaseModel):
    description: str
    items: Items193
    type: str


class Properties266(BaseModel):
    apiVersion: ApiVersion
    items: Items192
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1LimitRangeList(BaseModel):
    description: str
    properties: Properties266
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items194(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Limits(BaseModel):
    description: str
    items: Items194
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties267(BaseModel):
    limits: Limits


class IoK8sApiCoreV1LimitRangeSpec(BaseModel):
    description: str
    properties: Properties267
    required: List[str]
    type: str


class Gid(BaseModel):
    description: str
    format: str
    type: str


class Items195(BaseModel):
    format: str
    type: str


class SupplementalGroups(BaseModel):
    description: str
    items: Items195
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Uid5(BaseModel):
    description: str
    format: str
    type: str


class Properties268(BaseModel):
    gid: Gid
    supplementalGroups: SupplementalGroups
    uid: Uid5


class IoK8sApiCoreV1LinuxContainerUser(BaseModel):
    description: str
    properties: Properties268
    required: List[str]
    type: str


class IpMode(BaseModel):
    description: str
    type: str


class Items196(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Ports3(BaseModel):
    description: str
    items: Items196
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties269(BaseModel):
    hostname: Hostname
    ip: Ip
    ipMode: IpMode
    ports: Ports3


class IoK8sApiCoreV1LoadBalancerIngress(BaseModel):
    description: str
    properties: Properties269
    type: str


class Ingress(BaseModel):
    description: str
    items: Items196
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties270(BaseModel):
    ingress: Ingress


class IoK8sApiCoreV1LoadBalancerStatus(BaseModel):
    description: str
    properties: Properties270
    type: str


class Properties271(BaseModel):
    name: Name


class IoK8sApiCoreV1LocalObjectReference(BaseModel):
    description: str
    properties: Properties271
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties272(BaseModel):
    fsType: FsType
    path: Path


class IoK8sApiCoreV1LocalVolumeSource(BaseModel):
    description: str
    properties: Properties272
    required: List[str]
    type: str


class TargetVolumeAttributesClassName(BaseModel):
    description: str
    type: str


class Properties273(BaseModel):
    status: Status31
    targetVolumeAttributesClassName: TargetVolumeAttributesClassName


class IoK8sApiCoreV1ModifyVolumeStatus(BaseModel):
    description: str
    properties: Properties273
    required: List[str]
    type: str


class Server(BaseModel):
    description: str
    type: str


class Properties274(BaseModel):
    path: Path
    readOnly: ReadOnly
    server: Server


class IoK8sApiCoreV1NFSVolumeSource(BaseModel):
    description: str
    properties: Properties274
    required: List[str]
    type: str


class Status34(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties275(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status34


class IoK8sApiCoreV1Namespace(BaseModel):
    description: str
    properties: Properties275
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class LastTransitionTime8(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Message15(BaseModel):
    type: str


class Reason15(BaseModel):
    type: str


class Status35(BaseModel):
    description: str
    type: str


class Properties276(BaseModel):
    lastTransitionTime: LastTransitionTime8
    message: Message15
    reason: Reason15
    status: Status35
    type: Type


class IoK8sApiCoreV1NamespaceCondition(BaseModel):
    description: str
    properties: Properties276
    required: List[str]
    type: str


class Items198(BaseModel):
    description: str
    items: Items196
    type: str


class Properties277(BaseModel):
    apiVersion: ApiVersion
    items: Items198
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1NamespaceList(BaseModel):
    description: str
    properties: Properties277
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items200(BaseModel):
    type: str


class Finalizers(BaseModel):
    description: str
    items: Items200
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties278(BaseModel):
    finalizers: Finalizers


class IoK8sApiCoreV1NamespaceSpec(BaseModel):
    description: str
    properties: Properties278
    type: str


class Items201(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions12(BaseModel):
    description: str
    items: Items201
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Phase(BaseModel):
    description: str
    type: str


class Properties279(BaseModel):
    conditions: Conditions12
    phase: Phase


class IoK8sApiCoreV1NamespaceStatus(BaseModel):
    description: str
    properties: Properties279
    type: str


class Status36(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties280(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status36


class IoK8sApiCoreV1Node(BaseModel):
    description: str
    properties: Properties280
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Address(BaseModel):
    description: str
    type: str


class Properties281(BaseModel):
    address: Address
    type: Type


class IoK8sApiCoreV1NodeAddress(BaseModel):
    description: str
    properties: Properties281
    required: List[str]
    type: str


class PreferredDuringSchedulingIgnoredDuringExecution(BaseModel):
    description: str
    items: Items201
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class RequiredDuringSchedulingIgnoredDuringExecution(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties282(BaseModel):
    preferredDuringSchedulingIgnoredDuringExecution: (
        PreferredDuringSchedulingIgnoredDuringExecution
    )
    requiredDuringSchedulingIgnoredDuringExecution: (
        RequiredDuringSchedulingIgnoredDuringExecution
    )


class IoK8sApiCoreV1NodeAffinity(BaseModel):
    description: str
    properties: Properties282
    type: str


class LastHeartbeatTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class LastTransitionTime9(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Message16(BaseModel):
    description: str
    type: str


class Reason16(BaseModel):
    description: str
    type: str


class Status37(BaseModel):
    description: str
    type: str


class Properties283(BaseModel):
    lastHeartbeatTime: LastHeartbeatTime
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status37
    type: Type


class IoK8sApiCoreV1NodeCondition(BaseModel):
    description: str
    properties: Properties283
    required: List[str]
    type: str


class ConfigMap(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties284(BaseModel):
    configMap: ConfigMap


class IoK8sApiCoreV1NodeConfigSource(BaseModel):
    description: str
    properties: Properties284
    type: str


class Active2(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Assigned(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class LastKnownGood(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties285(BaseModel):
    active: Active2
    assigned: Assigned
    error: Error
    lastKnownGood: LastKnownGood


class IoK8sApiCoreV1NodeConfigStatus(BaseModel):
    description: str
    properties: Properties285
    type: str


class KubeletEndpoint(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties286(BaseModel):
    kubeletEndpoint: KubeletEndpoint


class IoK8sApiCoreV1NodeDaemonEndpoints(BaseModel):
    description: str
    properties: Properties286
    type: str


class SupplementalGroupsPolicy(BaseModel):
    description: str
    type: str


class Properties287(BaseModel):
    supplementalGroupsPolicy: SupplementalGroupsPolicy


class IoK8sApiCoreV1NodeFeatures(BaseModel):
    description: str
    properties: Properties287
    type: str


class Items203(BaseModel):
    description: str
    items: Items201
    type: str


class Properties288(BaseModel):
    apiVersion: ApiVersion
    items: Items203
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1NodeList(BaseModel):
    description: str
    properties: Properties288
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Features(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties289(BaseModel):
    features: Features
    name: Name


class IoK8sApiCoreV1NodeRuntimeHandler(BaseModel):
    description: str
    properties: Properties289
    type: str


class RecursiveReadOnlyMounts(BaseModel):
    description: str
    type: str


class UserNamespaces(BaseModel):
    description: str
    type: str


class Properties290(BaseModel):
    recursiveReadOnlyMounts: RecursiveReadOnlyMounts
    userNamespaces: UserNamespaces


class IoK8sApiCoreV1NodeRuntimeHandlerFeatures(BaseModel):
    description: str
    properties: Properties290
    type: str


class Items205(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class NodeSelectorTerms(BaseModel):
    description: str
    items: Items205
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties291(BaseModel):
    nodeSelectorTerms: NodeSelectorTerms


class IoK8sApiCoreV1NodeSelector(BaseModel):
    description: str
    properties: Properties291
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items206(BaseModel):
    type: str


class Values1(BaseModel):
    description: str
    items: Items206
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties292(BaseModel):
    key: Key
    operator: Operator
    values: Values1


class IoK8sApiCoreV1NodeSelectorRequirement(BaseModel):
    description: str
    properties: Properties292
    required: List[str]
    type: str


class Items207(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MatchExpressions(BaseModel):
    description: str
    items: Items207
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchFields(BaseModel):
    description: str
    items: Items207
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties293(BaseModel):
    matchExpressions: MatchExpressions
    matchFields: MatchFields


class IoK8sApiCoreV1NodeSelectorTerm(BaseModel):
    description: str
    properties: Properties293
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class ConfigSource(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ExternalID(BaseModel):
    description: str
    type: str


class PodCIDR(BaseModel):
    description: str
    type: str


class Items209(BaseModel):
    type: str


class PodCIDRs(BaseModel):
    description: str
    items: Items209
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class ProviderID(BaseModel):
    description: str
    type: str


class Items210(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Taints(BaseModel):
    description: str
    items: Items210
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Unschedulable(BaseModel):
    description: str
    type: str


class Properties294(BaseModel):
    configSource: ConfigSource
    externalID: ExternalID
    podCIDR: PodCIDR
    podCIDRs: PodCIDRs
    providerID: ProviderID
    taints: Taints
    unschedulable: Unschedulable


class IoK8sApiCoreV1NodeSpec(BaseModel):
    description: str
    properties: Properties294
    type: str


class Addresses1(BaseModel):
    description: str
    items: Items210
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Allocatable(BaseModel):
    additionalProperties: AdditionalProperties10
    description: str
    type: str


class Capacity(BaseModel):
    additionalProperties: AdditionalProperties10
    description: str
    type: str


class Conditions13(BaseModel):
    description: str
    items: Items210
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Config(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class DaemonEndpoints(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Images(BaseModel):
    description: str
    items: Items210
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class NodeInfo(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class RuntimeHandlers(BaseModel):
    description: str
    items: Items210
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class VolumesAttached(BaseModel):
    description: str
    items: Items210
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items216(BaseModel):
    type: str


class VolumesInUse(BaseModel):
    description: str
    items: Items216
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties295(BaseModel):
    addresses: Addresses1
    allocatable: Allocatable
    capacity: Capacity
    conditions: Conditions13
    config: Config
    daemonEndpoints: DaemonEndpoints
    features: Features
    images: Images
    nodeInfo: NodeInfo
    phase: Phase
    runtimeHandlers: RuntimeHandlers
    volumesAttached: VolumesAttached
    volumesInUse: VolumesInUse


class IoK8sApiCoreV1NodeStatus(BaseModel):
    description: str
    properties: Properties295
    type: str


class Architecture(BaseModel):
    description: str
    type: str


class BootID(BaseModel):
    description: str
    type: str


class ContainerRuntimeVersion(BaseModel):
    description: str
    type: str


class KernelVersion(BaseModel):
    description: str
    type: str


class KubeProxyVersion(BaseModel):
    description: str
    type: str


class KubeletVersion(BaseModel):
    description: str
    type: str


class MachineID(BaseModel):
    description: str
    type: str


class OperatingSystem(BaseModel):
    description: str
    type: str


class OsImage(BaseModel):
    description: str
    type: str


class SystemUUID(BaseModel):
    description: str
    type: str


class Properties296(BaseModel):
    architecture: Architecture
    bootID: BootID
    containerRuntimeVersion: ContainerRuntimeVersion
    kernelVersion: KernelVersion
    kubeProxyVersion: KubeProxyVersion
    kubeletVersion: KubeletVersion
    machineID: MachineID
    operatingSystem: OperatingSystem
    osImage: OsImage
    systemUUID: SystemUUID


class IoK8sApiCoreV1NodeSystemInfo(BaseModel):
    description: str
    properties: Properties296
    required: List[str]
    type: str


class FieldPath(BaseModel):
    description: str
    type: str


class Properties297(BaseModel):
    apiVersion: ApiVersion
    fieldPath: FieldPath


class IoK8sApiCoreV1ObjectFieldSelector(BaseModel):
    description: str
    properties: Properties297
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Uid6(BaseModel):
    description: str
    type: str


class Properties298(BaseModel):
    apiVersion: ApiVersion
    fieldPath: FieldPath
    kind: Kind
    name: Name
    namespace: Namespace
    resourceVersion: ResourceVersion
    uid: Uid6


class IoK8sApiCoreV1ObjectReference(BaseModel):
    description: str
    properties: Properties298
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Status38(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties299(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status38


class IoK8sApiCoreV1PersistentVolume(BaseModel):
    description: str
    properties: Properties299
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties300(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status38


class IoK8sApiCoreV1PersistentVolumeClaim(BaseModel):
    description: str
    properties: Properties300
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status40(BaseModel):
    type: str


class Type24(BaseModel):
    type: str


class Properties301(BaseModel):
    lastProbeTime: LastProbeTime
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status40
    type: Type24


class IoK8sApiCoreV1PersistentVolumeClaimCondition(BaseModel):
    description: str
    properties: Properties301
    required: List[str]
    type: str


class Items218(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items217(BaseModel):
    description: str
    items: Items218
    type: str


class Properties302(BaseModel):
    apiVersion: ApiVersion
    items: Items217
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1PersistentVolumeClaimList(BaseModel):
    description: str
    properties: Properties302
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items219(BaseModel):
    type: str


class AccessModes(BaseModel):
    description: str
    items: Items219
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class DataSource(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class DataSourceRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class StorageClassName(BaseModel):
    description: str
    type: str


class VolumeAttributesClassName(BaseModel):
    description: str
    type: str


class VolumeMode(BaseModel):
    description: str
    type: str


class VolumeName(BaseModel):
    description: str
    type: str


class Properties303(BaseModel):
    accessModes: AccessModes
    dataSource: DataSource
    dataSourceRef: DataSourceRef
    resources: Resources5
    selector: Selector8
    storageClassName: StorageClassName
    volumeAttributesClassName: VolumeAttributesClassName
    volumeMode: VolumeMode
    volumeName: VolumeName


class IoK8sApiCoreV1PersistentVolumeClaimSpec(BaseModel):
    description: str
    properties: Properties303
    type: str


class AccessModes1(BaseModel):
    description: str
    items: Items219
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class AdditionalProperties17(BaseModel):
    type: str


class AllocatedResourceStatuses(BaseModel):
    additionalProperties: AdditionalProperties17
    description: str
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class AdditionalProperties18(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AllocatedResources1(BaseModel):
    additionalProperties: AdditionalProperties18
    description: str
    type: str


class Capacity1(BaseModel):
    additionalProperties: AdditionalProperties18
    description: str
    type: str


class Items221(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions14(BaseModel):
    description: str
    items: Items221
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class CurrentVolumeAttributesClassName(BaseModel):
    description: str
    type: str


class ModifyVolumeStatus(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties304(BaseModel):
    accessModes: AccessModes1
    allocatedResourceStatuses: AllocatedResourceStatuses
    allocatedResources: AllocatedResources1
    capacity: Capacity1
    conditions: Conditions14
    currentVolumeAttributesClassName: CurrentVolumeAttributesClassName
    modifyVolumeStatus: ModifyVolumeStatus
    phase: Phase


class IoK8sApiCoreV1PersistentVolumeClaimStatus(BaseModel):
    description: str
    properties: Properties304
    type: str


class Properties305(BaseModel):
    metadata: Metadata49
    spec: Spec


class IoK8sApiCoreV1PersistentVolumeClaimTemplate(BaseModel):
    description: str
    properties: Properties305
    required: List[str]
    type: str


class ClaimName(BaseModel):
    description: str
    type: str


class Properties306(BaseModel):
    claimName: ClaimName
    readOnly: ReadOnly


class IoK8sApiCoreV1PersistentVolumeClaimVolumeSource(BaseModel):
    description: str
    properties: Properties306
    required: List[str]
    type: str


class Items222(BaseModel):
    description: str
    items: Items221
    type: str


class Properties307(BaseModel):
    apiVersion: ApiVersion
    items: Items222
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1PersistentVolumeList(BaseModel):
    description: str
    properties: Properties307
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items224(BaseModel):
    type: str


class AccessModes2(BaseModel):
    description: str
    items: Items224
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class AwsElasticBlockStore(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class AzureDisk(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class AzureFile(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Capacity2(BaseModel):
    additionalProperties: AdditionalProperties18
    description: str
    type: str


class Cephfs(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Cinder(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ClaimRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Csi(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Fc(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class FlexVolume(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Flocker(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class GcePersistentDisk(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Glusterfs(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class HostPath(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Iscsi(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Local(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class MountOptions(BaseModel):
    description: str
    items: Items224
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Nfs(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PersistentVolumeReclaimPolicy(BaseModel):
    description: str
    type: str


class PhotonPersistentDisk(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PortworxVolume(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Quobyte(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Rbd(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ScaleIO(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Storageos(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class VsphereVolume(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties308(BaseModel):
    accessModes: AccessModes2
    awsElasticBlockStore: AwsElasticBlockStore
    azureDisk: AzureDisk
    azureFile: AzureFile
    capacity: Capacity2
    cephfs: Cephfs
    cinder: Cinder
    claimRef: ClaimRef
    csi: Csi
    fc: Fc
    flexVolume: FlexVolume
    flocker: Flocker
    gcePersistentDisk: GcePersistentDisk
    glusterfs: Glusterfs
    hostPath: HostPath
    iscsi: Iscsi
    local: Local
    mountOptions: MountOptions
    nfs: Nfs
    nodeAffinity: NodeAffinity
    persistentVolumeReclaimPolicy: PersistentVolumeReclaimPolicy
    photonPersistentDisk: PhotonPersistentDisk
    portworxVolume: PortworxVolume
    quobyte: Quobyte
    rbd: Rbd
    scaleIO: ScaleIO
    storageClassName: StorageClassName
    storageos: Storageos
    volumeAttributesClassName: VolumeAttributesClassName
    volumeMode: VolumeMode
    vsphereVolume: VsphereVolume


class IoK8sApiCoreV1PersistentVolumeSpec(BaseModel):
    description: str
    properties: Properties308
    type: str


class LastPhaseTransitionTime(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties309(BaseModel):
    lastPhaseTransitionTime: LastPhaseTransitionTime
    message: Message16
    phase: Phase
    reason: Reason16


class IoK8sApiCoreV1PersistentVolumeStatus(BaseModel):
    description: str
    properties: Properties309
    type: str


class PdID(BaseModel):
    description: str
    type: str


class Properties310(BaseModel):
    fsType: FsType
    pdID: PdID


class IoK8sApiCoreV1PhotonPersistentDiskVolumeSource(BaseModel):
    description: str
    properties: Properties310
    required: List[str]
    type: str


class Status41(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties311(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status41


class IoK8sApiCoreV1Pod(BaseModel):
    description: str
    properties: Properties311
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items226(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class PreferredDuringSchedulingIgnoredDuringExecution1(BaseModel):
    description: str
    items: Items226
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class RequiredDuringSchedulingIgnoredDuringExecution1(BaseModel):
    description: str
    items: Items226
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties312(BaseModel):
    preferredDuringSchedulingIgnoredDuringExecution: (
        PreferredDuringSchedulingIgnoredDuringExecution1
    )
    requiredDuringSchedulingIgnoredDuringExecution: (
        RequiredDuringSchedulingIgnoredDuringExecution1
    )


class IoK8sApiCoreV1PodAffinity(BaseModel):
    description: str
    properties: Properties312
    type: str


class Items228(BaseModel):
    type: str


class MatchLabelKeys(BaseModel):
    description: str
    items: Items228
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MismatchLabelKeys(BaseModel):
    description: str
    items: Items228
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Namespaces(BaseModel):
    description: str
    items: Items228
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class TopologyKey(BaseModel):
    description: str
    type: str


class Properties313(BaseModel):
    labelSelector: LabelSelector
    matchLabelKeys: MatchLabelKeys
    mismatchLabelKeys: MismatchLabelKeys
    namespaceSelector: NamespaceSelector
    namespaces: Namespaces
    topologyKey: TopologyKey


class IoK8sApiCoreV1PodAffinityTerm(BaseModel):
    description: str
    properties: Properties313
    required: List[str]
    type: str


class Items231(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class PreferredDuringSchedulingIgnoredDuringExecution2(BaseModel):
    description: str
    items: Items231
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class RequiredDuringSchedulingIgnoredDuringExecution2(BaseModel):
    description: str
    items: Items231
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties314(BaseModel):
    preferredDuringSchedulingIgnoredDuringExecution: (
        PreferredDuringSchedulingIgnoredDuringExecution2
    )
    requiredDuringSchedulingIgnoredDuringExecution: (
        RequiredDuringSchedulingIgnoredDuringExecution2
    )


class IoK8sApiCoreV1PodAntiAffinity(BaseModel):
    description: str
    properties: Properties314
    type: str


class Status42(BaseModel):
    description: str
    type: str


class Type25(BaseModel):
    description: str
    type: str


class Properties315(BaseModel):
    lastProbeTime: LastProbeTime
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status42
    type: Type25


class IoK8sApiCoreV1PodCondition(BaseModel):
    description: str
    properties: Properties315
    required: List[str]
    type: str


class Items233(BaseModel):
    type: str


class Nameservers(BaseModel):
    description: str
    items: Items233
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items234(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Options2(BaseModel):
    description: str
    items: Items234
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items235(BaseModel):
    type: str


class Searches(BaseModel):
    description: str
    items: Items235
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties316(BaseModel):
    nameservers: Nameservers
    options: Options2
    searches: Searches


class IoK8sApiCoreV1PodDNSConfig(BaseModel):
    description: str
    properties: Properties316
    type: str


class Value5(BaseModel):
    type: str


class Properties317(BaseModel):
    name: Name
    value: Value5


class IoK8sApiCoreV1PodDNSConfigOption(BaseModel):
    description: str
    properties: Properties317
    type: str


class Properties318(BaseModel):
    ip: Ip


class IoK8sApiCoreV1PodIP(BaseModel):
    description: str
    properties: Properties318
    required: List[str]
    type: str


class Items237(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items236(BaseModel):
    description: str
    items: Items237
    type: str


class Properties319(BaseModel):
    apiVersion: ApiVersion
    items: Items236
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1PodList(BaseModel):
    description: str
    properties: Properties319
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties320(BaseModel):
    name: Name


class IoK8sApiCoreV1PodOS(BaseModel):
    description: str
    properties: Properties320
    required: List[str]
    type: str


class ConditionType(BaseModel):
    description: str
    type: str


class Properties321(BaseModel):
    conditionType: ConditionType


class IoK8sApiCoreV1PodReadinessGate(BaseModel):
    description: str
    properties: Properties321
    required: List[str]
    type: str


class ResourceClaimName(BaseModel):
    description: str
    type: str


class ResourceClaimTemplateName(BaseModel):
    description: str
    type: str


class Properties322(BaseModel):
    name: Name
    resourceClaimName: ResourceClaimName
    resourceClaimTemplateName: ResourceClaimTemplateName


class IoK8sApiCoreV1PodResourceClaim(BaseModel):
    description: str
    properties: Properties322
    required: List[str]
    type: str


class Properties323(BaseModel):
    name: Name
    resourceClaimName: ResourceClaimName


class IoK8sApiCoreV1PodResourceClaimStatus(BaseModel):
    description: str
    properties: Properties323
    required: List[str]
    type: str


class Properties324(BaseModel):
    name: Name


class IoK8sApiCoreV1PodSchedulingGate(BaseModel):
    description: str
    properties: Properties324
    required: List[str]
    type: str


class AppArmorProfile(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class FsGroup(BaseModel):
    description: str
    format: str
    type: str


class FsGroupChangePolicy(BaseModel):
    description: str
    type: str


class RunAsGroup(BaseModel):
    description: str
    format: str
    type: str


class RunAsNonRoot(BaseModel):
    description: str
    type: str


class RunAsUser(BaseModel):
    description: str
    format: str
    type: str


class SeLinuxOptions(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class SeccompProfile(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Items238(BaseModel):
    format: str
    type: str


class SupplementalGroups1(BaseModel):
    description: str
    items: Items238
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items239(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Sysctls(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class WindowsOptions(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties325(BaseModel):
    appArmorProfile: AppArmorProfile
    fsGroup: FsGroup
    fsGroupChangePolicy: FsGroupChangePolicy
    runAsGroup: RunAsGroup
    runAsNonRoot: RunAsNonRoot
    runAsUser: RunAsUser
    seLinuxOptions: SeLinuxOptions
    seccompProfile: SeccompProfile
    supplementalGroups: SupplementalGroups1
    supplementalGroupsPolicy: SupplementalGroupsPolicy
    sysctls: Sysctls
    windowsOptions: WindowsOptions


class IoK8sApiCoreV1PodSecurityContext(BaseModel):
    description: str
    properties: Properties325
    type: str


class Affinity(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class AutomountServiceAccountToken(BaseModel):
    description: str
    type: str


class Containers(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class DnsConfig(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class DnsPolicy(BaseModel):
    description: str
    type: str


class EnableServiceLinks(BaseModel):
    description: str
    type: str


class EphemeralContainers(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class HostAliases(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class HostIPC(BaseModel):
    description: str
    type: str


class HostNetwork(BaseModel):
    description: str
    type: str


class HostPID(BaseModel):
    description: str
    type: str


class HostUsers(BaseModel):
    description: str
    type: str


class ImagePullSecrets(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class InitContainers(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class AdditionalProperties21(BaseModel):
    type: str


class NodeSelector(BaseModel):
    additionalProperties: AdditionalProperties21
    description: str
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Os(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class AdditionalProperties22(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Overhead(BaseModel):
    additionalProperties: AdditionalProperties22
    description: str
    type: str


class PreemptionPolicy(BaseModel):
    description: str
    type: str


class Priority(BaseModel):
    description: str
    format: str
    type: str


class PriorityClassName(BaseModel):
    description: str
    type: str


class ReadinessGates(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceClaims(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class RuntimeClassName(BaseModel):
    description: str
    type: str


class SchedulerName(BaseModel):
    description: str
    type: str


class SchedulingGates(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class ServiceAccount(BaseModel):
    description: str
    type: str


class ServiceAccountName(BaseModel):
    description: str
    type: str


class SetHostnameAsFQDN(BaseModel):
    description: str
    type: str


class ShareProcessNamespace(BaseModel):
    description: str
    type: str


class Subdomain(BaseModel):
    description: str
    type: str


class TerminationGracePeriodSeconds(BaseModel):
    description: str
    format: str
    type: str


class Tolerations(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class TopologySpreadConstraints(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Volumes(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties326(BaseModel):
    activeDeadlineSeconds: ActiveDeadlineSeconds
    affinity: Affinity
    automountServiceAccountToken: AutomountServiceAccountToken
    containers: Containers
    dnsConfig: DnsConfig
    dnsPolicy: DnsPolicy
    enableServiceLinks: EnableServiceLinks
    ephemeralContainers: EphemeralContainers
    hostAliases: HostAliases
    hostIPC: HostIPC
    hostNetwork: HostNetwork
    hostPID: HostPID
    hostUsers: HostUsers
    hostname: Hostname
    imagePullSecrets: ImagePullSecrets
    initContainers: InitContainers
    nodeName: NodeName
    nodeSelector: NodeSelector
    os: Os
    overhead: Overhead
    preemptionPolicy: PreemptionPolicy
    priority: Priority
    priorityClassName: PriorityClassName
    readinessGates: ReadinessGates
    resourceClaims: ResourceClaims
    restartPolicy: RestartPolicy
    runtimeClassName: RuntimeClassName
    schedulerName: SchedulerName
    schedulingGates: SchedulingGates
    securityContext: SecurityContext
    serviceAccount: ServiceAccount
    serviceAccountName: ServiceAccountName
    setHostnameAsFQDN: SetHostnameAsFQDN
    shareProcessNamespace: ShareProcessNamespace
    subdomain: Subdomain
    terminationGracePeriodSeconds: TerminationGracePeriodSeconds
    tolerations: Tolerations
    topologySpreadConstraints: TopologySpreadConstraints
    volumes: Volumes


class IoK8sApiCoreV1PodSpec(BaseModel):
    description: str
    properties: Properties326
    required: List[str]
    type: str


class Conditions15(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class ContainerStatuses(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class EphemeralContainerStatuses(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class HostIPs(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class InitContainerStatuses(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class NominatedNodeName(BaseModel):
    description: str
    type: str


class PodIP(BaseModel):
    description: str
    type: str


class PodIPs(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class QosClass(BaseModel):
    description: str
    type: str


class Resize(BaseModel):
    description: str
    type: str


class ResourceClaimStatuses(BaseModel):
    description: str
    items: Items239
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties327(BaseModel):
    conditions: Conditions15
    containerStatuses: ContainerStatuses
    ephemeralContainerStatuses: EphemeralContainerStatuses
    hostIP: HostIP
    hostIPs: HostIPs
    initContainerStatuses: InitContainerStatuses
    message: Message16
    nominatedNodeName: NominatedNodeName
    phase: Phase
    podIP: PodIP
    podIPs: PodIPs
    qosClass: QosClass
    reason: Reason16
    resize: Resize
    resourceClaimStatuses: ResourceClaimStatuses
    startTime: StartTime


class IoK8sApiCoreV1PodStatus(BaseModel):
    description: str
    properties: Properties327
    type: str


class Properties328(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    template: Template


class IoK8sApiCoreV1PodTemplate(BaseModel):
    description: str
    properties: Properties328
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items258(BaseModel):
    description: str
    items: Items239
    type: str


class Properties329(BaseModel):
    apiVersion: ApiVersion
    items: Items258
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1PodTemplateList(BaseModel):
    description: str
    properties: Properties329
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties330(BaseModel):
    metadata: Metadata49
    spec: Spec


class IoK8sApiCoreV1PodTemplateSpec(BaseModel):
    description: str
    properties: Properties330
    type: str


class Port5(BaseModel):
    description: str
    format: str
    type: str


class Properties331(BaseModel):
    error: Error
    port: Port5
    protocol: Protocol


class IoK8sApiCoreV1PortStatus(BaseModel):
    properties: Properties331
    required: List[str]
    type: str


class Properties332(BaseModel):
    fsType: FsType
    readOnly: ReadOnly
    volumeID: VolumeID


class IoK8sApiCoreV1PortworxVolumeSource(BaseModel):
    description: str
    properties: Properties332
    required: List[str]
    type: str


class Preference(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Weight(BaseModel):
    description: str
    format: str
    type: str


class Properties333(BaseModel):
    preference: Preference
    weight: Weight


class IoK8sApiCoreV1PreferredSchedulingTerm(BaseModel):
    description: str
    properties: Properties333
    required: List[str]
    type: str


class FailureThreshold(BaseModel):
    description: str
    format: str
    type: str


class Grpc(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class InitialDelaySeconds(BaseModel):
    description: str
    format: str
    type: str


class SuccessThreshold(BaseModel):
    description: str
    format: str
    type: str


class Properties334(BaseModel):
    exec: Exec
    failureThreshold: FailureThreshold
    grpc: Grpc
    httpGet: HttpGet
    initialDelaySeconds: InitialDelaySeconds
    periodSeconds: PeriodSeconds
    successThreshold: SuccessThreshold
    tcpSocket: TcpSocket
    terminationGracePeriodSeconds: TerminationGracePeriodSeconds
    timeoutSeconds: TimeoutSeconds


class IoK8sApiCoreV1Probe(BaseModel):
    description: str
    properties: Properties334
    type: str


class Items260(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Sources(BaseModel):
    description: str
    items: Items260
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties335(BaseModel):
    defaultMode: DefaultMode
    sources: Sources


class IoK8sApiCoreV1ProjectedVolumeSource(BaseModel):
    description: str
    properties: Properties335
    type: str


class Registry(BaseModel):
    description: str
    type: str


class Tenant(BaseModel):
    description: str
    type: str


class User5(BaseModel):
    description: str
    type: str


class Volume(BaseModel):
    description: str
    type: str


class Properties336(BaseModel):
    group: Group
    readOnly: ReadOnly
    registry: Registry
    tenant: Tenant
    user: User5
    volume: Volume


class IoK8sApiCoreV1QuobyteVolumeSource(BaseModel):
    description: str
    properties: Properties336
    required: List[str]
    type: str


class Keyring(BaseModel):
    description: str
    type: str


class Items261(BaseModel):
    type: str


class Monitors2(BaseModel):
    description: str
    items: Items261
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Pool(BaseModel):
    description: str
    type: str


class Properties337(BaseModel):
    fsType: FsType
    image: Image
    keyring: Keyring
    monitors: Monitors2
    pool: Pool
    readOnly: ReadOnly
    secretRef: SecretRef
    user: User5


class IoK8sApiCoreV1RBDPersistentVolumeSource(BaseModel):
    description: str
    properties: Properties337
    required: List[str]
    type: str


class Monitors3(BaseModel):
    description: str
    items: Items261
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties338(BaseModel):
    fsType: FsType
    image: Image
    keyring: Keyring
    monitors: Monitors3
    pool: Pool
    readOnly: ReadOnly
    secretRef: SecretRef
    user: User5


class IoK8sApiCoreV1RBDVolumeSource(BaseModel):
    description: str
    properties: Properties338
    required: List[str]
    type: str


class Status43(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties339(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status43


class IoK8sApiCoreV1ReplicationController(BaseModel):
    description: str
    properties: Properties339
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status44(BaseModel):
    description: str
    type: str


class Properties340(BaseModel):
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status44
    type: Type25


class IoK8sApiCoreV1ReplicationControllerCondition(BaseModel):
    description: str
    properties: Properties340
    required: List[str]
    type: str


class Items264(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items263(BaseModel):
    description: str
    items: Items264
    type: str


class Properties341(BaseModel):
    apiVersion: ApiVersion
    items: Items263
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1ReplicationControllerList(BaseModel):
    description: str
    properties: Properties341
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AdditionalProperties23(BaseModel):
    type: str


class Selector11(BaseModel):
    additionalProperties: AdditionalProperties23
    description: str
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties342(BaseModel):
    minReadySeconds: MinReadySeconds
    replicas: Replicas
    selector: Selector11
    template: Template


class IoK8sApiCoreV1ReplicationControllerSpec(BaseModel):
    description: str
    properties: Properties342
    type: str


class Items265(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions16(BaseModel):
    description: str
    items: Items265
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties343(BaseModel):
    availableReplicas: AvailableReplicas
    conditions: Conditions16
    fullyLabeledReplicas: FullyLabeledReplicas
    observedGeneration: ObservedGeneration
    readyReplicas: ReadyReplicas
    replicas: Replicas


class IoK8sApiCoreV1ReplicationControllerStatus(BaseModel):
    description: str
    properties: Properties343
    required: List[str]
    type: str


class Request1(BaseModel):
    description: str
    type: str


class Properties344(BaseModel):
    name: Name
    request: Request1


class IoK8sApiCoreV1ResourceClaim(BaseModel):
    description: str
    properties: Properties344
    required: List[str]
    type: str


class Divisor(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Resource3(BaseModel):
    description: str
    type: str


class Properties345(BaseModel):
    containerName: ContainerName
    divisor: Divisor
    resource: Resource3


class IoK8sApiCoreV1ResourceFieldSelector(BaseModel):
    description: str
    properties: Properties345
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Health(BaseModel):
    description: str
    type: str


class ResourceID(BaseModel):
    description: str
    type: str


class Properties346(BaseModel):
    health: Health
    resourceID: ResourceID


class IoK8sApiCoreV1ResourceHealth(BaseModel):
    description: str
    properties: Properties346
    required: List[str]
    type: str


class Status45(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties347(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status45


class IoK8sApiCoreV1ResourceQuota(BaseModel):
    description: str
    properties: Properties347
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items266(BaseModel):
    description: str
    items: Items265
    type: str


class Properties348(BaseModel):
    apiVersion: ApiVersion
    items: Items266
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1ResourceQuotaList(BaseModel):
    description: str
    properties: Properties348
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AdditionalProperties24(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Hard(BaseModel):
    additionalProperties: AdditionalProperties24
    description: str
    type: str


class ScopeSelector(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Items268(BaseModel):
    type: str


class Scopes(BaseModel):
    description: str
    items: Items268
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties349(BaseModel):
    hard: Hard
    scopeSelector: ScopeSelector
    scopes: Scopes


class IoK8sApiCoreV1ResourceQuotaSpec(BaseModel):
    description: str
    properties: Properties349
    type: str


class Hard1(BaseModel):
    additionalProperties: AdditionalProperties24
    description: str
    type: str


class Used(BaseModel):
    additionalProperties: AdditionalProperties24
    description: str
    type: str


class Properties350(BaseModel):
    hard: Hard1
    used: Used


class IoK8sApiCoreV1ResourceQuotaStatus(BaseModel):
    description: str
    properties: Properties350
    type: str


class Items269(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Claims(BaseModel):
    description: str
    items: Items269
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Limits1(BaseModel):
    additionalProperties: AdditionalProperties24
    description: str
    type: str


class Requests(BaseModel):
    additionalProperties: AdditionalProperties24
    description: str
    type: str


class Properties351(BaseModel):
    claims: Claims
    limits: Limits1
    requests: Requests


class IoK8sApiCoreV1ResourceRequirements(BaseModel):
    description: str
    properties: Properties351
    type: str


class Resources9(BaseModel):
    description: str
    items: Items269
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties352(BaseModel):
    name: Name
    resources: Resources9


class IoK8sApiCoreV1ResourceStatus(BaseModel):
    properties: Properties352
    required: List[str]
    type: str


class Level(BaseModel):
    description: str
    type: str


class Role(BaseModel):
    description: str
    type: str


class Properties353(BaseModel):
    level: Level
    role: Role
    type: Type25
    user: User5


class IoK8sApiCoreV1SELinuxOptions(BaseModel):
    description: str
    properties: Properties353
    type: str


class Gateway(BaseModel):
    description: str
    type: str


class ProtectionDomain(BaseModel):
    description: str
    type: str


class SslEnabled(BaseModel):
    description: str
    type: str


class StorageMode(BaseModel):
    description: str
    type: str


class StoragePool(BaseModel):
    description: str
    type: str


class System(BaseModel):
    description: str
    type: str


class Properties354(BaseModel):
    fsType: FsType
    gateway: Gateway
    protectionDomain: ProtectionDomain
    readOnly: ReadOnly
    secretRef: SecretRef
    sslEnabled: SslEnabled
    storageMode: StorageMode
    storagePool: StoragePool
    system: System
    volumeName: VolumeName


class IoK8sApiCoreV1ScaleIOPersistentVolumeSource(BaseModel):
    description: str
    properties: Properties354
    required: List[str]
    type: str


class Properties355(BaseModel):
    fsType: FsType
    gateway: Gateway
    protectionDomain: ProtectionDomain
    readOnly: ReadOnly
    secretRef: SecretRef
    sslEnabled: SslEnabled
    storageMode: StorageMode
    storagePool: StoragePool
    system: System
    volumeName: VolumeName


class IoK8sApiCoreV1ScaleIOVolumeSource(BaseModel):
    description: str
    properties: Properties355
    required: List[str]
    type: str


class MatchExpressions1(BaseModel):
    description: str
    items: Items269
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties356(BaseModel):
    matchExpressions: MatchExpressions1


class IoK8sApiCoreV1ScopeSelector(BaseModel):
    description: str
    properties: Properties356
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class ScopeName(BaseModel):
    description: str
    type: str


class Items272(BaseModel):
    type: str


class Values2(BaseModel):
    description: str
    items: Items272
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties357(BaseModel):
    operator: Operator
    scopeName: ScopeName
    values: Values2


class IoK8sApiCoreV1ScopedResourceSelectorRequirement(BaseModel):
    description: str
    properties: Properties357
    required: List[str]
    type: str


class Properties358(BaseModel):
    localhostProfile: LocalhostProfile
    type: Type25


class XKubernetesUnion1(BaseModel):
    discriminator: str
    fields_to_discriminateBy: FieldsToDiscriminateBy = Field(
        ..., alias='fields-to-discriminateBy'
    )


class IoK8sApiCoreV1SeccompProfile(BaseModel):
    description: str
    properties: Properties358
    required: List[str]
    type: str
    x_kubernetes_unions: List[XKubernetesUnion1] = Field(
        ..., alias='x-kubernetes-unions'
    )


class AdditionalProperties29(BaseModel):
    format: str
    type: str


class Data2(BaseModel):
    additionalProperties: AdditionalProperties29
    description: str
    type: str


class AdditionalProperties30(BaseModel):
    type: str


class StringData(BaseModel):
    additionalProperties: AdditionalProperties30
    description: str
    type: str


class Properties359(BaseModel):
    apiVersion: ApiVersion
    data: Data2
    immutable: Immutable
    kind: Kind
    metadata: Metadata49
    stringData: StringData
    type: Type25


class IoK8sApiCoreV1Secret(BaseModel):
    description: str
    properties: Properties359
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties360(BaseModel):
    name: Name
    optional: OptionalModel


class IoK8sApiCoreV1SecretEnvSource(BaseModel):
    description: str
    properties: Properties360
    type: str


class Properties361(BaseModel):
    key: Key
    name: Name
    optional: OptionalModel


class IoK8sApiCoreV1SecretKeySelector(BaseModel):
    description: str
    properties: Properties361
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items274(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items273(BaseModel):
    description: str
    items: Items274
    type: str


class Properties362(BaseModel):
    apiVersion: ApiVersion
    items: Items273
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1SecretList(BaseModel):
    description: str
    properties: Properties362
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items276(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items275(BaseModel):
    description: str
    items: Items276
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties363(BaseModel):
    items: Items275
    name: Name
    optional: OptionalModel


class IoK8sApiCoreV1SecretProjection(BaseModel):
    description: str
    properties: Properties363
    type: str


class Properties364(BaseModel):
    name: Name
    namespace: Namespace


class IoK8sApiCoreV1SecretReference(BaseModel):
    description: str
    properties: Properties364
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items278(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items277(BaseModel):
    description: str
    items: Items278
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties365(BaseModel):
    defaultMode: DefaultMode
    items: Items277
    optional: OptionalModel
    secretName: SecretName


class IoK8sApiCoreV1SecretVolumeSource(BaseModel):
    description: str
    properties: Properties365
    type: str


class AllowPrivilegeEscalation(BaseModel):
    description: str
    type: str


class Capabilities(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Privileged(BaseModel):
    description: str
    type: str


class ProcMount(BaseModel):
    description: str
    type: str


class ReadOnlyRootFilesystem(BaseModel):
    description: str
    type: str


class Properties366(BaseModel):
    allowPrivilegeEscalation: AllowPrivilegeEscalation
    appArmorProfile: AppArmorProfile
    capabilities: Capabilities
    privileged: Privileged
    procMount: ProcMount
    readOnlyRootFilesystem: ReadOnlyRootFilesystem
    runAsGroup: RunAsGroup
    runAsNonRoot: RunAsNonRoot
    runAsUser: RunAsUser
    seLinuxOptions: SeLinuxOptions
    seccompProfile: SeccompProfile
    windowsOptions: WindowsOptions


class IoK8sApiCoreV1SecurityContext(BaseModel):
    description: str
    properties: Properties366
    type: str


class Properties367(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status45


class IoK8sApiCoreV1Service(BaseModel):
    description: str
    properties: Properties367
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items279(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ImagePullSecrets1(BaseModel):
    description: str
    items: Items279
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Secrets(BaseModel):
    description: str
    items: Items279
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties368(BaseModel):
    apiVersion: ApiVersion
    automountServiceAccountToken: AutomountServiceAccountToken
    imagePullSecrets: ImagePullSecrets1
    kind: Kind
    metadata: Metadata49
    secrets: Secrets


class IoK8sApiCoreV1ServiceAccount(BaseModel):
    description: str
    properties: Properties368
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items281(BaseModel):
    description: str
    items: Items279
    type: str


class Properties369(BaseModel):
    apiVersion: ApiVersion
    items: Items281
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1ServiceAccountList(BaseModel):
    description: str
    properties: Properties369
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Audience(BaseModel):
    description: str
    type: str


class Properties370(BaseModel):
    audience: Audience
    expirationSeconds: ExpirationSeconds
    path: Path


class IoK8sApiCoreV1ServiceAccountTokenProjection(BaseModel):
    description: str
    properties: Properties370
    required: List[str]
    type: str


class Items284(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items283(BaseModel):
    description: str
    items: Items284
    type: str


class Properties371(BaseModel):
    apiVersion: ApiVersion
    items: Items283
    kind: Kind
    metadata: Metadata49


class IoK8sApiCoreV1ServiceList(BaseModel):
    description: str
    properties: Properties371
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class NodePort(BaseModel):
    description: str
    format: str
    type: str


class TargetPort(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties372(BaseModel):
    appProtocol: AppProtocol
    name: Name
    nodePort: NodePort
    port: Port5
    protocol: Protocol
    targetPort: TargetPort


class IoK8sApiCoreV1ServicePort(BaseModel):
    description: str
    properties: Properties372
    required: List[str]
    type: str


class AllocateLoadBalancerNodePorts(BaseModel):
    description: str
    type: str


class ClusterIP(BaseModel):
    description: str
    type: str


class Items285(BaseModel):
    type: str


class ClusterIPs(BaseModel):
    description: str
    items: Items285
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ExternalIPs(BaseModel):
    description: str
    items: Items285
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ExternalName(BaseModel):
    description: str
    type: str


class ExternalTrafficPolicy(BaseModel):
    description: str
    type: str


class HealthCheckNodePort(BaseModel):
    description: str
    format: str
    type: str


class InternalTrafficPolicy(BaseModel):
    description: str
    type: str


class IpFamilies(BaseModel):
    description: str
    items: Items285
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class IpFamilyPolicy(BaseModel):
    description: str
    type: str


class LoadBalancerClass(BaseModel):
    description: str
    type: str


class LoadBalancerIP(BaseModel):
    description: str
    type: str


class LoadBalancerSourceRanges(BaseModel):
    description: str
    items: Items285
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items289(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Ports4(BaseModel):
    description: str
    items: Items289
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class PublishNotReadyAddresses(BaseModel):
    description: str
    type: str


class Selector12(BaseModel):
    additionalProperties: AdditionalProperties30
    description: str
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class SessionAffinity(BaseModel):
    description: str
    type: str


class SessionAffinityConfig(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class TrafficDistribution(BaseModel):
    description: str
    type: str


class Properties373(BaseModel):
    allocateLoadBalancerNodePorts: AllocateLoadBalancerNodePorts
    clusterIP: ClusterIP
    clusterIPs: ClusterIPs
    externalIPs: ExternalIPs
    externalName: ExternalName
    externalTrafficPolicy: ExternalTrafficPolicy
    healthCheckNodePort: HealthCheckNodePort
    internalTrafficPolicy: InternalTrafficPolicy
    ipFamilies: IpFamilies
    ipFamilyPolicy: IpFamilyPolicy
    loadBalancerClass: LoadBalancerClass
    loadBalancerIP: LoadBalancerIP
    loadBalancerSourceRanges: LoadBalancerSourceRanges
    ports: Ports4
    publishNotReadyAddresses: PublishNotReadyAddresses
    selector: Selector12
    sessionAffinity: SessionAffinity
    sessionAffinityConfig: SessionAffinityConfig
    trafficDistribution: TrafficDistribution
    type: Type25


class IoK8sApiCoreV1ServiceSpec(BaseModel):
    description: str
    properties: Properties373
    type: str


class Conditions17(BaseModel):
    description: str
    items: Items289
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class LoadBalancer(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties374(BaseModel):
    conditions: Conditions17
    loadBalancer: LoadBalancer


class IoK8sApiCoreV1ServiceStatus(BaseModel):
    description: str
    properties: Properties374
    type: str


class ClientIP(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties375(BaseModel):
    clientIP: ClientIP


class IoK8sApiCoreV1SessionAffinityConfig(BaseModel):
    description: str
    properties: Properties375
    type: str


class Seconds(BaseModel):
    description: str
    format: str
    type: str


class Properties376(BaseModel):
    seconds: Seconds


class IoK8sApiCoreV1SleepAction(BaseModel):
    description: str
    properties: Properties376
    required: List[str]
    type: str


class VolumeNamespace(BaseModel):
    description: str
    type: str


class Properties377(BaseModel):
    fsType: FsType
    readOnly: ReadOnly
    secretRef: SecretRef
    volumeName: VolumeName
    volumeNamespace: VolumeNamespace


class IoK8sApiCoreV1StorageOSPersistentVolumeSource(BaseModel):
    description: str
    properties: Properties377
    type: str


class Properties378(BaseModel):
    fsType: FsType
    readOnly: ReadOnly
    secretRef: SecretRef
    volumeName: VolumeName
    volumeNamespace: VolumeNamespace


class IoK8sApiCoreV1StorageOSVolumeSource(BaseModel):
    description: str
    properties: Properties378
    type: str


class Value6(BaseModel):
    description: str
    type: str


class Properties379(BaseModel):
    name: Name
    value: Value6


class IoK8sApiCoreV1Sysctl(BaseModel):
    description: str
    properties: Properties379
    required: List[str]
    type: str


class Port7(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties380(BaseModel):
    host: Host
    port: Port7


class IoK8sApiCoreV1TCPSocketAction(BaseModel):
    description: str
    properties: Properties380
    required: List[str]
    type: str


class Effect(BaseModel):
    description: str
    type: str


class TimeAdded(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties381(BaseModel):
    effect: Effect
    key: Key
    timeAdded: TimeAdded
    value: Value6


class IoK8sApiCoreV1Taint(BaseModel):
    description: str
    properties: Properties381
    required: List[str]
    type: str


class TolerationSeconds(BaseModel):
    description: str
    format: str
    type: str


class Properties382(BaseModel):
    effect: Effect
    key: Key
    operator: Operator
    tolerationSeconds: TolerationSeconds
    value: Value6


class IoK8sApiCoreV1Toleration(BaseModel):
    description: str
    properties: Properties382
    type: str


class Items291(BaseModel):
    type: str


class Values3(BaseModel):
    description: str
    items: Items291
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties383(BaseModel):
    key: Key
    values: Values3


class IoK8sApiCoreV1TopologySelectorLabelRequirement(BaseModel):
    description: str
    properties: Properties383
    required: List[str]
    type: str


class Items292(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MatchLabelExpressions(BaseModel):
    description: str
    items: Items292
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties384(BaseModel):
    matchLabelExpressions: MatchLabelExpressions


class IoK8sApiCoreV1TopologySelectorTerm(BaseModel):
    description: str
    properties: Properties384
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items293(BaseModel):
    type: str


class MatchLabelKeys1(BaseModel):
    description: str
    items: Items293
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MaxSkew(BaseModel):
    description: str
    format: str
    type: str


class MinDomains(BaseModel):
    description: str
    format: str
    type: str


class NodeAffinityPolicy(BaseModel):
    description: str
    type: str


class NodeTaintsPolicy(BaseModel):
    description: str
    type: str


class WhenUnsatisfiable(BaseModel):
    description: str
    type: str


class Properties385(BaseModel):
    labelSelector: LabelSelector
    matchLabelKeys: MatchLabelKeys1
    maxSkew: MaxSkew
    minDomains: MinDomains
    nodeAffinityPolicy: NodeAffinityPolicy
    nodeTaintsPolicy: NodeTaintsPolicy
    topologyKey: TopologyKey
    whenUnsatisfiable: WhenUnsatisfiable


class IoK8sApiCoreV1TopologySpreadConstraint(BaseModel):
    description: str
    properties: Properties385
    required: List[str]
    type: str


class ApiGroup(BaseModel):
    description: str
    type: str


class Properties386(BaseModel):
    apiGroup: ApiGroup
    kind: Kind
    name: Name


class IoK8sApiCoreV1TypedLocalObjectReference(BaseModel):
    description: str
    properties: Properties386
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties387(BaseModel):
    apiGroup: ApiGroup
    kind: Kind
    name: Name
    namespace: Namespace


class IoK8sApiCoreV1TypedObjectReference(BaseModel):
    properties: Properties387
    required: List[str]
    type: str


class DownwardAPI(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class EmptyDir(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Ephemeral(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class GitRepo(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Image5(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PersistentVolumeClaim(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Projected(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Secret(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties388(BaseModel):
    awsElasticBlockStore: AwsElasticBlockStore
    azureDisk: AzureDisk
    azureFile: AzureFile
    cephfs: Cephfs
    cinder: Cinder
    configMap: ConfigMap
    csi: Csi
    downwardAPI: DownwardAPI
    emptyDir: EmptyDir
    ephemeral: Ephemeral
    fc: Fc
    flexVolume: FlexVolume
    flocker: Flocker
    gcePersistentDisk: GcePersistentDisk
    gitRepo: GitRepo
    glusterfs: Glusterfs
    hostPath: HostPath
    image: Image5
    iscsi: Iscsi
    name: Name
    nfs: Nfs
    persistentVolumeClaim: PersistentVolumeClaim
    photonPersistentDisk: PhotonPersistentDisk
    portworxVolume: PortworxVolume
    projected: Projected
    quobyte: Quobyte
    rbd: Rbd
    scaleIO: ScaleIO
    secret: Secret
    storageos: Storageos
    vsphereVolume: VsphereVolume


class IoK8sApiCoreV1Volume(BaseModel):
    description: str
    properties: Properties388
    required: List[str]
    type: str


class Properties389(BaseModel):
    devicePath: DevicePath
    name: Name


class IoK8sApiCoreV1VolumeDevice(BaseModel):
    description: str
    properties: Properties389
    required: List[str]
    type: str


class MountPath(BaseModel):
    description: str
    type: str


class MountPropagation(BaseModel):
    description: str
    type: str


class RecursiveReadOnly(BaseModel):
    description: str
    type: str


class SubPath(BaseModel):
    description: str
    type: str


class SubPathExpr(BaseModel):
    description: str
    type: str


class Properties390(BaseModel):
    mountPath: MountPath
    mountPropagation: MountPropagation
    name: Name
    readOnly: ReadOnly
    recursiveReadOnly: RecursiveReadOnly
    subPath: SubPath
    subPathExpr: SubPathExpr


class IoK8sApiCoreV1VolumeMount(BaseModel):
    description: str
    properties: Properties390
    required: List[str]
    type: str


class Properties391(BaseModel):
    mountPath: MountPath
    name: Name
    readOnly: ReadOnly
    recursiveReadOnly: RecursiveReadOnly


class IoK8sApiCoreV1VolumeMountStatus(BaseModel):
    description: str
    properties: Properties391
    required: List[str]
    type: str


class Required(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties392(BaseModel):
    required: Required


class IoK8sApiCoreV1VolumeNodeAffinity(BaseModel):
    description: str
    properties: Properties392
    type: str


class ClusterTrustBundle(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ServiceAccountToken(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties393(BaseModel):
    clusterTrustBundle: ClusterTrustBundle
    configMap: ConfigMap
    downwardAPI: DownwardAPI
    secret: Secret
    serviceAccountToken: ServiceAccountToken


class IoK8sApiCoreV1VolumeProjection(BaseModel):
    description: str
    properties: Properties393
    type: str


class AdditionalProperties32(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Limits2(BaseModel):
    additionalProperties: AdditionalProperties32
    description: str
    type: str


class Requests1(BaseModel):
    additionalProperties: AdditionalProperties32
    description: str
    type: str


class Properties394(BaseModel):
    limits: Limits2
    requests: Requests1


class IoK8sApiCoreV1VolumeResourceRequirements(BaseModel):
    description: str
    properties: Properties394
    type: str


class StoragePolicyID(BaseModel):
    description: str
    type: str


class StoragePolicyName(BaseModel):
    description: str
    type: str


class VolumePath(BaseModel):
    description: str
    type: str


class Properties395(BaseModel):
    fsType: FsType
    storagePolicyID: StoragePolicyID
    storagePolicyName: StoragePolicyName
    volumePath: VolumePath


class IoK8sApiCoreV1VsphereVirtualDiskVolumeSource(BaseModel):
    description: str
    properties: Properties395
    required: List[str]
    type: str


class PodAffinityTerm(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties396(BaseModel):
    podAffinityTerm: PodAffinityTerm
    weight: Weight


class IoK8sApiCoreV1WeightedPodAffinityTerm(BaseModel):
    description: str
    properties: Properties396
    required: List[str]
    type: str


class GmsaCredentialSpec(BaseModel):
    description: str
    type: str


class GmsaCredentialSpecName(BaseModel):
    description: str
    type: str


class HostProcess(BaseModel):
    description: str
    type: str


class RunAsUserName(BaseModel):
    description: str
    type: str


class Properties397(BaseModel):
    gmsaCredentialSpec: GmsaCredentialSpec
    gmsaCredentialSpecName: GmsaCredentialSpecName
    hostProcess: HostProcess
    runAsUserName: RunAsUserName


class IoK8sApiCoreV1WindowsSecurityContextOptions(BaseModel):
    description: str
    properties: Properties397
    type: str


class Addresses2(BaseModel):
    description: str
    items: Items293
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Conditions18(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class AdditionalProperties34(BaseModel):
    type: str


class DeprecatedTopology(BaseModel):
    additionalProperties: AdditionalProperties34
    description: str
    type: str


class Hints(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Zone(BaseModel):
    description: str
    type: str


class Properties398(BaseModel):
    addresses: Addresses2
    conditions: Conditions18
    deprecatedTopology: DeprecatedTopology
    hints: Hints
    hostname: Hostname
    nodeName: NodeName
    targetRef: TargetRef
    zone: Zone


class IoK8sApiDiscoveryV1Endpoint(BaseModel):
    description: str
    properties: Properties398
    required: List[str]
    type: str


class Serving(BaseModel):
    description: str
    type: str


class Terminating1(BaseModel):
    description: str
    type: str


class Properties399(BaseModel):
    ready: Ready1
    serving: Serving
    terminating: Terminating1


class IoK8sApiDiscoveryV1EndpointConditions(BaseModel):
    description: str
    properties: Properties399
    type: str


class Items295(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ForZones(BaseModel):
    description: str
    items: Items295
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties400(BaseModel):
    forZones: ForZones


class IoK8sApiDiscoveryV1EndpointHints(BaseModel):
    description: str
    properties: Properties400
    type: str


class Port8(BaseModel):
    description: str
    format: str
    type: str


class Properties401(BaseModel):
    appProtocol: AppProtocol
    name: Name
    port: Port8
    protocol: Protocol


class IoK8sApiDiscoveryV1EndpointPort(BaseModel):
    description: str
    properties: Properties401
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class AddressType(BaseModel):
    description: str
    type: str


class Endpoints2(BaseModel):
    description: str
    items: Items295
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Ports5(BaseModel):
    description: str
    items: Items295
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties402(BaseModel):
    addressType: AddressType
    apiVersion: ApiVersion
    endpoints: Endpoints2
    kind: Kind
    metadata: Metadata49
    ports: Ports5


class IoK8sApiDiscoveryV1EndpointSlice(BaseModel):
    description: str
    properties: Properties402
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items298(BaseModel):
    description: str
    items: Items295
    type: str


class Properties403(BaseModel):
    apiVersion: ApiVersion
    items: Items298
    kind: Kind
    metadata: Metadata49


class IoK8sApiDiscoveryV1EndpointSliceList(BaseModel):
    description: str
    properties: Properties403
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties404(BaseModel):
    name: Name


class IoK8sApiDiscoveryV1ForZone(BaseModel):
    description: str
    properties: Properties404
    required: List[str]
    type: str


class DeprecatedCount(BaseModel):
    description: str
    format: str
    type: str


class DeprecatedFirstTimestamp(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class DeprecatedLastTimestamp(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class DeprecatedSource(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Note(BaseModel):
    description: str
    type: str


class Regarding(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ReportingController(BaseModel):
    description: str
    type: str


class Properties405(BaseModel):
    action: Action
    apiVersion: ApiVersion
    deprecatedCount: DeprecatedCount
    deprecatedFirstTimestamp: DeprecatedFirstTimestamp
    deprecatedLastTimestamp: DeprecatedLastTimestamp
    deprecatedSource: DeprecatedSource
    eventTime: EventTime
    kind: Kind
    metadata: Metadata49
    note: Note
    reason: Reason16
    regarding: Regarding
    related: Related
    reportingController: ReportingController
    reportingInstance: ReportingInstance
    series: Series
    type: Type25


class IoK8sApiEventsV1Event(BaseModel):
    description: str
    properties: Properties405
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items301(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items300(BaseModel):
    description: str
    items: Items301
    type: str


class Properties406(BaseModel):
    apiVersion: ApiVersion
    items: Items300
    kind: Kind
    metadata: Metadata49


class IoK8sApiEventsV1EventList(BaseModel):
    description: str
    properties: Properties406
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties407(BaseModel):
    count: Count
    lastObservedTime: LastObservedTime


class IoK8sApiEventsV1EventSeries(BaseModel):
    description: str
    properties: Properties407
    required: List[str]
    type: str


class LendablePercent(BaseModel):
    description: str
    format: str
    type: str


class NominalConcurrencyShares(BaseModel):
    description: str
    format: str
    type: str


class Properties408(BaseModel):
    lendablePercent: LendablePercent
    nominalConcurrencyShares: NominalConcurrencyShares


class IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration(BaseModel):
    description: str
    properties: Properties408
    type: str


class Properties409(BaseModel):
    type: Type25


class IoK8sApiFlowcontrolV1FlowDistinguisherMethod(BaseModel):
    description: str
    properties: Properties409
    required: List[str]
    type: str


class Properties410(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status45


class IoK8sApiFlowcontrolV1FlowSchema(BaseModel):
    description: str
    properties: Properties410
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status48(BaseModel):
    description: str
    type: str


class Properties411(BaseModel):
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status48
    type: Type25


class IoK8sApiFlowcontrolV1FlowSchemaCondition(BaseModel):
    description: str
    properties: Properties411
    type: str


class Items303(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items302(BaseModel):
    description: str
    items: Items303
    type: str


class Properties412(BaseModel):
    apiVersion: ApiVersion
    items: Items302
    kind: Kind
    metadata: Metadata49


class IoK8sApiFlowcontrolV1FlowSchemaList(BaseModel):
    description: str
    properties: Properties412
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class DistinguisherMethod(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class MatchingPrecedence(BaseModel):
    description: str
    format: str
    type: str


class PriorityLevelConfiguration(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Items304(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Rules4(BaseModel):
    description: str
    items: Items304
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties413(BaseModel):
    distinguisherMethod: DistinguisherMethod
    matchingPrecedence: MatchingPrecedence
    priorityLevelConfiguration: PriorityLevelConfiguration
    rules: Rules4


class IoK8sApiFlowcontrolV1FlowSchemaSpec(BaseModel):
    description: str
    properties: Properties413
    required: List[str]
    type: str


class Conditions19(BaseModel):
    description: str
    items: Items304
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties414(BaseModel):
    conditions: Conditions19


class IoK8sApiFlowcontrolV1FlowSchemaStatus(BaseModel):
    description: str
    properties: Properties414
    type: str


class Properties415(BaseModel):
    name: Name


class IoK8sApiFlowcontrolV1GroupSubject(BaseModel):
    description: str
    properties: Properties415
    required: List[str]
    type: str


class Queuing(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties416(BaseModel):
    queuing: Queuing
    type: Type25


class FieldsToDiscriminateBy2(BaseModel):
    queuing: str


class XKubernetesUnion2(BaseModel):
    discriminator: str
    fields_to_discriminateBy: FieldsToDiscriminateBy2 = Field(
        ..., alias='fields-to-discriminateBy'
    )


class IoK8sApiFlowcontrolV1LimitResponse(BaseModel):
    description: str
    properties: Properties416
    required: List[str]
    type: str
    x_kubernetes_unions: List[XKubernetesUnion2] = Field(
        ..., alias='x-kubernetes-unions'
    )


class BorrowingLimitPercent(BaseModel):
    description: str
    format: str
    type: str


class LimitResponse(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties417(BaseModel):
    borrowingLimitPercent: BorrowingLimitPercent
    lendablePercent: LendablePercent
    limitResponse: LimitResponse
    nominalConcurrencyShares: NominalConcurrencyShares


class IoK8sApiFlowcontrolV1LimitedPriorityLevelConfiguration(BaseModel):
    description: str
    properties: Properties417
    type: str


class Items306(BaseModel):
    type: str


class NonResourceURLs1(BaseModel):
    description: str
    items: Items306
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Verbs2(BaseModel):
    description: str
    items: Items306
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties418(BaseModel):
    nonResourceURLs: NonResourceURLs1
    verbs: Verbs2


class IoK8sApiFlowcontrolV1NonResourcePolicyRule(BaseModel):
    description: str
    properties: Properties418
    required: List[str]
    type: str


class Items308(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class NonResourceRules1(BaseModel):
    description: str
    items: Items308
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceRules4(BaseModel):
    description: str
    items: Items308
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Subjects(BaseModel):
    description: str
    items: Items308
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties419(BaseModel):
    nonResourceRules: NonResourceRules1
    resourceRules: ResourceRules4
    subjects: Subjects


class IoK8sApiFlowcontrolV1PolicyRulesWithSubjects(BaseModel):
    description: str
    properties: Properties419
    required: List[str]
    type: str


class Status49(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties420(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status49


class IoK8sApiFlowcontrolV1PriorityLevelConfiguration(BaseModel):
    description: str
    properties: Properties420
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status50(BaseModel):
    description: str
    type: str


class Properties421(BaseModel):
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status50
    type: Type25


class IoK8sApiFlowcontrolV1PriorityLevelConfigurationCondition(BaseModel):
    description: str
    properties: Properties421
    type: str


class Items311(BaseModel):
    description: str
    items: Items308
    type: str


class Properties422(BaseModel):
    apiVersion: ApiVersion
    items: Items311
    kind: Kind
    metadata: Metadata49


class IoK8sApiFlowcontrolV1PriorityLevelConfigurationList(BaseModel):
    description: str
    properties: Properties422
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties423(BaseModel):
    name: Name


class IoK8sApiFlowcontrolV1PriorityLevelConfigurationReference(BaseModel):
    description: str
    properties: Properties423
    required: List[str]
    type: str


class Exempt(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Limited(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties424(BaseModel):
    exempt: Exempt
    limited: Limited
    type: Type25


class FieldsToDiscriminateBy3(BaseModel):
    exempt: str
    limited: str


class XKubernetesUnion3(BaseModel):
    discriminator: str
    fields_to_discriminateBy: FieldsToDiscriminateBy3 = Field(
        ..., alias='fields-to-discriminateBy'
    )


class IoK8sApiFlowcontrolV1PriorityLevelConfigurationSpec(BaseModel):
    description: str
    properties: Properties424
    required: List[str]
    type: str
    x_kubernetes_unions: List[XKubernetesUnion3] = Field(
        ..., alias='x-kubernetes-unions'
    )


class Items313(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions20(BaseModel):
    description: str
    items: Items313
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties425(BaseModel):
    conditions: Conditions20


class IoK8sApiFlowcontrolV1PriorityLevelConfigurationStatus(BaseModel):
    description: str
    properties: Properties425
    type: str


class HandSize(BaseModel):
    description: str
    format: str
    type: str


class QueueLengthLimit(BaseModel):
    description: str
    format: str
    type: str


class Queues(BaseModel):
    description: str
    format: str
    type: str


class Properties426(BaseModel):
    handSize: HandSize
    queueLengthLimit: QueueLengthLimit
    queues: Queues


class IoK8sApiFlowcontrolV1QueuingConfiguration(BaseModel):
    description: str
    properties: Properties426
    type: str


class Items314(BaseModel):
    type: str


class ApiGroups5(BaseModel):
    description: str
    items: Items314
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ClusterScope(BaseModel):
    description: str
    type: str


class Namespaces1(BaseModel):
    description: str
    items: Items314
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Resources10(BaseModel):
    description: str
    items: Items314
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Verbs3(BaseModel):
    description: str
    items: Items314
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties427(BaseModel):
    apiGroups: ApiGroups5
    clusterScope: ClusterScope
    namespaces: Namespaces1
    resources: Resources10
    verbs: Verbs3


class IoK8sApiFlowcontrolV1ResourcePolicyRule(BaseModel):
    description: str
    properties: Properties427
    required: List[str]
    type: str


class Properties428(BaseModel):
    name: Name
    namespace: Namespace


class IoK8sApiFlowcontrolV1ServiceAccountSubject(BaseModel):
    description: str
    properties: Properties428
    required: List[str]
    type: str


class Group2(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class ServiceAccount1(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class User9(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties429(BaseModel):
    group: Group2
    kind: Kind
    serviceAccount: ServiceAccount1
    user: User9


class FieldsToDiscriminateBy4(BaseModel):
    group: str
    serviceAccount: str
    user: str


class XKubernetesUnion4(BaseModel):
    discriminator: str
    fields_to_discriminateBy: FieldsToDiscriminateBy4 = Field(
        ..., alias='fields-to-discriminateBy'
    )


class IoK8sApiFlowcontrolV1Subject(BaseModel):
    description: str
    properties: Properties429
    required: List[str]
    type: str
    x_kubernetes_unions: List[XKubernetesUnion4] = Field(
        ..., alias='x-kubernetes-unions'
    )


class Properties430(BaseModel):
    name: Name


class IoK8sApiFlowcontrolV1UserSubject(BaseModel):
    description: str
    properties: Properties430
    required: List[str]
    type: str


class Properties431(BaseModel):
    lendablePercent: LendablePercent
    nominalConcurrencyShares: NominalConcurrencyShares


class IoK8sApiFlowcontrolV1beta3ExemptPriorityLevelConfiguration(BaseModel):
    description: str
    properties: Properties431
    type: str


class Properties432(BaseModel):
    type: Type25


class IoK8sApiFlowcontrolV1beta3FlowDistinguisherMethod(BaseModel):
    description: str
    properties: Properties432
    required: List[str]
    type: str


class Status51(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties433(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status51


class IoK8sApiFlowcontrolV1beta3FlowSchema(BaseModel):
    description: str
    properties: Properties433
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status52(BaseModel):
    description: str
    type: str


class Properties434(BaseModel):
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status52
    type: Type25


class IoK8sApiFlowcontrolV1beta3FlowSchemaCondition(BaseModel):
    description: str
    properties: Properties434
    type: str


class Items319(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items318(BaseModel):
    description: str
    items: Items319
    type: str


class Properties435(BaseModel):
    apiVersion: ApiVersion
    items: Items318
    kind: Kind
    metadata: Metadata49


class IoK8sApiFlowcontrolV1beta3FlowSchemaList(BaseModel):
    description: str
    properties: Properties435
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items320(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Rules5(BaseModel):
    description: str
    items: Items320
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties436(BaseModel):
    distinguisherMethod: DistinguisherMethod
    matchingPrecedence: MatchingPrecedence
    priorityLevelConfiguration: PriorityLevelConfiguration
    rules: Rules5


class IoK8sApiFlowcontrolV1beta3FlowSchemaSpec(BaseModel):
    description: str
    properties: Properties436
    required: List[str]
    type: str


class Conditions21(BaseModel):
    description: str
    items: Items320
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties437(BaseModel):
    conditions: Conditions21


class IoK8sApiFlowcontrolV1beta3FlowSchemaStatus(BaseModel):
    description: str
    properties: Properties437
    type: str


class Properties438(BaseModel):
    name: Name


class IoK8sApiFlowcontrolV1beta3GroupSubject(BaseModel):
    description: str
    properties: Properties438
    required: List[str]
    type: str


class Properties439(BaseModel):
    queuing: Queuing
    type: Type25


class FieldsToDiscriminateBy5(BaseModel):
    queuing: str


class XKubernetesUnion5(BaseModel):
    discriminator: str
    fields_to_discriminateBy: FieldsToDiscriminateBy5 = Field(
        ..., alias='fields-to-discriminateBy'
    )


class IoK8sApiFlowcontrolV1beta3LimitResponse(BaseModel):
    description: str
    properties: Properties439
    required: List[str]
    type: str
    x_kubernetes_unions: List[XKubernetesUnion5] = Field(
        ..., alias='x-kubernetes-unions'
    )


class Properties440(BaseModel):
    borrowingLimitPercent: BorrowingLimitPercent
    lendablePercent: LendablePercent
    limitResponse: LimitResponse
    nominalConcurrencyShares: NominalConcurrencyShares


class IoK8sApiFlowcontrolV1beta3LimitedPriorityLevelConfiguration(BaseModel):
    description: str
    properties: Properties440
    type: str


class Items322(BaseModel):
    type: str


class NonResourceURLs2(BaseModel):
    description: str
    items: Items322
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Verbs4(BaseModel):
    description: str
    items: Items322
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties441(BaseModel):
    nonResourceURLs: NonResourceURLs2
    verbs: Verbs4


class IoK8sApiFlowcontrolV1beta3NonResourcePolicyRule(BaseModel):
    description: str
    properties: Properties441
    required: List[str]
    type: str


class Items324(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class NonResourceRules2(BaseModel):
    description: str
    items: Items324
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceRules5(BaseModel):
    description: str
    items: Items324
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Subjects1(BaseModel):
    description: str
    items: Items324
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties442(BaseModel):
    nonResourceRules: NonResourceRules2
    resourceRules: ResourceRules5
    subjects: Subjects1


class IoK8sApiFlowcontrolV1beta3PolicyRulesWithSubjects(BaseModel):
    description: str
    properties: Properties442
    required: List[str]
    type: str


class Status53(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties443(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status53


class IoK8sApiFlowcontrolV1beta3PriorityLevelConfiguration(BaseModel):
    description: str
    properties: Properties443
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status54(BaseModel):
    description: str
    type: str


class Properties444(BaseModel):
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status54
    type: Type25


class IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationCondition(BaseModel):
    description: str
    properties: Properties444
    type: str


class Items327(BaseModel):
    description: str
    items: Items324
    type: str


class Properties445(BaseModel):
    apiVersion: ApiVersion
    items: Items327
    kind: Kind
    metadata: Metadata49


class IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationList(BaseModel):
    description: str
    properties: Properties445
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties446(BaseModel):
    name: Name


class IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationReference(BaseModel):
    description: str
    properties: Properties446
    required: List[str]
    type: str


class Properties447(BaseModel):
    exempt: Exempt
    limited: Limited
    type: Type25


class FieldsToDiscriminateBy6(BaseModel):
    exempt: str
    limited: str


class XKubernetesUnion6(BaseModel):
    discriminator: str
    fields_to_discriminateBy: FieldsToDiscriminateBy6 = Field(
        ..., alias='fields-to-discriminateBy'
    )


class IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationSpec(BaseModel):
    description: str
    properties: Properties447
    required: List[str]
    type: str
    x_kubernetes_unions: List[XKubernetesUnion6] = Field(
        ..., alias='x-kubernetes-unions'
    )


class Items329(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions22(BaseModel):
    description: str
    items: Items329
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties448(BaseModel):
    conditions: Conditions22


class IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationStatus(BaseModel):
    description: str
    properties: Properties448
    type: str


class Properties449(BaseModel):
    handSize: HandSize
    queueLengthLimit: QueueLengthLimit
    queues: Queues


class IoK8sApiFlowcontrolV1beta3QueuingConfiguration(BaseModel):
    description: str
    properties: Properties449
    type: str


class Items330(BaseModel):
    type: str


class ApiGroups6(BaseModel):
    description: str
    items: Items330
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Namespaces2(BaseModel):
    description: str
    items: Items330
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Resources11(BaseModel):
    description: str
    items: Items330
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Verbs5(BaseModel):
    description: str
    items: Items330
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties450(BaseModel):
    apiGroups: ApiGroups6
    clusterScope: ClusterScope
    namespaces: Namespaces2
    resources: Resources11
    verbs: Verbs5


class IoK8sApiFlowcontrolV1beta3ResourcePolicyRule(BaseModel):
    description: str
    properties: Properties450
    required: List[str]
    type: str


class Properties451(BaseModel):
    name: Name
    namespace: Namespace


class IoK8sApiFlowcontrolV1beta3ServiceAccountSubject(BaseModel):
    description: str
    properties: Properties451
    required: List[str]
    type: str


class Properties452(BaseModel):
    group: Group2
    kind: Kind
    serviceAccount: ServiceAccount1
    user: User9


class FieldsToDiscriminateBy7(BaseModel):
    group: str
    serviceAccount: str
    user: str


class XKubernetesUnion7(BaseModel):
    discriminator: str
    fields_to_discriminateBy: FieldsToDiscriminateBy7 = Field(
        ..., alias='fields-to-discriminateBy'
    )


class IoK8sApiFlowcontrolV1beta3Subject(BaseModel):
    description: str
    properties: Properties452
    required: List[str]
    type: str
    x_kubernetes_unions: List[XKubernetesUnion7] = Field(
        ..., alias='x-kubernetes-unions'
    )


class Properties453(BaseModel):
    name: Name


class IoK8sApiFlowcontrolV1beta3UserSubject(BaseModel):
    description: str
    properties: Properties453
    required: List[str]
    type: str


class Backend(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PathType(BaseModel):
    description: str
    type: str


class Properties454(BaseModel):
    backend: Backend
    path: Path
    pathType: PathType


class IoK8sApiNetworkingV1HTTPIngressPath(BaseModel):
    description: str
    properties: Properties454
    required: List[str]
    type: str


class Items334(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Paths(BaseModel):
    description: str
    items: Items334
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties455(BaseModel):
    paths: Paths


class IoK8sApiNetworkingV1HTTPIngressRuleValue(BaseModel):
    description: str
    properties: Properties455
    required: List[str]
    type: str


class Cidr(BaseModel):
    description: str
    type: str


class Items335(BaseModel):
    type: str


class Except(BaseModel):
    description: str
    items: Items335
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties456(BaseModel):
    cidr: Cidr
    except_: Except = Field(..., alias='except')


class IoK8sApiNetworkingV1IPBlock(BaseModel):
    description: str
    properties: Properties456
    required: List[str]
    type: str


class Status55(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties457(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status55


class IoK8sApiNetworkingV1Ingress(BaseModel):
    description: str
    properties: Properties457
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Resource4(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Service2(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties458(BaseModel):
    resource: Resource4
    service: Service2


class IoK8sApiNetworkingV1IngressBackend(BaseModel):
    description: str
    properties: Properties458
    type: str


class Properties459(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiNetworkingV1IngressClass(BaseModel):
    description: str
    properties: Properties459
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items337(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items336(BaseModel):
    description: str
    items: Items337
    type: str


class Properties460(BaseModel):
    apiVersion: ApiVersion
    items: Items336
    kind: Kind
    metadata: Metadata49


class IoK8sApiNetworkingV1IngressClassList(BaseModel):
    description: str
    properties: Properties460
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties461(BaseModel):
    apiGroup: ApiGroup
    kind: Kind
    name: Name
    namespace: Namespace
    scope: Scope


class IoK8sApiNetworkingV1IngressClassParametersReference(BaseModel):
    description: str
    properties: Properties461
    required: List[str]
    type: str


class Controller(BaseModel):
    description: str
    type: str


class Parameters(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties462(BaseModel):
    controller: Controller
    parameters: Parameters


class IoK8sApiNetworkingV1IngressClassSpec(BaseModel):
    description: str
    properties: Properties462
    type: str


class Items339(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items338(BaseModel):
    description: str
    items: Items339
    type: str


class Properties463(BaseModel):
    apiVersion: ApiVersion
    items: Items338
    kind: Kind
    metadata: Metadata49


class IoK8sApiNetworkingV1IngressList(BaseModel):
    description: str
    properties: Properties463
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items340(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Ports6(BaseModel):
    description: str
    items: Items340
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties464(BaseModel):
    hostname: Hostname
    ip: Ip
    ports: Ports6


class IoK8sApiNetworkingV1IngressLoadBalancerIngress(BaseModel):
    description: str
    properties: Properties464
    type: str


class Ingress1(BaseModel):
    description: str
    items: Items340
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties465(BaseModel):
    ingress: Ingress1


class IoK8sApiNetworkingV1IngressLoadBalancerStatus(BaseModel):
    description: str
    properties: Properties465
    type: str


class Properties466(BaseModel):
    error: Error
    port: Port8
    protocol: Protocol


class IoK8sApiNetworkingV1IngressPortStatus(BaseModel):
    description: str
    properties: Properties466
    required: List[str]
    type: str


class Http(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties467(BaseModel):
    host: Host
    http: Http


class IoK8sApiNetworkingV1IngressRule(BaseModel):
    description: str
    properties: Properties467
    type: str


class Port10(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties468(BaseModel):
    name: Name
    port: Port10


class IoK8sApiNetworkingV1IngressServiceBackend(BaseModel):
    description: str
    properties: Properties468
    required: List[str]
    type: str


class DefaultBackend(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class IngressClassName(BaseModel):
    description: str
    type: str


class Rules6(BaseModel):
    description: str
    items: Items340
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Tls(BaseModel):
    description: str
    items: Items340
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties469(BaseModel):
    defaultBackend: DefaultBackend
    ingressClassName: IngressClassName
    rules: Rules6
    tls: Tls


class IoK8sApiNetworkingV1IngressSpec(BaseModel):
    description: str
    properties: Properties469
    type: str


class Properties470(BaseModel):
    loadBalancer: LoadBalancer


class IoK8sApiNetworkingV1IngressStatus(BaseModel):
    description: str
    properties: Properties470
    type: str


class Items344(BaseModel):
    type: str


class Hosts(BaseModel):
    description: str
    items: Items344
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties471(BaseModel):
    hosts: Hosts
    secretName: SecretName


class IoK8sApiNetworkingV1IngressTLS(BaseModel):
    description: str
    properties: Properties471
    type: str


class Properties472(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiNetworkingV1NetworkPolicy(BaseModel):
    description: str
    properties: Properties472
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items345(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Ports7(BaseModel):
    description: str
    items: Items345
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class To(BaseModel):
    description: str
    items: Items345
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties473(BaseModel):
    ports: Ports7
    to: To


class IoK8sApiNetworkingV1NetworkPolicyEgressRule(BaseModel):
    description: str
    properties: Properties473
    type: str


class From(BaseModel):
    description: str
    items: Items345
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Ports8(BaseModel):
    description: str
    items: Items345
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties474(BaseModel):
    from_: From = Field(..., alias='from')
    ports: Ports8


class IoK8sApiNetworkingV1NetworkPolicyIngressRule(BaseModel):
    description: str
    properties: Properties474
    type: str


class Items349(BaseModel):
    description: str
    items: Items345
    type: str


class Properties475(BaseModel):
    apiVersion: ApiVersion
    items: Items349
    kind: Kind
    metadata: Metadata49


class IoK8sApiNetworkingV1NetworkPolicyList(BaseModel):
    description: str
    properties: Properties475
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class IpBlock(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PodSelector(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties476(BaseModel):
    ipBlock: IpBlock
    namespaceSelector: NamespaceSelector
    podSelector: PodSelector


class IoK8sApiNetworkingV1NetworkPolicyPeer(BaseModel):
    description: str
    properties: Properties476
    type: str


class EndPort(BaseModel):
    description: str
    format: str
    type: str


class Properties477(BaseModel):
    endPort: EndPort
    port: Port10
    protocol: Protocol


class IoK8sApiNetworkingV1NetworkPolicyPort(BaseModel):
    description: str
    properties: Properties477
    type: str


class Items351(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Egress(BaseModel):
    description: str
    items: Items351
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Ingress2(BaseModel):
    description: str
    items: Items351
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items353(BaseModel):
    type: str


class PolicyTypes(BaseModel):
    description: str
    items: Items353
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties478(BaseModel):
    egress: Egress
    ingress: Ingress2
    podSelector: PodSelector
    policyTypes: PolicyTypes


class IoK8sApiNetworkingV1NetworkPolicySpec(BaseModel):
    description: str
    properties: Properties478
    required: List[str]
    type: str


class Number(BaseModel):
    description: str
    format: str
    type: str


class Properties479(BaseModel):
    name: Name
    number: Number


class IoK8sApiNetworkingV1ServiceBackendPort(BaseModel):
    description: str
    properties: Properties479
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties480(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiNetworkingV1beta1IPAddress(BaseModel):
    description: str
    properties: Properties480
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items355(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items354(BaseModel):
    description: str
    items: Items355
    type: str


class Properties481(BaseModel):
    apiVersion: ApiVersion
    items: Items354
    kind: Kind
    metadata: Metadata49


class IoK8sApiNetworkingV1beta1IPAddressList(BaseModel):
    description: str
    properties: Properties481
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class ParentRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties482(BaseModel):
    parentRef: ParentRef


class IoK8sApiNetworkingV1beta1IPAddressSpec(BaseModel):
    description: str
    properties: Properties482
    required: List[str]
    type: str


class Group4(BaseModel):
    description: str
    type: str


class Resource5(BaseModel):
    description: str
    type: str


class Properties483(BaseModel):
    group: Group4
    name: Name
    namespace: Namespace
    resource: Resource5


class IoK8sApiNetworkingV1beta1ParentReference(BaseModel):
    description: str
    properties: Properties483
    required: List[str]
    type: str


class Properties484(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status55


class IoK8sApiNetworkingV1beta1ServiceCIDR(BaseModel):
    description: str
    properties: Properties484
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items357(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items356(BaseModel):
    description: str
    items: Items357
    type: str


class Properties485(BaseModel):
    apiVersion: ApiVersion
    items: Items356
    kind: Kind
    metadata: Metadata49


class IoK8sApiNetworkingV1beta1ServiceCIDRList(BaseModel):
    description: str
    properties: Properties485
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items358(BaseModel):
    type: str


class Cidrs(BaseModel):
    description: str
    items: Items358
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties486(BaseModel):
    cidrs: Cidrs


class IoK8sApiNetworkingV1beta1ServiceCIDRSpec(BaseModel):
    description: str
    properties: Properties486
    type: str


class Items359(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions23(BaseModel):
    description: str
    items: Items359
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties487(BaseModel):
    conditions: Conditions23


class IoK8sApiNetworkingV1beta1ServiceCIDRStatus(BaseModel):
    description: str
    properties: Properties487
    type: str


class AdditionalProperties35(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class PodFixed(BaseModel):
    additionalProperties: AdditionalProperties35
    description: str
    type: str


class Properties488(BaseModel):
    podFixed: PodFixed


class IoK8sApiNodeV1Overhead(BaseModel):
    description: str
    properties: Properties488
    type: str


class Handler(BaseModel):
    description: str
    type: str


class Overhead1(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Scheduling(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties489(BaseModel):
    apiVersion: ApiVersion
    handler: Handler
    kind: Kind
    metadata: Metadata49
    overhead: Overhead1
    scheduling: Scheduling


class IoK8sApiNodeV1RuntimeClass(BaseModel):
    description: str
    properties: Properties489
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items360(BaseModel):
    description: str
    items: Items359
    type: str


class Properties490(BaseModel):
    apiVersion: ApiVersion
    items: Items360
    kind: Kind
    metadata: Metadata49


class IoK8sApiNodeV1RuntimeClassList(BaseModel):
    description: str
    properties: Properties490
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AdditionalProperties36(BaseModel):
    type: str


class NodeSelector1(BaseModel):
    additionalProperties: AdditionalProperties36
    description: str
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items362(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Tolerations1(BaseModel):
    description: str
    items: Items362
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties491(BaseModel):
    nodeSelector: NodeSelector1
    tolerations: Tolerations1


class IoK8sApiNodeV1Scheduling(BaseModel):
    description: str
    properties: Properties491
    type: str


class DeleteOptions(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties492(BaseModel):
    apiVersion: ApiVersion
    deleteOptions: DeleteOptions
    kind: Kind
    metadata: Metadata49


class IoK8sApiPolicyV1Eviction(BaseModel):
    description: str
    properties: Properties492
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties493(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status55


class IoK8sApiPolicyV1PodDisruptionBudget(BaseModel):
    description: str
    properties: Properties493
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items363(BaseModel):
    description: str
    items: Items362
    type: str


class Properties494(BaseModel):
    apiVersion: ApiVersion
    items: Items363
    kind: Kind
    metadata: Metadata49


class IoK8sApiPolicyV1PodDisruptionBudgetList(BaseModel):
    description: str
    properties: Properties494
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class MinAvailable(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Selector13(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class UnhealthyPodEvictionPolicy(BaseModel):
    description: str
    type: str


class Properties495(BaseModel):
    maxUnavailable: MaxUnavailable
    minAvailable: MinAvailable
    selector: Selector13
    unhealthyPodEvictionPolicy: UnhealthyPodEvictionPolicy


class IoK8sApiPolicyV1PodDisruptionBudgetSpec(BaseModel):
    description: str
    properties: Properties495
    type: str


class Items365(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions24(BaseModel):
    description: str
    items: Items365
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class CurrentHealthy(BaseModel):
    description: str
    format: str
    type: str


class DesiredHealthy(BaseModel):
    description: str
    format: str
    type: str


class AdditionalProperties37(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class DisruptedPods(BaseModel):
    additionalProperties: AdditionalProperties37
    description: str
    type: str


class DisruptionsAllowed(BaseModel):
    description: str
    format: str
    type: str


class ExpectedPods(BaseModel):
    description: str
    format: str
    type: str


class Properties496(BaseModel):
    conditions: Conditions24
    currentHealthy: CurrentHealthy
    desiredHealthy: DesiredHealthy
    disruptedPods: DisruptedPods
    disruptionsAllowed: DisruptionsAllowed
    expectedPods: ExpectedPods
    observedGeneration: ObservedGeneration


class IoK8sApiPolicyV1PodDisruptionBudgetStatus(BaseModel):
    description: str
    properties: Properties496
    required: List[str]
    type: str


class ClusterRoleSelectors(BaseModel):
    description: str
    items: Items365
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties497(BaseModel):
    clusterRoleSelectors: ClusterRoleSelectors


class IoK8sApiRbacV1AggregationRule(BaseModel):
    description: str
    properties: Properties497
    type: str


class AggregationRule(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Rules7(BaseModel):
    description: str
    items: Items365
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties498(BaseModel):
    aggregationRule: AggregationRule
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    rules: Rules7


class IoK8sApiRbacV1ClusterRole(BaseModel):
    description: str
    properties: Properties498
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class RoleRef(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Subjects2(BaseModel):
    description: str
    items: Items365
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties499(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    roleRef: RoleRef
    subjects: Subjects2


class IoK8sApiRbacV1ClusterRoleBinding(BaseModel):
    description: str
    properties: Properties499
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items369(BaseModel):
    description: str
    items: Items365
    type: str


class Properties500(BaseModel):
    apiVersion: ApiVersion
    items: Items369
    kind: Kind
    metadata: Metadata49


class IoK8sApiRbacV1ClusterRoleBindingList(BaseModel):
    description: str
    properties: Properties500
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items372(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items371(BaseModel):
    description: str
    items: Items372
    type: str


class Properties501(BaseModel):
    apiVersion: ApiVersion
    items: Items371
    kind: Kind
    metadata: Metadata49


class IoK8sApiRbacV1ClusterRoleList(BaseModel):
    description: str
    properties: Properties501
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items373(BaseModel):
    type: str


class ApiGroups7(BaseModel):
    description: str
    items: Items373
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class NonResourceURLs3(BaseModel):
    description: str
    items: Items373
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ResourceNames4(BaseModel):
    description: str
    items: Items373
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Resources12(BaseModel):
    description: str
    items: Items373
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Verbs6(BaseModel):
    description: str
    items: Items373
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties502(BaseModel):
    apiGroups: ApiGroups7
    nonResourceURLs: NonResourceURLs3
    resourceNames: ResourceNames4
    resources: Resources12
    verbs: Verbs6


class IoK8sApiRbacV1PolicyRule(BaseModel):
    description: str
    properties: Properties502
    required: List[str]
    type: str


class Items378(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Rules8(BaseModel):
    description: str
    items: Items378
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties503(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    rules: Rules8


class IoK8sApiRbacV1Role(BaseModel):
    description: str
    properties: Properties503
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Subjects3(BaseModel):
    description: str
    items: Items378
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties504(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    roleRef: RoleRef
    subjects: Subjects3


class IoK8sApiRbacV1RoleBinding(BaseModel):
    description: str
    properties: Properties504
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items380(BaseModel):
    description: str
    items: Items378
    type: str


class Properties505(BaseModel):
    apiVersion: ApiVersion
    items: Items380
    kind: Kind
    metadata: Metadata49


class IoK8sApiRbacV1RoleBindingList(BaseModel):
    description: str
    properties: Properties505
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items383(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items382(BaseModel):
    description: str
    items: Items383
    type: str


class Properties506(BaseModel):
    apiVersion: ApiVersion
    items: Items382
    kind: Kind
    metadata: Metadata49


class IoK8sApiRbacV1RoleList(BaseModel):
    description: str
    properties: Properties506
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties507(BaseModel):
    apiGroup: ApiGroup
    kind: Kind
    name: Name


class IoK8sApiRbacV1RoleRef(BaseModel):
    description: str
    properties: Properties507
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties508(BaseModel):
    apiGroup: ApiGroup
    kind: Kind
    name: Name
    namespace: Namespace


class IoK8sApiRbacV1Subject(BaseModel):
    description: str
    properties: Properties508
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Devices(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class NodeSelector2(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties509(BaseModel):
    controller: Controller
    devices: Devices
    nodeSelector: NodeSelector2


class IoK8sApiResourceV1alpha3AllocationResult(BaseModel):
    description: str
    properties: Properties509
    type: str


class Attributes(BaseModel):
    additionalProperties: AdditionalProperties37
    description: str
    type: str


class Capacity3(BaseModel):
    additionalProperties: AdditionalProperties37
    description: str
    type: str


class Properties510(BaseModel):
    attributes: Attributes
    capacity: Capacity3


class IoK8sApiResourceV1alpha3BasicDevice(BaseModel):
    description: str
    properties: Properties510
    type: str


class Properties511(BaseModel):
    expression: Expression


class IoK8sApiResourceV1alpha3CELDeviceSelector(BaseModel):
    description: str
    properties: Properties511
    required: List[str]
    type: str


class Basic(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties512(BaseModel):
    basic: Basic
    name: Name


class IoK8sApiResourceV1alpha3Device(BaseModel):
    description: str
    properties: Properties512
    required: List[str]
    type: str


class Opaque(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Items384(BaseModel):
    type: str


class Requests2(BaseModel):
    description: str
    items: Items384
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Source1(BaseModel):
    description: str
    type: str


class Properties513(BaseModel):
    opaque: Opaque
    requests: Requests2
    source: Source1


class IoK8sApiResourceV1alpha3DeviceAllocationConfiguration(BaseModel):
    description: str
    properties: Properties513
    required: List[str]
    type: str


class Items385(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Config1(BaseModel):
    description: str
    items: Items385
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Results(BaseModel):
    description: str
    items: Items385
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties514(BaseModel):
    config: Config1
    results: Results


class IoK8sApiResourceV1alpha3DeviceAllocationResult(BaseModel):
    description: str
    properties: Properties514
    type: str


class Bool(BaseModel):
    description: str
    type: str


class Int(BaseModel):
    description: str
    format: str
    type: str


class String(BaseModel):
    description: str
    type: str


class Properties515(BaseModel):
    bool: Bool
    int: Int
    string: String
    version: Version


class IoK8sApiResourceV1alpha3DeviceAttribute(BaseModel):
    description: str
    properties: Properties515
    type: str


class Config2(BaseModel):
    description: str
    items: Items385
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Constraints(BaseModel):
    description: str
    items: Items385
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Requests3(BaseModel):
    description: str
    items: Items385
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties516(BaseModel):
    config: Config2
    constraints: Constraints
    requests: Requests3


class IoK8sApiResourceV1alpha3DeviceClaim(BaseModel):
    description: str
    properties: Properties516
    type: str


class Items390(BaseModel):
    type: str


class Requests4(BaseModel):
    description: str
    items: Items390
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties517(BaseModel):
    opaque: Opaque
    requests: Requests4


class IoK8sApiResourceV1alpha3DeviceClaimConfiguration(BaseModel):
    description: str
    properties: Properties517
    type: str


class Properties518(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiResourceV1alpha3DeviceClass(BaseModel):
    description: str
    properties: Properties518
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties519(BaseModel):
    opaque: Opaque


class IoK8sApiResourceV1alpha3DeviceClassConfiguration(BaseModel):
    description: str
    properties: Properties519
    type: str


class Items392(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items391(BaseModel):
    description: str
    items: Items392
    type: str


class Properties520(BaseModel):
    apiVersion: ApiVersion
    items: Items391
    kind: Kind
    metadata: Metadata49


class IoK8sApiResourceV1alpha3DeviceClassList(BaseModel):
    description: str
    properties: Properties520
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items393(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Config3(BaseModel):
    description: str
    items: Items393
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Selectors(BaseModel):
    description: str
    items: Items393
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SuitableNodes(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties521(BaseModel):
    config: Config3
    selectors: Selectors
    suitableNodes: SuitableNodes


class IoK8sApiResourceV1alpha3DeviceClassSpec(BaseModel):
    description: str
    properties: Properties521
    type: str


class MatchAttribute(BaseModel):
    description: str
    type: str


class Items395(BaseModel):
    type: str


class Requests5(BaseModel):
    description: str
    items: Items395
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties522(BaseModel):
    matchAttribute: MatchAttribute
    requests: Requests5


class IoK8sApiResourceV1alpha3DeviceConstraint(BaseModel):
    description: str
    properties: Properties522
    type: str


class AdminAccess(BaseModel):
    description: str
    type: str


class AllocationMode(BaseModel):
    description: str
    type: str


class DeviceClassName(BaseModel):
    description: str
    type: str


class Items396(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Selectors1(BaseModel):
    description: str
    items: Items396
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties523(BaseModel):
    adminAccess: AdminAccess
    allocationMode: AllocationMode
    count: Count
    deviceClassName: DeviceClassName
    name: Name
    selectors: Selectors1


class IoK8sApiResourceV1alpha3DeviceRequest(BaseModel):
    description: str
    properties: Properties523
    required: List[str]
    type: str


class Device(BaseModel):
    description: str
    type: str


class Properties524(BaseModel):
    device: Device
    driver: Driver
    pool: Pool
    request: Request1


class IoK8sApiResourceV1alpha3DeviceRequestAllocationResult(BaseModel):
    description: str
    properties: Properties524
    required: List[str]
    type: str


class Cel(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties525(BaseModel):
    cel: Cel


class IoK8sApiResourceV1alpha3DeviceSelector(BaseModel):
    description: str
    properties: Properties525
    type: str


class Properties526(BaseModel):
    driver: Driver
    parameters: Parameters


class IoK8sApiResourceV1alpha3OpaqueDeviceConfiguration(BaseModel):
    description: str
    properties: Properties526
    required: List[str]
    type: str


class Properties527(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status55


class IoK8sApiResourceV1alpha3PodSchedulingContext(BaseModel):
    description: str
    properties: Properties527
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items397(BaseModel):
    description: str
    items: Items396
    type: str


class Properties528(BaseModel):
    apiVersion: ApiVersion
    items: Items397
    kind: Kind
    metadata: Metadata49


class IoK8sApiResourceV1alpha3PodSchedulingContextList(BaseModel):
    description: str
    properties: Properties528
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items399(BaseModel):
    type: str


class PotentialNodes(BaseModel):
    description: str
    items: Items399
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SelectedNode(BaseModel):
    description: str
    type: str


class Properties529(BaseModel):
    potentialNodes: PotentialNodes
    selectedNode: SelectedNode


class IoK8sApiResourceV1alpha3PodSchedulingContextSpec(BaseModel):
    description: str
    properties: Properties529
    type: str


class Items400(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ResourceClaims1(BaseModel):
    description: str
    items: Items400
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties530(BaseModel):
    resourceClaims: ResourceClaims1


class IoK8sApiResourceV1alpha3PodSchedulingContextStatus(BaseModel):
    description: str
    properties: Properties530
    type: str


class Properties531(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status55


class IoK8sApiResourceV1alpha3ResourceClaim(BaseModel):
    description: str
    properties: Properties531
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties532(BaseModel):
    apiGroup: ApiGroup
    name: Name
    resource: Resource5
    uid: Uid6


class IoK8sApiResourceV1alpha3ResourceClaimConsumerReference(BaseModel):
    description: str
    properties: Properties532
    required: List[str]
    type: str


class Items401(BaseModel):
    description: str
    items: Items400
    type: str


class Properties533(BaseModel):
    apiVersion: ApiVersion
    items: Items401
    kind: Kind
    metadata: Metadata49


class IoK8sApiResourceV1alpha3ResourceClaimList(BaseModel):
    description: str
    properties: Properties533
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items403(BaseModel):
    type: str


class UnsuitableNodes(BaseModel):
    description: str
    items: Items403
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties534(BaseModel):
    name: Name
    unsuitableNodes: UnsuitableNodes


class IoK8sApiResourceV1alpha3ResourceClaimSchedulingStatus(BaseModel):
    description: str
    properties: Properties534
    required: List[str]
    type: str


class Properties535(BaseModel):
    controller: Controller
    devices: Devices


class IoK8sApiResourceV1alpha3ResourceClaimSpec(BaseModel):
    description: str
    properties: Properties535
    type: str


class Allocation(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class DeallocationRequested(BaseModel):
    description: str
    type: str


class Items404(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ReservedFor(BaseModel):
    description: str
    items: Items404
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties536(BaseModel):
    allocation: Allocation
    deallocationRequested: DeallocationRequested
    reservedFor: ReservedFor


class IoK8sApiResourceV1alpha3ResourceClaimStatus(BaseModel):
    description: str
    properties: Properties536
    type: str


class Properties537(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiResourceV1alpha3ResourceClaimTemplate(BaseModel):
    description: str
    properties: Properties537
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items405(BaseModel):
    description: str
    items: Items404
    type: str


class Properties538(BaseModel):
    apiVersion: ApiVersion
    items: Items405
    kind: Kind
    metadata: Metadata49


class IoK8sApiResourceV1alpha3ResourceClaimTemplateList(BaseModel):
    description: str
    properties: Properties538
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties539(BaseModel):
    metadata: Metadata49
    spec: Spec


class IoK8sApiResourceV1alpha3ResourceClaimTemplateSpec(BaseModel):
    description: str
    properties: Properties539
    required: List[str]
    type: str


class Generation(BaseModel):
    description: str
    format: str
    type: str


class ResourceSliceCount(BaseModel):
    description: str
    format: str
    type: str


class Properties540(BaseModel):
    generation: Generation
    name: Name
    resourceSliceCount: ResourceSliceCount


class IoK8sApiResourceV1alpha3ResourcePool(BaseModel):
    description: str
    properties: Properties540
    required: List[str]
    type: str


class Properties541(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiResourceV1alpha3ResourceSlice(BaseModel):
    description: str
    properties: Properties541
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items408(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items407(BaseModel):
    description: str
    items: Items408
    type: str


class ListMeta(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties542(BaseModel):
    apiVersion: ApiVersion
    items: Items407
    kind: Kind
    listMeta: ListMeta


class IoK8sApiResourceV1alpha3ResourceSliceList(BaseModel):
    description: str
    properties: Properties542
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AllNodes(BaseModel):
    description: str
    type: str


class Items409(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Devices2(BaseModel):
    description: str
    items: Items409
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Pool3(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties543(BaseModel):
    allNodes: AllNodes
    devices: Devices2
    driver: Driver
    nodeName: NodeName
    nodeSelector: NodeSelector2
    pool: Pool3


class IoK8sApiResourceV1alpha3ResourceSliceSpec(BaseModel):
    description: str
    properties: Properties543
    required: List[str]
    type: str


class Description(BaseModel):
    description: str
    type: str


class GlobalDefault(BaseModel):
    description: str
    type: str


class Value9(BaseModel):
    description: str
    format: str
    type: str


class Properties544(BaseModel):
    apiVersion: ApiVersion
    description: Description
    globalDefault: GlobalDefault
    kind: Kind
    metadata: Metadata49
    preemptionPolicy: PreemptionPolicy
    value: Value9


class IoK8sApiSchedulingV1PriorityClass(BaseModel):
    description: str
    properties: Properties544
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items410(BaseModel):
    description: str
    items: Items409
    type: str


class Properties545(BaseModel):
    apiVersion: ApiVersion
    items: Items410
    kind: Kind
    metadata: Metadata49


class IoK8sApiSchedulingV1PriorityClassList(BaseModel):
    description: str
    properties: Properties545
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties546(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiStorageV1CSIDriver(BaseModel):
    description: str
    properties: Properties546
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items413(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items412(BaseModel):
    description: str
    items: Items413
    type: str


class Properties547(BaseModel):
    apiVersion: ApiVersion
    items: Items412
    kind: Kind
    metadata: Metadata49


class IoK8sApiStorageV1CSIDriverList(BaseModel):
    description: str
    properties: Properties547
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AttachRequired(BaseModel):
    description: str
    type: str


class FsGroupPolicy(BaseModel):
    description: str
    type: str


class PodInfoOnMount(BaseModel):
    description: str
    type: str


class RequiresRepublish(BaseModel):
    description: str
    type: str


class SeLinuxMount(BaseModel):
    description: str
    type: str


class StorageCapacity(BaseModel):
    description: str
    type: str


class Items414(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class TokenRequests(BaseModel):
    description: str
    items: Items414
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items415(BaseModel):
    type: str


class VolumeLifecycleModes(BaseModel):
    description: str
    items: Items415
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties548(BaseModel):
    attachRequired: AttachRequired
    fsGroupPolicy: FsGroupPolicy
    podInfoOnMount: PodInfoOnMount
    requiresRepublish: RequiresRepublish
    seLinuxMount: SeLinuxMount
    storageCapacity: StorageCapacity
    tokenRequests: TokenRequests
    volumeLifecycleModes: VolumeLifecycleModes


class IoK8sApiStorageV1CSIDriverSpec(BaseModel):
    description: str
    properties: Properties548
    type: str


class Properties549(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec


class IoK8sApiStorageV1CSINode(BaseModel):
    description: str
    properties: Properties549
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Allocatable1(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class NodeID(BaseModel):
    description: str
    type: str


class TopologyKeys(BaseModel):
    description: str
    items: Items415
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties550(BaseModel):
    allocatable: Allocatable1
    name: Name
    nodeID: NodeID
    topologyKeys: TopologyKeys


class IoK8sApiStorageV1CSINodeDriver(BaseModel):
    description: str
    properties: Properties550
    required: List[str]
    type: str


class Items418(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items417(BaseModel):
    description: str
    items: Items418
    type: str


class Properties551(BaseModel):
    apiVersion: ApiVersion
    items: Items417
    kind: Kind
    metadata: Metadata49


class IoK8sApiStorageV1CSINodeList(BaseModel):
    description: str
    properties: Properties551
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items419(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Drivers(BaseModel):
    description: str
    items: Items419
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties552(BaseModel):
    drivers: Drivers


class IoK8sApiStorageV1CSINodeSpec(BaseModel):
    description: str
    properties: Properties552
    required: List[str]
    type: str


class Capacity4(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class MaximumVolumeSize(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class NodeTopology(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties553(BaseModel):
    apiVersion: ApiVersion
    capacity: Capacity4
    kind: Kind
    maximumVolumeSize: MaximumVolumeSize
    metadata: Metadata49
    nodeTopology: NodeTopology
    storageClassName: StorageClassName


class IoK8sApiStorageV1CSIStorageCapacity(BaseModel):
    description: str
    properties: Properties553
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items420(BaseModel):
    description: str
    items: Items419
    type: str


class Properties554(BaseModel):
    apiVersion: ApiVersion
    items: Items420
    kind: Kind
    metadata: Metadata49


class IoK8sApiStorageV1CSIStorageCapacityList(BaseModel):
    description: str
    properties: Properties554
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class AllowVolumeExpansion(BaseModel):
    description: str
    type: str


class Items422(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AllowedTopologies(BaseModel):
    description: str
    items: Items422
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items423(BaseModel):
    type: str


class MountOptions1(BaseModel):
    description: str
    items: Items423
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class AdditionalProperties40(BaseModel):
    type: str


class Parameters2(BaseModel):
    additionalProperties: AdditionalProperties40
    description: str
    type: str


class Provisioner(BaseModel):
    description: str
    type: str


class ReclaimPolicy(BaseModel):
    description: str
    type: str


class VolumeBindingMode(BaseModel):
    description: str
    type: str


class Properties555(BaseModel):
    allowVolumeExpansion: AllowVolumeExpansion
    allowedTopologies: AllowedTopologies
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    mountOptions: MountOptions1
    parameters: Parameters2
    provisioner: Provisioner
    reclaimPolicy: ReclaimPolicy
    volumeBindingMode: VolumeBindingMode


class IoK8sApiStorageV1StorageClass(BaseModel):
    description: str
    properties: Properties555
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items425(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items424(BaseModel):
    description: str
    items: Items425
    type: str


class Properties556(BaseModel):
    apiVersion: ApiVersion
    items: Items424
    kind: Kind
    metadata: Metadata49


class IoK8sApiStorageV1StorageClassList(BaseModel):
    description: str
    properties: Properties556
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties557(BaseModel):
    audience: Audience
    expirationSeconds: ExpirationSeconds


class IoK8sApiStorageV1TokenRequest(BaseModel):
    description: str
    properties: Properties557
    required: List[str]
    type: str


class Properties558(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status55


class IoK8sApiStorageV1VolumeAttachment(BaseModel):
    description: str
    properties: Properties558
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items427(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items426(BaseModel):
    description: str
    items: Items427
    type: str


class Properties559(BaseModel):
    apiVersion: ApiVersion
    items: Items426
    kind: Kind
    metadata: Metadata49


class IoK8sApiStorageV1VolumeAttachmentList(BaseModel):
    description: str
    properties: Properties559
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class InlineVolumeSpec(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PersistentVolumeName(BaseModel):
    description: str
    type: str


class Properties560(BaseModel):
    inlineVolumeSpec: InlineVolumeSpec
    persistentVolumeName: PersistentVolumeName


class IoK8sApiStorageV1VolumeAttachmentSource(BaseModel):
    description: str
    properties: Properties560
    type: str


class Attacher(BaseModel):
    description: str
    type: str


class Source2(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties561(BaseModel):
    attacher: Attacher
    nodeName: NodeName
    source: Source2


class IoK8sApiStorageV1VolumeAttachmentSpec(BaseModel):
    description: str
    properties: Properties561
    required: List[str]
    type: str


class AttachError(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Attached(BaseModel):
    description: str
    type: str


class AttachmentMetadata(BaseModel):
    additionalProperties: AdditionalProperties40
    description: str
    type: str


class DetachError(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties562(BaseModel):
    attachError: AttachError
    attached: Attached
    attachmentMetadata: AttachmentMetadata
    detachError: DetachError


class IoK8sApiStorageV1VolumeAttachmentStatus(BaseModel):
    description: str
    properties: Properties562
    required: List[str]
    type: str


class Time(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties563(BaseModel):
    message: Message16
    time: Time


class IoK8sApiStorageV1VolumeError(BaseModel):
    description: str
    properties: Properties563
    type: str


class Properties564(BaseModel):
    count: Count


class IoK8sApiStorageV1VolumeNodeResources(BaseModel):
    description: str
    properties: Properties564
    type: str


class DriverName(BaseModel):
    description: str
    type: str


class Parameters3(BaseModel):
    additionalProperties: AdditionalProperties40
    description: str
    type: str


class Properties565(BaseModel):
    apiVersion: ApiVersion
    driverName: DriverName
    kind: Kind
    metadata: Metadata49
    parameters: Parameters3


class IoK8sApiStorageV1alpha1VolumeAttributesClass(BaseModel):
    description: str
    properties: Properties565
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items429(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items428(BaseModel):
    description: str
    items: Items429
    type: str


class Properties566(BaseModel):
    apiVersion: ApiVersion
    items: Items428
    kind: Kind
    metadata: Metadata49


class IoK8sApiStorageV1alpha1VolumeAttributesClassList(BaseModel):
    description: str
    properties: Properties566
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameters4(BaseModel):
    additionalProperties: AdditionalProperties40
    description: str
    type: str


class Properties567(BaseModel):
    apiVersion: ApiVersion
    driverName: DriverName
    kind: Kind
    metadata: Metadata49
    parameters: Parameters4


class IoK8sApiStorageV1beta1VolumeAttributesClass(BaseModel):
    description: str
    properties: Properties567
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items431(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items430(BaseModel):
    description: str
    items: Items431
    type: str


class Properties568(BaseModel):
    apiVersion: ApiVersion
    items: Items430
    kind: Kind
    metadata: Metadata49


class IoK8sApiStorageV1beta1VolumeAttributesClassList(BaseModel):
    description: str
    properties: Properties568
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Properties569(BaseModel):
    group: Group4
    resource: Resource5
    version: Version


class IoK8sApiStoragemigrationV1alpha1GroupVersionResource(BaseModel):
    description: str
    properties: Properties569
    type: str


class Status61(BaseModel):
    description: str
    type: str


class Properties570(BaseModel):
    lastUpdateTime: LastUpdateTime
    message: Message16
    reason: Reason16
    status: Status61
    type: Type25


class IoK8sApiStoragemigrationV1alpha1MigrationCondition(BaseModel):
    description: str
    properties: Properties570
    required: List[str]
    type: str


class Status62(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties571(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status62


class IoK8sApiStoragemigrationV1alpha1StorageVersionMigration(BaseModel):
    description: str
    properties: Properties571
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items433(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items432(BaseModel):
    description: str
    items: Items433
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties572(BaseModel):
    apiVersion: ApiVersion
    items: Items432
    kind: Kind
    metadata: Metadata49


class IoK8sApiStoragemigrationV1alpha1StorageVersionMigrationList(BaseModel):
    description: str
    properties: Properties572
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class ContinueToken(BaseModel):
    description: str
    type: str


class Resource8(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties573(BaseModel):
    continueToken: ContinueToken
    resource: Resource8


class IoK8sApiStoragemigrationV1alpha1StorageVersionMigrationSpec(BaseModel):
    description: str
    properties: Properties573
    required: List[str]
    type: str


class Items434(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions25(BaseModel):
    description: str
    items: Items434
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties574(BaseModel):
    conditions: Conditions25
    resourceVersion: ResourceVersion


class IoK8sApiStoragemigrationV1alpha1StorageVersionMigrationStatus(BaseModel):
    description: str
    properties: Properties574
    type: str


class Format(BaseModel):
    description: str
    type: str


class JsonPath(BaseModel):
    description: str
    type: str


class Properties575(BaseModel):
    description: Description
    format: Format
    jsonPath: JsonPath
    name: Name
    priority: Priority
    type: Type25


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition(
    BaseModel
):
    description: str
    properties: Properties575
    required: List[str]
    type: str


class Webhook(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties576(BaseModel):
    strategy: Strategy1
    webhook: Webhook


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion(
    BaseModel
):
    description: str
    properties: Properties576
    required: List[str]
    type: str


class Properties577(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status62


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition(
    BaseModel
):
    description: str
    properties: Properties577
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status64(BaseModel):
    description: str
    type: str


class Properties578(BaseModel):
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status64
    type: Type25


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionCondition(
    BaseModel
):
    description: str
    properties: Properties578
    required: List[str]
    type: str


class Items435(BaseModel):
    description: str
    items: Items434
    type: str


class Properties579(BaseModel):
    apiVersion: ApiVersion
    items: Items435
    kind: Kind
    metadata: Metadata49


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionList(
    BaseModel
):
    description: str
    properties: Properties579
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items437(BaseModel):
    type: str


class Categories(BaseModel):
    description: str
    items: Items437
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ListKind(BaseModel):
    description: str
    type: str


class Plural(BaseModel):
    description: str
    type: str


class ShortNames(BaseModel):
    description: str
    items: Items437
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Singular(BaseModel):
    description: str
    type: str


class Properties580(BaseModel):
    categories: Categories
    kind: Kind
    listKind: ListKind
    plural: Plural
    shortNames: ShortNames
    singular: Singular


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames(
    BaseModel
):
    description: str
    properties: Properties580
    required: List[str]
    type: str


class Conversion(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Names1(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PreserveUnknownFields(BaseModel):
    description: str
    type: str


class Items439(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Versions(BaseModel):
    description: str
    items: Items439
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties581(BaseModel):
    conversion: Conversion
    group: Group4
    names: Names1
    preserveUnknownFields: PreserveUnknownFields
    scope: Scope
    versions: Versions


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec(
    BaseModel
):
    description: str
    properties: Properties581
    required: List[str]
    type: str


class AcceptedNames(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Conditions26(BaseModel):
    description: str
    items: Items439
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items441(BaseModel):
    type: str


class StoredVersions(BaseModel):
    description: str
    items: Items441
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties582(BaseModel):
    acceptedNames: AcceptedNames
    conditions: Conditions26
    storedVersions: StoredVersions


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionStatus(
    BaseModel
):
    description: str
    properties: Properties582
    type: str


class Items442(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AdditionalPrinterColumns(BaseModel):
    description: str
    items: Items442
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Deprecated(BaseModel):
    description: str
    type: str


class DeprecationWarning(BaseModel):
    description: str
    type: str


class Schema(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class SelectableFields(BaseModel):
    description: str
    items: Items442
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Served(BaseModel):
    description: str
    type: str


class Storage(BaseModel):
    description: str
    type: str


class Subresources(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties583(BaseModel):
    additionalPrinterColumns: AdditionalPrinterColumns
    deprecated: Deprecated
    deprecationWarning: DeprecationWarning
    name: Name
    schema_: Schema = Field(..., alias='schema')
    selectableFields: SelectableFields
    served: Served
    storage: Storage
    subresources: Subresources


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion(
    BaseModel
):
    description: str
    properties: Properties583
    required: List[str]
    type: str


class LabelSelectorPath(BaseModel):
    description: str
    type: str


class SpecReplicasPath(BaseModel):
    description: str
    type: str


class StatusReplicasPath(BaseModel):
    description: str
    type: str


class Properties584(BaseModel):
    labelSelectorPath: LabelSelectorPath
    specReplicasPath: SpecReplicasPath
    statusReplicasPath: StatusReplicasPath


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale(
    BaseModel
):
    description: str
    properties: Properties584
    required: List[str]
    type: str


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus(
    BaseModel
):
    description: str
    type: str


class Scale(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Status65(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties585(BaseModel):
    scale: Scale
    status: Status65


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources(
    BaseModel
):
    description: str
    properties: Properties585
    type: str


class OpenAPIV3Schema(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties586(BaseModel):
    openAPIV3Schema: OpenAPIV3Schema


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation(
    BaseModel
):
    description: str
    properties: Properties586
    type: str


class Description2(BaseModel):
    type: str


class Url1(BaseModel):
    type: str


class Properties587(BaseModel):
    description: Description2
    url: Url1


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation(BaseModel):
    description: str
    properties: Properties587
    type: str


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSON(BaseModel):
    description: str


class FieldRef5(BaseModel):
    type: str


class FieldSchema(BaseModel):
    type: str


class AdditionalItems(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AdditionalProperties44(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AllOf(BaseModel):
    items: Items442
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class AnyOf(BaseModel):
    items: Items442
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Default1(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Definitions1(BaseModel):
    additionalProperties: AdditionalProperties44
    type: str


class Dependencies(BaseModel):
    additionalProperties: AdditionalProperties44
    type: str


class Enum(BaseModel):
    items: Items442
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Example(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ExclusiveMaximum(BaseModel):
    type: str


class ExclusiveMinimum(BaseModel):
    type: str


class ExternalDocs(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Id(BaseModel):
    type: str


class MaxItems(BaseModel):
    format: str
    type: str


class MaxLength(BaseModel):
    format: str
    type: str


class MaxProperties(BaseModel):
    format: str
    type: str


class Maximum(BaseModel):
    format: str
    type: str


class MinItems(BaseModel):
    format: str
    type: str


class MinLength(BaseModel):
    format: str
    type: str


class MinProperties(BaseModel):
    format: str
    type: str


class Minimum(BaseModel):
    format: str
    type: str


class MultipleOf(BaseModel):
    format: str
    type: str


class Not(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Nullable(BaseModel):
    type: str


class OneOf(BaseModel):
    items: Items442
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Pattern(BaseModel):
    type: str


class PatternProperties(BaseModel):
    additionalProperties: AdditionalProperties44
    type: str


class Properties589(BaseModel):
    additionalProperties: AdditionalProperties44
    type: str


class Items449(BaseModel):
    type: str


class Required1(BaseModel):
    items: Items449
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Title(BaseModel):
    type: str


class Type45(BaseModel):
    type: str


class UniqueItems(BaseModel):
    type: str


class XKubernetesEmbeddedResource(BaseModel):
    description: str
    type: str


class XKubernetesIntOrString(BaseModel):
    description: str
    type: str


class XKubernetesListMapKeys(BaseModel):
    description: str
    items: Items449
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class XKubernetesListType(BaseModel):
    description: str
    type: str


class XKubernetesMapType(BaseModel):
    description: str
    type: str


class XKubernetesPreserveUnknownFields(BaseModel):
    description: str
    type: str


class Items451(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class XKubernetesValidations(BaseModel):
    description: str
    items: Items451
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties588(BaseModel):
    field_ref: FieldRef5 = Field(..., alias='$ref')
    field_schema: FieldSchema = Field(..., alias='$schema')
    additionalItems: AdditionalItems
    additionalProperties: AdditionalProperties44
    allOf: AllOf
    anyOf: AnyOf
    default: Default1
    definitions: Definitions1
    dependencies: Dependencies
    description: Description2
    enum: Enum
    example: Example
    exclusiveMaximum: ExclusiveMaximum
    exclusiveMinimum: ExclusiveMinimum
    externalDocs: ExternalDocs
    format: Format
    id: Id
    items: Items442
    maxItems: MaxItems
    maxLength: MaxLength
    maxProperties: MaxProperties
    maximum: Maximum
    minItems: MinItems
    minLength: MinLength
    minProperties: MinProperties
    minimum: Minimum
    multipleOf: MultipleOf
    not_: Not = Field(..., alias='not')
    nullable: Nullable
    oneOf: OneOf
    pattern: Pattern
    patternProperties: PatternProperties
    properties: Properties589
    required: Required1
    title: Title
    type: Type45
    uniqueItems: UniqueItems
    x_kubernetes_embedded_resource: XKubernetesEmbeddedResource = Field(
        ..., alias='x-kubernetes-embedded-resource'
    )
    x_kubernetes_int_or_string: XKubernetesIntOrString = Field(
        ..., alias='x-kubernetes-int-or-string'
    )
    x_kubernetes_list_map_keys: XKubernetesListMapKeys = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: XKubernetesListType = Field(
        ..., alias='x-kubernetes-list-type'
    )
    x_kubernetes_map_type: XKubernetesMapType = Field(
        ..., alias='x-kubernetes-map-type'
    )
    x_kubernetes_preserve_unknown_fields: XKubernetesPreserveUnknownFields = Field(
        ..., alias='x-kubernetes-preserve-unknown-fields'
    )
    x_kubernetes_validations: XKubernetesValidations = Field(
        ..., alias='x-kubernetes-validations'
    )


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps(BaseModel):
    description: str
    properties: Properties588
    type: str


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrArray(
    BaseModel
):
    description: str


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrBool(BaseModel):
    description: str


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrStringArray(
    BaseModel
):
    description: str


class Properties590(BaseModel):
    jsonPath: JsonPath


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1SelectableField(BaseModel):
    description: str
    properties: Properties590
    required: List[str]
    type: str


class Port12(BaseModel):
    description: str
    format: str
    type: str


class Properties591(BaseModel):
    name: Name
    namespace: Namespace
    path: Path
    port: Port12


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference(BaseModel):
    description: str
    properties: Properties591
    required: List[str]
    type: str


class OptionalOldSelf(BaseModel):
    description: str
    type: str


class Rule(BaseModel):
    description: str
    type: str


class Properties592(BaseModel):
    fieldPath: FieldPath
    message: Message16
    messageExpression: MessageExpression
    optionalOldSelf: OptionalOldSelf
    reason: Reason16
    rule: Rule


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1ValidationRule(BaseModel):
    description: str
    properties: Properties592
    required: List[str]
    type: str


class Url2(BaseModel):
    description: str
    type: str


class Properties593(BaseModel):
    caBundle: CaBundle
    service: Service2
    url: Url2


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig(BaseModel):
    description: str
    properties: Properties593
    type: str


class Items452(BaseModel):
    type: str


class ConversionReviewVersions(BaseModel):
    description: str
    items: Items452
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties594(BaseModel):
    clientConfig: ClientConfig
    conversionReviewVersions: ConversionReviewVersions


class IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion(BaseModel):
    description: str
    properties: Properties594
    required: List[str]
    type: str


class IoK8sApimachineryPkgApiResourceQuantity(BaseModel):
    description: str
    type: str


class PreferredVersion(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Items453(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ServerAddressByClientCIDRs(BaseModel):
    description: str
    items: Items453
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Versions1(BaseModel):
    description: str
    items: Items453
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties595(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    name: Name
    preferredVersion: PreferredVersion
    serverAddressByClientCIDRs: ServerAddressByClientCIDRs
    versions: Versions1


class IoK8sApimachineryPkgApisMetaV1APIGroup(BaseModel):
    description: str
    properties: Properties595
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Groups3(BaseModel):
    description: str
    items: Items453
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties596(BaseModel):
    apiVersion: ApiVersion
    groups: Groups3
    kind: Kind


class IoK8sApimachineryPkgApisMetaV1APIGroupList(BaseModel):
    description: str
    properties: Properties596
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Items456(BaseModel):
    type: str


class Categories1(BaseModel):
    description: str
    items: Items456
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Namespaced(BaseModel):
    description: str
    type: str


class ShortNames1(BaseModel):
    description: str
    items: Items456
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SingularName(BaseModel):
    description: str
    type: str


class StorageVersionHash(BaseModel):
    description: str
    type: str


class Verbs7(BaseModel):
    description: str
    items: Items456
    type: str


class Properties597(BaseModel):
    categories: Categories1
    group: Group4
    kind: Kind
    name: Name
    namespaced: Namespaced
    shortNames: ShortNames1
    singularName: SingularName
    storageVersionHash: StorageVersionHash
    verbs: Verbs7
    version: Version


class IoK8sApimachineryPkgApisMetaV1APIResource(BaseModel):
    description: str
    properties: Properties597
    required: List[str]
    type: str


class GroupVersion(BaseModel):
    description: str
    type: str


class Items459(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Resources13(BaseModel):
    description: str
    items: Items459
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties598(BaseModel):
    apiVersion: ApiVersion
    groupVersion: GroupVersion
    kind: Kind
    resources: Resources13


class IoK8sApimachineryPkgApisMetaV1APIResourceList(BaseModel):
    description: str
    properties: Properties598
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class ServerAddressByClientCIDRs1(BaseModel):
    description: str
    items: Items459
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items461(BaseModel):
    type: str


class Versions2(BaseModel):
    description: str
    items: Items461
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties599(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    serverAddressByClientCIDRs: ServerAddressByClientCIDRs1
    versions: Versions2


class IoK8sApimachineryPkgApisMetaV1APIVersions(BaseModel):
    description: str
    properties: Properties599
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status66(BaseModel):
    description: str
    type: str


class Type46(BaseModel):
    description: str
    type: str


class Properties600(BaseModel):
    lastTransitionTime: LastTransitionTime9
    message: Message16
    observedGeneration: ObservedGeneration
    reason: Reason16
    status: Status66
    type: Type46


class IoK8sApimachineryPkgApisMetaV1Condition(BaseModel):
    description: str
    properties: Properties600
    required: List[str]
    type: str


class DryRun(BaseModel):
    description: str
    items: Items461
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class GracePeriodSeconds(BaseModel):
    description: str
    format: str
    type: str


class OrphanDependents(BaseModel):
    description: str
    type: str


class Preconditions(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class PropagationPolicy(BaseModel):
    description: str
    type: str


class Properties601(BaseModel):
    apiVersion: ApiVersion
    dryRun: DryRun
    gracePeriodSeconds: GracePeriodSeconds
    kind: Kind
    orphanDependents: OrphanDependents
    preconditions: Preconditions
    propagationPolicy: PropagationPolicy


class IoK8sApimachineryPkgApisMetaV1DeleteOptions(BaseModel):
    description: str
    properties: Properties601
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Values4(BaseModel):
    description: str
    items: Items461
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties602(BaseModel):
    key: Key
    operator: Operator
    values: Values4


class IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement(BaseModel):
    description: str
    properties: Properties602
    required: List[str]
    type: str


class IoK8sApimachineryPkgApisMetaV1FieldsV1(BaseModel):
    description: str
    type: str


class Properties603(BaseModel):
    groupVersion: GroupVersion
    version: Version


class IoK8sApimachineryPkgApisMetaV1GroupVersionForDiscovery(BaseModel):
    description: str
    properties: Properties603
    required: List[str]
    type: str


class Items464(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MatchExpressions2(BaseModel):
    description: str
    items: Items464
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class AdditionalProperties49(BaseModel):
    type: str


class MatchLabels(BaseModel):
    additionalProperties: AdditionalProperties49
    description: str
    type: str


class Properties604(BaseModel):
    matchExpressions: MatchExpressions2
    matchLabels: MatchLabels


class IoK8sApimachineryPkgApisMetaV1LabelSelector(BaseModel):
    description: str
    properties: Properties604
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items465(BaseModel):
    type: str


class Values5(BaseModel):
    description: str
    items: Items465
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties605(BaseModel):
    key: Key
    operator: Operator
    values: Values5


class IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement(BaseModel):
    description: str
    properties: Properties605
    required: List[str]
    type: str


class Continue(BaseModel):
    description: str
    type: str


class RemainingItemCount(BaseModel):
    description: str
    format: str
    type: str


class SelfLink(BaseModel):
    description: str
    type: str


class Properties606(BaseModel):
    continue_: Continue = Field(..., alias='continue')
    remainingItemCount: RemainingItemCount
    resourceVersion: ResourceVersion
    selfLink: SelfLink


class IoK8sApimachineryPkgApisMetaV1ListMeta(BaseModel):
    description: str
    properties: Properties606
    type: str


class FieldsType(BaseModel):
    description: str
    type: str


class FieldsV1(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Manager(BaseModel):
    description: str
    type: str


class Operation(BaseModel):
    description: str
    type: str


class Properties607(BaseModel):
    apiVersion: ApiVersion
    fieldsType: FieldsType
    fieldsV1: FieldsV1
    manager: Manager
    operation: Operation
    subresource: Subresource
    time: Time


class IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry(BaseModel):
    description: str
    properties: Properties607
    type: str


class IoK8sApimachineryPkgApisMetaV1MicroTime(BaseModel):
    description: str
    format: str
    type: str


class Annotations(BaseModel):
    additionalProperties: AdditionalProperties49
    description: str
    type: str


class CreationTimestamp(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class DeletionGracePeriodSeconds(BaseModel):
    description: str
    format: str
    type: str


class DeletionTimestamp(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Finalizers1(BaseModel):
    description: str
    items: Items465
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class GenerateName(BaseModel):
    description: str
    type: str


class Labels(BaseModel):
    additionalProperties: AdditionalProperties49
    description: str
    type: str


class Items467(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ManagedFields(BaseModel):
    description: str
    items: Items467
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class OwnerReferences(BaseModel):
    description: str
    items: Items467
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties608(BaseModel):
    annotations: Annotations
    creationTimestamp: CreationTimestamp
    deletionGracePeriodSeconds: DeletionGracePeriodSeconds
    deletionTimestamp: DeletionTimestamp
    finalizers: Finalizers1
    generateName: GenerateName
    generation: Generation
    labels: Labels
    managedFields: ManagedFields
    name: Name
    namespace: Namespace
    ownerReferences: OwnerReferences
    resourceVersion: ResourceVersion
    selfLink: SelfLink
    uid: Uid6


class IoK8sApimachineryPkgApisMetaV1ObjectMeta(BaseModel):
    description: str
    properties: Properties608
    type: str


class BlockOwnerDeletion(BaseModel):
    description: str
    type: str


class Properties609(BaseModel):
    apiVersion: ApiVersion
    blockOwnerDeletion: BlockOwnerDeletion
    controller: Controller
    kind: Kind
    name: Name
    uid: Uid6


class IoK8sApimachineryPkgApisMetaV1OwnerReference(BaseModel):
    description: str
    properties: Properties609
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class IoK8sApimachineryPkgApisMetaV1Patch(BaseModel):
    description: str
    type: str


class Properties610(BaseModel):
    resourceVersion: ResourceVersion
    uid: Uid6


class IoK8sApimachineryPkgApisMetaV1Preconditions(BaseModel):
    description: str
    properties: Properties610
    type: str


class ClientCIDR(BaseModel):
    description: str
    type: str


class ServerAddress(BaseModel):
    description: str
    type: str


class Properties611(BaseModel):
    clientCIDR: ClientCIDR
    serverAddress: ServerAddress


class IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR(BaseModel):
    description: str
    properties: Properties611
    required: List[str]
    type: str


class Code(BaseModel):
    description: str
    format: str
    type: str


class Details(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties612(BaseModel):
    apiVersion: ApiVersion
    code: Code
    details: Details
    kind: Kind
    message: Message16
    metadata: Metadata49
    reason: Reason16
    status: Status66


class IoK8sApimachineryPkgApisMetaV1Status(BaseModel):
    description: str
    properties: Properties612
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldModel(BaseModel):
    description: str
    type: str


class Properties613(BaseModel):
    field: FieldModel
    message: Message16
    reason: Reason16


class IoK8sApimachineryPkgApisMetaV1StatusCause(BaseModel):
    description: str
    properties: Properties613
    type: str


class Causes(BaseModel):
    description: str
    items: Items467
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class RetryAfterSeconds(BaseModel):
    description: str
    format: str
    type: str


class Properties614(BaseModel):
    causes: Causes
    group: Group4
    kind: Kind
    name: Name
    retryAfterSeconds: RetryAfterSeconds
    uid: Uid6


class IoK8sApimachineryPkgApisMetaV1StatusDetails(BaseModel):
    description: str
    properties: Properties614
    type: str


class IoK8sApimachineryPkgApisMetaV1Time(BaseModel):
    description: str
    format: str
    type: str


class Type47(BaseModel):
    type: str


class Properties615(BaseModel):
    object: Object
    type: Type47


class IoK8sApimachineryPkgApisMetaV1WatchEvent(BaseModel):
    description: str
    properties: Properties615
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class IoK8sApimachineryPkgRuntimeRawExtension(BaseModel):
    description: str
    type: str


class IoK8sApimachineryPkgUtilIntstrIntOrString(BaseModel):
    description: str
    format: str
    type: str


class BuildDate(BaseModel):
    type: str


class Compiler(BaseModel):
    type: str


class GitCommit(BaseModel):
    type: str


class GitTreeState(BaseModel):
    type: str


class GitVersion(BaseModel):
    type: str


class GoVersion(BaseModel):
    type: str


class Major(BaseModel):
    type: str


class Minor(BaseModel):
    type: str


class Platform(BaseModel):
    type: str


class Properties616(BaseModel):
    buildDate: BuildDate
    compiler: Compiler
    gitCommit: GitCommit
    gitTreeState: GitTreeState
    gitVersion: GitVersion
    goVersion: GoVersion
    major: Major
    minor: Minor
    platform: Platform


class IoK8sApimachineryPkgVersionInfo(BaseModel):
    description: str
    properties: Properties616
    required: List[str]
    type: str


class Status68(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    description: str


class Properties617(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata49
    spec: Spec
    status: Status68


class IoK8sKubeAggregatorPkgApisApiregistrationV1APIService(BaseModel):
    description: str
    properties: Properties617
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Status69(BaseModel):
    description: str
    type: str


class Type48(BaseModel):
    description: str
    type: str


class Properties618(BaseModel):
    lastTransitionTime: LastTransitionTime9
    message: Message16
    reason: Reason16
    status: Status69
    type: Type48


class IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceCondition(BaseModel):
    description: str
    properties: Properties618
    required: List[str]
    type: str


class Items470(BaseModel):
    description: str
    items: Items467
    type: str


class Properties619(BaseModel):
    apiVersion: ApiVersion
    items: Items470
    kind: Kind
    metadata: Metadata49


class IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceList(BaseModel):
    description: str
    properties: Properties619
    required: List[str]
    type: str
    x_kubernetes_group_version_kind: List[XKubernetesGroupVersionKindItem] = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class CaBundle2(BaseModel):
    description: str
    format: str
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class GroupPriorityMinimum(BaseModel):
    description: str
    format: str
    type: str


class InsecureSkipTLSVerify(BaseModel):
    description: str
    type: str


class VersionPriority(BaseModel):
    description: str
    format: str
    type: str


class Properties620(BaseModel):
    caBundle: CaBundle2
    group: Group4
    groupPriorityMinimum: GroupPriorityMinimum
    insecureSkipTLSVerify: InsecureSkipTLSVerify
    service: Service2
    version: Version
    versionPriority: VersionPriority


class IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceSpec(BaseModel):
    description: str
    properties: Properties620
    required: List[str]
    type: str


class Items472(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions27(BaseModel):
    description: str
    items: Items472
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')
    x_kubernetes_patch_merge_key: str = Field(..., alias='x-kubernetes-patch-merge-key')
    x_kubernetes_patch_strategy: str = Field(..., alias='x-kubernetes-patch-strategy')


class Properties621(BaseModel):
    conditions: Conditions27


class IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceStatus(BaseModel):
    description: str
    properties: Properties621
    type: str


class Properties622(BaseModel):
    name: Name
    namespace: Namespace
    port: Port12


class IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference(BaseModel):
    description: str
    properties: Properties622
    type: str


class Definitions(BaseModel):
    io_k8s_api_admissionregistration_v1_AuditAnnotation: (
        IoK8sApiAdmissionregistrationV1AuditAnnotation
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.AuditAnnotation')
    io_k8s_api_admissionregistration_v1_ExpressionWarning: (
        IoK8sApiAdmissionregistrationV1ExpressionWarning
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.ExpressionWarning')
    io_k8s_api_admissionregistration_v1_MatchCondition: (
        IoK8sApiAdmissionregistrationV1MatchCondition
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.MatchCondition')
    io_k8s_api_admissionregistration_v1_MatchResources: (
        IoK8sApiAdmissionregistrationV1MatchResources
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.MatchResources')
    io_k8s_api_admissionregistration_v1_MutatingWebhook: (
        IoK8sApiAdmissionregistrationV1MutatingWebhook
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.MutatingWebhook')
    io_k8s_api_admissionregistration_v1_MutatingWebhookConfiguration: (
        IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration'
    )
    io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationList: (
        IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationList
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList',
    )
    io_k8s_api_admissionregistration_v1_NamedRuleWithOperations: (
        IoK8sApiAdmissionregistrationV1NamedRuleWithOperations
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.NamedRuleWithOperations')
    io_k8s_api_admissionregistration_v1_ParamKind: (
        IoK8sApiAdmissionregistrationV1ParamKind
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.ParamKind')
    io_k8s_api_admissionregistration_v1_ParamRef: (
        IoK8sApiAdmissionregistrationV1ParamRef
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.ParamRef')
    io_k8s_api_admissionregistration_v1_RuleWithOperations: (
        IoK8sApiAdmissionregistrationV1RuleWithOperations
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.RuleWithOperations')
    io_k8s_api_admissionregistration_v1_ServiceReference: (
        IoK8sApiAdmissionregistrationV1ServiceReference
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.ServiceReference')
    io_k8s_api_admissionregistration_v1_TypeChecking: (
        IoK8sApiAdmissionregistrationV1TypeChecking
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.TypeChecking')
    io_k8s_api_admissionregistration_v1_ValidatingAdmissionPolicy: (
        IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicy
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicy'
    )
    io_k8s_api_admissionregistration_v1_ValidatingAdmissionPolicyBinding: (
        IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyBinding
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBinding',
    )
    io_k8s_api_admissionregistration_v1_ValidatingAdmissionPolicyBindingList: (
        IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyBindingList
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingList',
    )
    io_k8s_api_admissionregistration_v1_ValidatingAdmissionPolicyBindingSpec: (
        IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyBindingSpec
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyBindingSpec',
    )
    io_k8s_api_admissionregistration_v1_ValidatingAdmissionPolicyList: (
        IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyList
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyList'
    )
    io_k8s_api_admissionregistration_v1_ValidatingAdmissionPolicySpec: (
        IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicySpec
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicySpec'
    )
    io_k8s_api_admissionregistration_v1_ValidatingAdmissionPolicyStatus: (
        IoK8sApiAdmissionregistrationV1ValidatingAdmissionPolicyStatus
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1.ValidatingAdmissionPolicyStatus'
    )
    io_k8s_api_admissionregistration_v1_ValidatingWebhook: (
        IoK8sApiAdmissionregistrationV1ValidatingWebhook
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.ValidatingWebhook')
    io_k8s_api_admissionregistration_v1_ValidatingWebhookConfiguration: (
        IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration'
    )
    io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationList: (
        IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationList
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList',
    )
    io_k8s_api_admissionregistration_v1_Validation: (
        IoK8sApiAdmissionregistrationV1Validation
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.Validation')
    io_k8s_api_admissionregistration_v1_Variable: (
        IoK8sApiAdmissionregistrationV1Variable
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.Variable')
    io_k8s_api_admissionregistration_v1_WebhookClientConfig: (
        IoK8sApiAdmissionregistrationV1WebhookClientConfig
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1.WebhookClientConfig')
    io_k8s_api_admissionregistration_v1alpha1_AuditAnnotation: (
        IoK8sApiAdmissionregistrationV1alpha1AuditAnnotation
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation')
    io_k8s_api_admissionregistration_v1alpha1_ExpressionWarning: (
        IoK8sApiAdmissionregistrationV1alpha1ExpressionWarning
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning')
    io_k8s_api_admissionregistration_v1alpha1_MatchCondition: (
        IoK8sApiAdmissionregistrationV1alpha1MatchCondition
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1alpha1.MatchCondition')
    io_k8s_api_admissionregistration_v1alpha1_MatchResources: (
        IoK8sApiAdmissionregistrationV1alpha1MatchResources
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1alpha1.MatchResources')
    io_k8s_api_admissionregistration_v1alpha1_NamedRuleWithOperations: (
        IoK8sApiAdmissionregistrationV1alpha1NamedRuleWithOperations
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations'
    )
    io_k8s_api_admissionregistration_v1alpha1_ParamKind: (
        IoK8sApiAdmissionregistrationV1alpha1ParamKind
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1alpha1.ParamKind')
    io_k8s_api_admissionregistration_v1alpha1_ParamRef: (
        IoK8sApiAdmissionregistrationV1alpha1ParamRef
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1alpha1.ParamRef')
    io_k8s_api_admissionregistration_v1alpha1_TypeChecking: (
        IoK8sApiAdmissionregistrationV1alpha1TypeChecking
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1alpha1.TypeChecking')
    io_k8s_api_admissionregistration_v1alpha1_ValidatingAdmissionPolicy: (
        IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicy
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy'
    )
    io_k8s_api_admissionregistration_v1alpha1_ValidatingAdmissionPolicyBinding: (
        IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyBinding
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding',
    )
    io_k8s_api_admissionregistration_v1alpha1_ValidatingAdmissionPolicyBindingList: (
        IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyBindingList
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList',
    )
    io_k8s_api_admissionregistration_v1alpha1_ValidatingAdmissionPolicyBindingSpec: (
        IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyBindingSpec
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec',
    )
    io_k8s_api_admissionregistration_v1alpha1_ValidatingAdmissionPolicyList: (
        IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyList
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList',
    )
    io_k8s_api_admissionregistration_v1alpha1_ValidatingAdmissionPolicySpec: (
        IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicySpec
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec',
    )
    io_k8s_api_admissionregistration_v1alpha1_ValidatingAdmissionPolicyStatus: (
        IoK8sApiAdmissionregistrationV1alpha1ValidatingAdmissionPolicyStatus
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus',
    )
    io_k8s_api_admissionregistration_v1alpha1_Validation: (
        IoK8sApiAdmissionregistrationV1alpha1Validation
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1alpha1.Validation')
    io_k8s_api_admissionregistration_v1alpha1_Variable: (
        IoK8sApiAdmissionregistrationV1alpha1Variable
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1alpha1.Variable')
    io_k8s_api_admissionregistration_v1beta1_AuditAnnotation: (
        IoK8sApiAdmissionregistrationV1beta1AuditAnnotation
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1beta1.AuditAnnotation')
    io_k8s_api_admissionregistration_v1beta1_ExpressionWarning: (
        IoK8sApiAdmissionregistrationV1beta1ExpressionWarning
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1beta1.ExpressionWarning')
    io_k8s_api_admissionregistration_v1beta1_MatchCondition: (
        IoK8sApiAdmissionregistrationV1beta1MatchCondition
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1beta1.MatchCondition')
    io_k8s_api_admissionregistration_v1beta1_MatchResources: (
        IoK8sApiAdmissionregistrationV1beta1MatchResources
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1beta1.MatchResources')
    io_k8s_api_admissionregistration_v1beta1_NamedRuleWithOperations: (
        IoK8sApiAdmissionregistrationV1beta1NamedRuleWithOperations
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations'
    )
    io_k8s_api_admissionregistration_v1beta1_ParamKind: (
        IoK8sApiAdmissionregistrationV1beta1ParamKind
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1beta1.ParamKind')
    io_k8s_api_admissionregistration_v1beta1_ParamRef: (
        IoK8sApiAdmissionregistrationV1beta1ParamRef
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1beta1.ParamRef')
    io_k8s_api_admissionregistration_v1beta1_TypeChecking: (
        IoK8sApiAdmissionregistrationV1beta1TypeChecking
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1beta1.TypeChecking')
    io_k8s_api_admissionregistration_v1beta1_ValidatingAdmissionPolicy: (
        IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicy
    ) = Field(
        ..., alias='io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy'
    )
    io_k8s_api_admissionregistration_v1beta1_ValidatingAdmissionPolicyBinding: (
        IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyBinding
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding',
    )
    io_k8s_api_admissionregistration_v1beta1_ValidatingAdmissionPolicyBindingList: (
        IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyBindingList
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList',
    )
    io_k8s_api_admissionregistration_v1beta1_ValidatingAdmissionPolicyBindingSpec: (
        IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyBindingSpec
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec',
    )
    io_k8s_api_admissionregistration_v1beta1_ValidatingAdmissionPolicyList: (
        IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyList
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList',
    )
    io_k8s_api_admissionregistration_v1beta1_ValidatingAdmissionPolicySpec: (
        IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicySpec
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec',
    )
    io_k8s_api_admissionregistration_v1beta1_ValidatingAdmissionPolicyStatus: (
        IoK8sApiAdmissionregistrationV1beta1ValidatingAdmissionPolicyStatus
    ) = Field(
        ...,
        alias='io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus',
    )
    io_k8s_api_admissionregistration_v1beta1_Validation: (
        IoK8sApiAdmissionregistrationV1beta1Validation
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1beta1.Validation')
    io_k8s_api_admissionregistration_v1beta1_Variable: (
        IoK8sApiAdmissionregistrationV1beta1Variable
    ) = Field(..., alias='io.k8s.api.admissionregistration.v1beta1.Variable')
    io_k8s_api_apiserverinternal_v1alpha1_ServerStorageVersion: (
        IoK8sApiApiserverinternalV1alpha1ServerStorageVersion
    ) = Field(..., alias='io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion')
    io_k8s_api_apiserverinternal_v1alpha1_StorageVersion: (
        IoK8sApiApiserverinternalV1alpha1StorageVersion
    ) = Field(..., alias='io.k8s.api.apiserverinternal.v1alpha1.StorageVersion')
    io_k8s_api_apiserverinternal_v1alpha1_StorageVersionCondition: (
        IoK8sApiApiserverinternalV1alpha1StorageVersionCondition
    ) = Field(
        ..., alias='io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition'
    )
    io_k8s_api_apiserverinternal_v1alpha1_StorageVersionList: (
        IoK8sApiApiserverinternalV1alpha1StorageVersionList
    ) = Field(..., alias='io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList')
    io_k8s_api_apiserverinternal_v1alpha1_StorageVersionSpec: (
        IoK8sApiApiserverinternalV1alpha1StorageVersionSpec
    ) = Field(..., alias='io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec')
    io_k8s_api_apiserverinternal_v1alpha1_StorageVersionStatus: (
        IoK8sApiApiserverinternalV1alpha1StorageVersionStatus
    ) = Field(..., alias='io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus')
    io_k8s_api_apps_v1_ControllerRevision: IoK8sApiAppsV1ControllerRevision = Field(
        ..., alias='io.k8s.api.apps.v1.ControllerRevision'
    )
    io_k8s_api_apps_v1_ControllerRevisionList: IoK8sApiAppsV1ControllerRevisionList = (
        Field(..., alias='io.k8s.api.apps.v1.ControllerRevisionList')
    )
    io_k8s_api_apps_v1_DaemonSet: IoK8sApiAppsV1DaemonSet = Field(
        ..., alias='io.k8s.api.apps.v1.DaemonSet'
    )
    io_k8s_api_apps_v1_DaemonSetCondition: IoK8sApiAppsV1DaemonSetCondition = Field(
        ..., alias='io.k8s.api.apps.v1.DaemonSetCondition'
    )
    io_k8s_api_apps_v1_DaemonSetList: IoK8sApiAppsV1DaemonSetList = Field(
        ..., alias='io.k8s.api.apps.v1.DaemonSetList'
    )
    io_k8s_api_apps_v1_DaemonSetSpec: IoK8sApiAppsV1DaemonSetSpec = Field(
        ..., alias='io.k8s.api.apps.v1.DaemonSetSpec'
    )
    io_k8s_api_apps_v1_DaemonSetStatus: IoK8sApiAppsV1DaemonSetStatus = Field(
        ..., alias='io.k8s.api.apps.v1.DaemonSetStatus'
    )
    io_k8s_api_apps_v1_DaemonSetUpdateStrategy: (
        IoK8sApiAppsV1DaemonSetUpdateStrategy
    ) = Field(..., alias='io.k8s.api.apps.v1.DaemonSetUpdateStrategy')
    io_k8s_api_apps_v1_Deployment: IoK8sApiAppsV1Deployment = Field(
        ..., alias='io.k8s.api.apps.v1.Deployment'
    )
    io_k8s_api_apps_v1_DeploymentCondition: IoK8sApiAppsV1DeploymentCondition = Field(
        ..., alias='io.k8s.api.apps.v1.DeploymentCondition'
    )
    io_k8s_api_apps_v1_DeploymentList: IoK8sApiAppsV1DeploymentList = Field(
        ..., alias='io.k8s.api.apps.v1.DeploymentList'
    )
    io_k8s_api_apps_v1_DeploymentSpec: IoK8sApiAppsV1DeploymentSpec = Field(
        ..., alias='io.k8s.api.apps.v1.DeploymentSpec'
    )
    io_k8s_api_apps_v1_DeploymentStatus: IoK8sApiAppsV1DeploymentStatus = Field(
        ..., alias='io.k8s.api.apps.v1.DeploymentStatus'
    )
    io_k8s_api_apps_v1_DeploymentStrategy: IoK8sApiAppsV1DeploymentStrategy = Field(
        ..., alias='io.k8s.api.apps.v1.DeploymentStrategy'
    )
    io_k8s_api_apps_v1_ReplicaSet: IoK8sApiAppsV1ReplicaSet = Field(
        ..., alias='io.k8s.api.apps.v1.ReplicaSet'
    )
    io_k8s_api_apps_v1_ReplicaSetCondition: IoK8sApiAppsV1ReplicaSetCondition = Field(
        ..., alias='io.k8s.api.apps.v1.ReplicaSetCondition'
    )
    io_k8s_api_apps_v1_ReplicaSetList: IoK8sApiAppsV1ReplicaSetList = Field(
        ..., alias='io.k8s.api.apps.v1.ReplicaSetList'
    )
    io_k8s_api_apps_v1_ReplicaSetSpec: IoK8sApiAppsV1ReplicaSetSpec = Field(
        ..., alias='io.k8s.api.apps.v1.ReplicaSetSpec'
    )
    io_k8s_api_apps_v1_ReplicaSetStatus: IoK8sApiAppsV1ReplicaSetStatus = Field(
        ..., alias='io.k8s.api.apps.v1.ReplicaSetStatus'
    )
    io_k8s_api_apps_v1_RollingUpdateDaemonSet: IoK8sApiAppsV1RollingUpdateDaemonSet = (
        Field(..., alias='io.k8s.api.apps.v1.RollingUpdateDaemonSet')
    )
    io_k8s_api_apps_v1_RollingUpdateDeployment: (
        IoK8sApiAppsV1RollingUpdateDeployment
    ) = Field(..., alias='io.k8s.api.apps.v1.RollingUpdateDeployment')
    io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategy: (
        IoK8sApiAppsV1RollingUpdateStatefulSetStrategy
    ) = Field(..., alias='io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy')
    io_k8s_api_apps_v1_StatefulSet: IoK8sApiAppsV1StatefulSet = Field(
        ..., alias='io.k8s.api.apps.v1.StatefulSet'
    )
    io_k8s_api_apps_v1_StatefulSetCondition: IoK8sApiAppsV1StatefulSetCondition = Field(
        ..., alias='io.k8s.api.apps.v1.StatefulSetCondition'
    )
    io_k8s_api_apps_v1_StatefulSetList: IoK8sApiAppsV1StatefulSetList = Field(
        ..., alias='io.k8s.api.apps.v1.StatefulSetList'
    )
    io_k8s_api_apps_v1_StatefulSetOrdinals: IoK8sApiAppsV1StatefulSetOrdinals = Field(
        ..., alias='io.k8s.api.apps.v1.StatefulSetOrdinals'
    )
    io_k8s_api_apps_v1_StatefulSetPersistentVolumeClaimRetentionPolicy: (
        IoK8sApiAppsV1StatefulSetPersistentVolumeClaimRetentionPolicy
    ) = Field(
        ..., alias='io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy'
    )
    io_k8s_api_apps_v1_StatefulSetSpec: IoK8sApiAppsV1StatefulSetSpec = Field(
        ..., alias='io.k8s.api.apps.v1.StatefulSetSpec'
    )
    io_k8s_api_apps_v1_StatefulSetStatus: IoK8sApiAppsV1StatefulSetStatus = Field(
        ..., alias='io.k8s.api.apps.v1.StatefulSetStatus'
    )
    io_k8s_api_apps_v1_StatefulSetUpdateStrategy: (
        IoK8sApiAppsV1StatefulSetUpdateStrategy
    ) = Field(..., alias='io.k8s.api.apps.v1.StatefulSetUpdateStrategy')
    io_k8s_api_authentication_v1_BoundObjectReference: (
        IoK8sApiAuthenticationV1BoundObjectReference
    ) = Field(..., alias='io.k8s.api.authentication.v1.BoundObjectReference')
    io_k8s_api_authentication_v1_SelfSubjectReview: (
        IoK8sApiAuthenticationV1SelfSubjectReview
    ) = Field(..., alias='io.k8s.api.authentication.v1.SelfSubjectReview')
    io_k8s_api_authentication_v1_SelfSubjectReviewStatus: (
        IoK8sApiAuthenticationV1SelfSubjectReviewStatus
    ) = Field(..., alias='io.k8s.api.authentication.v1.SelfSubjectReviewStatus')
    io_k8s_api_authentication_v1_TokenRequest: IoK8sApiAuthenticationV1TokenRequest = (
        Field(..., alias='io.k8s.api.authentication.v1.TokenRequest')
    )
    io_k8s_api_authentication_v1_TokenRequestSpec: (
        IoK8sApiAuthenticationV1TokenRequestSpec
    ) = Field(..., alias='io.k8s.api.authentication.v1.TokenRequestSpec')
    io_k8s_api_authentication_v1_TokenRequestStatus: (
        IoK8sApiAuthenticationV1TokenRequestStatus
    ) = Field(..., alias='io.k8s.api.authentication.v1.TokenRequestStatus')
    io_k8s_api_authentication_v1_TokenReview: IoK8sApiAuthenticationV1TokenReview = (
        Field(..., alias='io.k8s.api.authentication.v1.TokenReview')
    )
    io_k8s_api_authentication_v1_TokenReviewSpec: (
        IoK8sApiAuthenticationV1TokenReviewSpec
    ) = Field(..., alias='io.k8s.api.authentication.v1.TokenReviewSpec')
    io_k8s_api_authentication_v1_TokenReviewStatus: (
        IoK8sApiAuthenticationV1TokenReviewStatus
    ) = Field(..., alias='io.k8s.api.authentication.v1.TokenReviewStatus')
    io_k8s_api_authentication_v1_UserInfo: IoK8sApiAuthenticationV1UserInfo = Field(
        ..., alias='io.k8s.api.authentication.v1.UserInfo'
    )
    io_k8s_api_authentication_v1alpha1_SelfSubjectReview: (
        IoK8sApiAuthenticationV1alpha1SelfSubjectReview
    ) = Field(..., alias='io.k8s.api.authentication.v1alpha1.SelfSubjectReview')
    io_k8s_api_authentication_v1alpha1_SelfSubjectReviewStatus: (
        IoK8sApiAuthenticationV1alpha1SelfSubjectReviewStatus
    ) = Field(..., alias='io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus')
    io_k8s_api_authentication_v1beta1_SelfSubjectReview: (
        IoK8sApiAuthenticationV1beta1SelfSubjectReview
    ) = Field(..., alias='io.k8s.api.authentication.v1beta1.SelfSubjectReview')
    io_k8s_api_authentication_v1beta1_SelfSubjectReviewStatus: (
        IoK8sApiAuthenticationV1beta1SelfSubjectReviewStatus
    ) = Field(..., alias='io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus')
    io_k8s_api_authorization_v1_FieldSelectorAttributes: (
        IoK8sApiAuthorizationV1FieldSelectorAttributes
    ) = Field(..., alias='io.k8s.api.authorization.v1.FieldSelectorAttributes')
    io_k8s_api_authorization_v1_LabelSelectorAttributes: (
        IoK8sApiAuthorizationV1LabelSelectorAttributes
    ) = Field(..., alias='io.k8s.api.authorization.v1.LabelSelectorAttributes')
    io_k8s_api_authorization_v1_LocalSubjectAccessReview: (
        IoK8sApiAuthorizationV1LocalSubjectAccessReview
    ) = Field(..., alias='io.k8s.api.authorization.v1.LocalSubjectAccessReview')
    io_k8s_api_authorization_v1_NonResourceAttributes: (
        IoK8sApiAuthorizationV1NonResourceAttributes
    ) = Field(..., alias='io.k8s.api.authorization.v1.NonResourceAttributes')
    io_k8s_api_authorization_v1_NonResourceRule: (
        IoK8sApiAuthorizationV1NonResourceRule
    ) = Field(..., alias='io.k8s.api.authorization.v1.NonResourceRule')
    io_k8s_api_authorization_v1_ResourceAttributes: (
        IoK8sApiAuthorizationV1ResourceAttributes
    ) = Field(..., alias='io.k8s.api.authorization.v1.ResourceAttributes')
    io_k8s_api_authorization_v1_ResourceRule: IoK8sApiAuthorizationV1ResourceRule = (
        Field(..., alias='io.k8s.api.authorization.v1.ResourceRule')
    )
    io_k8s_api_authorization_v1_SelfSubjectAccessReview: (
        IoK8sApiAuthorizationV1SelfSubjectAccessReview
    ) = Field(..., alias='io.k8s.api.authorization.v1.SelfSubjectAccessReview')
    io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpec: (
        IoK8sApiAuthorizationV1SelfSubjectAccessReviewSpec
    ) = Field(..., alias='io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec')
    io_k8s_api_authorization_v1_SelfSubjectRulesReview: (
        IoK8sApiAuthorizationV1SelfSubjectRulesReview
    ) = Field(..., alias='io.k8s.api.authorization.v1.SelfSubjectRulesReview')
    io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpec: (
        IoK8sApiAuthorizationV1SelfSubjectRulesReviewSpec
    ) = Field(..., alias='io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec')
    io_k8s_api_authorization_v1_SubjectAccessReview: (
        IoK8sApiAuthorizationV1SubjectAccessReview
    ) = Field(..., alias='io.k8s.api.authorization.v1.SubjectAccessReview')
    io_k8s_api_authorization_v1_SubjectAccessReviewSpec: (
        IoK8sApiAuthorizationV1SubjectAccessReviewSpec
    ) = Field(..., alias='io.k8s.api.authorization.v1.SubjectAccessReviewSpec')
    io_k8s_api_authorization_v1_SubjectAccessReviewStatus: (
        IoK8sApiAuthorizationV1SubjectAccessReviewStatus
    ) = Field(..., alias='io.k8s.api.authorization.v1.SubjectAccessReviewStatus')
    io_k8s_api_authorization_v1_SubjectRulesReviewStatus: (
        IoK8sApiAuthorizationV1SubjectRulesReviewStatus
    ) = Field(..., alias='io.k8s.api.authorization.v1.SubjectRulesReviewStatus')
    io_k8s_api_autoscaling_v1_CrossVersionObjectReference: (
        IoK8sApiAutoscalingV1CrossVersionObjectReference
    ) = Field(..., alias='io.k8s.api.autoscaling.v1.CrossVersionObjectReference')
    io_k8s_api_autoscaling_v1_HorizontalPodAutoscaler: (
        IoK8sApiAutoscalingV1HorizontalPodAutoscaler
    ) = Field(..., alias='io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler')
    io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerList: (
        IoK8sApiAutoscalingV1HorizontalPodAutoscalerList
    ) = Field(..., alias='io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList')
    io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpec: (
        IoK8sApiAutoscalingV1HorizontalPodAutoscalerSpec
    ) = Field(..., alias='io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec')
    io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatus: (
        IoK8sApiAutoscalingV1HorizontalPodAutoscalerStatus
    ) = Field(..., alias='io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus')
    io_k8s_api_autoscaling_v1_Scale: IoK8sApiAutoscalingV1Scale = Field(
        ..., alias='io.k8s.api.autoscaling.v1.Scale'
    )
    io_k8s_api_autoscaling_v1_ScaleSpec: IoK8sApiAutoscalingV1ScaleSpec = Field(
        ..., alias='io.k8s.api.autoscaling.v1.ScaleSpec'
    )
    io_k8s_api_autoscaling_v1_ScaleStatus: IoK8sApiAutoscalingV1ScaleStatus = Field(
        ..., alias='io.k8s.api.autoscaling.v1.ScaleStatus'
    )
    io_k8s_api_autoscaling_v2_ContainerResourceMetricSource: (
        IoK8sApiAutoscalingV2ContainerResourceMetricSource
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.ContainerResourceMetricSource')
    io_k8s_api_autoscaling_v2_ContainerResourceMetricStatus: (
        IoK8sApiAutoscalingV2ContainerResourceMetricStatus
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus')
    io_k8s_api_autoscaling_v2_CrossVersionObjectReference: (
        IoK8sApiAutoscalingV2CrossVersionObjectReference
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.CrossVersionObjectReference')
    io_k8s_api_autoscaling_v2_ExternalMetricSource: (
        IoK8sApiAutoscalingV2ExternalMetricSource
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.ExternalMetricSource')
    io_k8s_api_autoscaling_v2_ExternalMetricStatus: (
        IoK8sApiAutoscalingV2ExternalMetricStatus
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.ExternalMetricStatus')
    io_k8s_api_autoscaling_v2_HPAScalingPolicy: (
        IoK8sApiAutoscalingV2HPAScalingPolicy
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.HPAScalingPolicy')
    io_k8s_api_autoscaling_v2_HPAScalingRules: IoK8sApiAutoscalingV2HPAScalingRules = (
        Field(..., alias='io.k8s.api.autoscaling.v2.HPAScalingRules')
    )
    io_k8s_api_autoscaling_v2_HorizontalPodAutoscaler: (
        IoK8sApiAutoscalingV2HorizontalPodAutoscaler
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler')
    io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerBehavior: (
        IoK8sApiAutoscalingV2HorizontalPodAutoscalerBehavior
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior')
    io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerCondition: (
        IoK8sApiAutoscalingV2HorizontalPodAutoscalerCondition
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition')
    io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerList: (
        IoK8sApiAutoscalingV2HorizontalPodAutoscalerList
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList')
    io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerSpec: (
        IoK8sApiAutoscalingV2HorizontalPodAutoscalerSpec
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec')
    io_k8s_api_autoscaling_v2_HorizontalPodAutoscalerStatus: (
        IoK8sApiAutoscalingV2HorizontalPodAutoscalerStatus
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus')
    io_k8s_api_autoscaling_v2_MetricIdentifier: (
        IoK8sApiAutoscalingV2MetricIdentifier
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.MetricIdentifier')
    io_k8s_api_autoscaling_v2_MetricSpec: IoK8sApiAutoscalingV2MetricSpec = Field(
        ..., alias='io.k8s.api.autoscaling.v2.MetricSpec'
    )
    io_k8s_api_autoscaling_v2_MetricStatus: IoK8sApiAutoscalingV2MetricStatus = Field(
        ..., alias='io.k8s.api.autoscaling.v2.MetricStatus'
    )
    io_k8s_api_autoscaling_v2_MetricTarget: IoK8sApiAutoscalingV2MetricTarget = Field(
        ..., alias='io.k8s.api.autoscaling.v2.MetricTarget'
    )
    io_k8s_api_autoscaling_v2_MetricValueStatus: (
        IoK8sApiAutoscalingV2MetricValueStatus
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.MetricValueStatus')
    io_k8s_api_autoscaling_v2_ObjectMetricSource: (
        IoK8sApiAutoscalingV2ObjectMetricSource
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.ObjectMetricSource')
    io_k8s_api_autoscaling_v2_ObjectMetricStatus: (
        IoK8sApiAutoscalingV2ObjectMetricStatus
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.ObjectMetricStatus')
    io_k8s_api_autoscaling_v2_PodsMetricSource: (
        IoK8sApiAutoscalingV2PodsMetricSource
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.PodsMetricSource')
    io_k8s_api_autoscaling_v2_PodsMetricStatus: (
        IoK8sApiAutoscalingV2PodsMetricStatus
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.PodsMetricStatus')
    io_k8s_api_autoscaling_v2_ResourceMetricSource: (
        IoK8sApiAutoscalingV2ResourceMetricSource
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.ResourceMetricSource')
    io_k8s_api_autoscaling_v2_ResourceMetricStatus: (
        IoK8sApiAutoscalingV2ResourceMetricStatus
    ) = Field(..., alias='io.k8s.api.autoscaling.v2.ResourceMetricStatus')
    io_k8s_api_batch_v1_CronJob: IoK8sApiBatchV1CronJob = Field(
        ..., alias='io.k8s.api.batch.v1.CronJob'
    )
    io_k8s_api_batch_v1_CronJobList: IoK8sApiBatchV1CronJobList = Field(
        ..., alias='io.k8s.api.batch.v1.CronJobList'
    )
    io_k8s_api_batch_v1_CronJobSpec: IoK8sApiBatchV1CronJobSpec = Field(
        ..., alias='io.k8s.api.batch.v1.CronJobSpec'
    )
    io_k8s_api_batch_v1_CronJobStatus: IoK8sApiBatchV1CronJobStatus = Field(
        ..., alias='io.k8s.api.batch.v1.CronJobStatus'
    )
    io_k8s_api_batch_v1_Job: IoK8sApiBatchV1Job = Field(
        ..., alias='io.k8s.api.batch.v1.Job'
    )
    io_k8s_api_batch_v1_JobCondition: IoK8sApiBatchV1JobCondition = Field(
        ..., alias='io.k8s.api.batch.v1.JobCondition'
    )
    io_k8s_api_batch_v1_JobList: IoK8sApiBatchV1JobList = Field(
        ..., alias='io.k8s.api.batch.v1.JobList'
    )
    io_k8s_api_batch_v1_JobSpec: IoK8sApiBatchV1JobSpec = Field(
        ..., alias='io.k8s.api.batch.v1.JobSpec'
    )
    io_k8s_api_batch_v1_JobStatus: IoK8sApiBatchV1JobStatus = Field(
        ..., alias='io.k8s.api.batch.v1.JobStatus'
    )
    io_k8s_api_batch_v1_JobTemplateSpec: IoK8sApiBatchV1JobTemplateSpec = Field(
        ..., alias='io.k8s.api.batch.v1.JobTemplateSpec'
    )
    io_k8s_api_batch_v1_PodFailurePolicy: IoK8sApiBatchV1PodFailurePolicy = Field(
        ..., alias='io.k8s.api.batch.v1.PodFailurePolicy'
    )
    io_k8s_api_batch_v1_PodFailurePolicyOnExitCodesRequirement: (
        IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement
    ) = Field(..., alias='io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement')
    io_k8s_api_batch_v1_PodFailurePolicyOnPodConditionsPattern: (
        IoK8sApiBatchV1PodFailurePolicyOnPodConditionsPattern
    ) = Field(..., alias='io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern')
    io_k8s_api_batch_v1_PodFailurePolicyRule: IoK8sApiBatchV1PodFailurePolicyRule = (
        Field(..., alias='io.k8s.api.batch.v1.PodFailurePolicyRule')
    )
    io_k8s_api_batch_v1_SuccessPolicy: IoK8sApiBatchV1SuccessPolicy = Field(
        ..., alias='io.k8s.api.batch.v1.SuccessPolicy'
    )
    io_k8s_api_batch_v1_SuccessPolicyRule: IoK8sApiBatchV1SuccessPolicyRule = Field(
        ..., alias='io.k8s.api.batch.v1.SuccessPolicyRule'
    )
    io_k8s_api_batch_v1_UncountedTerminatedPods: (
        IoK8sApiBatchV1UncountedTerminatedPods
    ) = Field(..., alias='io.k8s.api.batch.v1.UncountedTerminatedPods')
    io_k8s_api_certificates_v1_CertificateSigningRequest: (
        IoK8sApiCertificatesV1CertificateSigningRequest
    ) = Field(..., alias='io.k8s.api.certificates.v1.CertificateSigningRequest')
    io_k8s_api_certificates_v1_CertificateSigningRequestCondition: (
        IoK8sApiCertificatesV1CertificateSigningRequestCondition
    ) = Field(
        ..., alias='io.k8s.api.certificates.v1.CertificateSigningRequestCondition'
    )
    io_k8s_api_certificates_v1_CertificateSigningRequestList: (
        IoK8sApiCertificatesV1CertificateSigningRequestList
    ) = Field(..., alias='io.k8s.api.certificates.v1.CertificateSigningRequestList')
    io_k8s_api_certificates_v1_CertificateSigningRequestSpec: (
        IoK8sApiCertificatesV1CertificateSigningRequestSpec
    ) = Field(..., alias='io.k8s.api.certificates.v1.CertificateSigningRequestSpec')
    io_k8s_api_certificates_v1_CertificateSigningRequestStatus: (
        IoK8sApiCertificatesV1CertificateSigningRequestStatus
    ) = Field(..., alias='io.k8s.api.certificates.v1.CertificateSigningRequestStatus')
    io_k8s_api_certificates_v1alpha1_ClusterTrustBundle: (
        IoK8sApiCertificatesV1alpha1ClusterTrustBundle
    ) = Field(..., alias='io.k8s.api.certificates.v1alpha1.ClusterTrustBundle')
    io_k8s_api_certificates_v1alpha1_ClusterTrustBundleList: (
        IoK8sApiCertificatesV1alpha1ClusterTrustBundleList
    ) = Field(..., alias='io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList')
    io_k8s_api_certificates_v1alpha1_ClusterTrustBundleSpec: (
        IoK8sApiCertificatesV1alpha1ClusterTrustBundleSpec
    ) = Field(..., alias='io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec')
    io_k8s_api_coordination_v1_Lease: IoK8sApiCoordinationV1Lease = Field(
        ..., alias='io.k8s.api.coordination.v1.Lease'
    )
    io_k8s_api_coordination_v1_LeaseList: IoK8sApiCoordinationV1LeaseList = Field(
        ..., alias='io.k8s.api.coordination.v1.LeaseList'
    )
    io_k8s_api_coordination_v1_LeaseSpec: IoK8sApiCoordinationV1LeaseSpec = Field(
        ..., alias='io.k8s.api.coordination.v1.LeaseSpec'
    )
    io_k8s_api_coordination_v1alpha1_LeaseCandidate: (
        IoK8sApiCoordinationV1alpha1LeaseCandidate
    ) = Field(..., alias='io.k8s.api.coordination.v1alpha1.LeaseCandidate')
    io_k8s_api_coordination_v1alpha1_LeaseCandidateList: (
        IoK8sApiCoordinationV1alpha1LeaseCandidateList
    ) = Field(..., alias='io.k8s.api.coordination.v1alpha1.LeaseCandidateList')
    io_k8s_api_coordination_v1alpha1_LeaseCandidateSpec: (
        IoK8sApiCoordinationV1alpha1LeaseCandidateSpec
    ) = Field(..., alias='io.k8s.api.coordination.v1alpha1.LeaseCandidateSpec')
    io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSource: (
        IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource')
    io_k8s_api_core_v1_Affinity: IoK8sApiCoreV1Affinity = Field(
        ..., alias='io.k8s.api.core.v1.Affinity'
    )
    io_k8s_api_core_v1_AppArmorProfile: IoK8sApiCoreV1AppArmorProfile = Field(
        ..., alias='io.k8s.api.core.v1.AppArmorProfile'
    )
    io_k8s_api_core_v1_AttachedVolume: IoK8sApiCoreV1AttachedVolume = Field(
        ..., alias='io.k8s.api.core.v1.AttachedVolume'
    )
    io_k8s_api_core_v1_AzureDiskVolumeSource: IoK8sApiCoreV1AzureDiskVolumeSource = (
        Field(..., alias='io.k8s.api.core.v1.AzureDiskVolumeSource')
    )
    io_k8s_api_core_v1_AzureFilePersistentVolumeSource: (
        IoK8sApiCoreV1AzureFilePersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.AzureFilePersistentVolumeSource')
    io_k8s_api_core_v1_AzureFileVolumeSource: IoK8sApiCoreV1AzureFileVolumeSource = (
        Field(..., alias='io.k8s.api.core.v1.AzureFileVolumeSource')
    )
    io_k8s_api_core_v1_Binding: IoK8sApiCoreV1Binding = Field(
        ..., alias='io.k8s.api.core.v1.Binding'
    )
    io_k8s_api_core_v1_CSIPersistentVolumeSource: (
        IoK8sApiCoreV1CSIPersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.CSIPersistentVolumeSource')
    io_k8s_api_core_v1_CSIVolumeSource: IoK8sApiCoreV1CSIVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.CSIVolumeSource'
    )
    io_k8s_api_core_v1_Capabilities: IoK8sApiCoreV1Capabilities = Field(
        ..., alias='io.k8s.api.core.v1.Capabilities'
    )
    io_k8s_api_core_v1_CephFSPersistentVolumeSource: (
        IoK8sApiCoreV1CephFSPersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.CephFSPersistentVolumeSource')
    io_k8s_api_core_v1_CephFSVolumeSource: IoK8sApiCoreV1CephFSVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.CephFSVolumeSource'
    )
    io_k8s_api_core_v1_CinderPersistentVolumeSource: (
        IoK8sApiCoreV1CinderPersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.CinderPersistentVolumeSource')
    io_k8s_api_core_v1_CinderVolumeSource: IoK8sApiCoreV1CinderVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.CinderVolumeSource'
    )
    io_k8s_api_core_v1_ClientIPConfig: IoK8sApiCoreV1ClientIPConfig = Field(
        ..., alias='io.k8s.api.core.v1.ClientIPConfig'
    )
    io_k8s_api_core_v1_ClusterTrustBundleProjection: (
        IoK8sApiCoreV1ClusterTrustBundleProjection
    ) = Field(..., alias='io.k8s.api.core.v1.ClusterTrustBundleProjection')
    io_k8s_api_core_v1_ComponentCondition: IoK8sApiCoreV1ComponentCondition = Field(
        ..., alias='io.k8s.api.core.v1.ComponentCondition'
    )
    io_k8s_api_core_v1_ComponentStatus: IoK8sApiCoreV1ComponentStatus = Field(
        ..., alias='io.k8s.api.core.v1.ComponentStatus'
    )
    io_k8s_api_core_v1_ComponentStatusList: IoK8sApiCoreV1ComponentStatusList = Field(
        ..., alias='io.k8s.api.core.v1.ComponentStatusList'
    )
    io_k8s_api_core_v1_ConfigMap: IoK8sApiCoreV1ConfigMap = Field(
        ..., alias='io.k8s.api.core.v1.ConfigMap'
    )
    io_k8s_api_core_v1_ConfigMapEnvSource: IoK8sApiCoreV1ConfigMapEnvSource = Field(
        ..., alias='io.k8s.api.core.v1.ConfigMapEnvSource'
    )
    io_k8s_api_core_v1_ConfigMapKeySelector: IoK8sApiCoreV1ConfigMapKeySelector = Field(
        ..., alias='io.k8s.api.core.v1.ConfigMapKeySelector'
    )
    io_k8s_api_core_v1_ConfigMapList: IoK8sApiCoreV1ConfigMapList = Field(
        ..., alias='io.k8s.api.core.v1.ConfigMapList'
    )
    io_k8s_api_core_v1_ConfigMapNodeConfigSource: (
        IoK8sApiCoreV1ConfigMapNodeConfigSource
    ) = Field(..., alias='io.k8s.api.core.v1.ConfigMapNodeConfigSource')
    io_k8s_api_core_v1_ConfigMapProjection: IoK8sApiCoreV1ConfigMapProjection = Field(
        ..., alias='io.k8s.api.core.v1.ConfigMapProjection'
    )
    io_k8s_api_core_v1_ConfigMapVolumeSource: IoK8sApiCoreV1ConfigMapVolumeSource = (
        Field(..., alias='io.k8s.api.core.v1.ConfigMapVolumeSource')
    )
    io_k8s_api_core_v1_Container: IoK8sApiCoreV1Container = Field(
        ..., alias='io.k8s.api.core.v1.Container'
    )
    io_k8s_api_core_v1_ContainerImage: IoK8sApiCoreV1ContainerImage = Field(
        ..., alias='io.k8s.api.core.v1.ContainerImage'
    )
    io_k8s_api_core_v1_ContainerPort: IoK8sApiCoreV1ContainerPort = Field(
        ..., alias='io.k8s.api.core.v1.ContainerPort'
    )
    io_k8s_api_core_v1_ContainerResizePolicy: IoK8sApiCoreV1ContainerResizePolicy = (
        Field(..., alias='io.k8s.api.core.v1.ContainerResizePolicy')
    )
    io_k8s_api_core_v1_ContainerState: IoK8sApiCoreV1ContainerState = Field(
        ..., alias='io.k8s.api.core.v1.ContainerState'
    )
    io_k8s_api_core_v1_ContainerStateRunning: IoK8sApiCoreV1ContainerStateRunning = (
        Field(..., alias='io.k8s.api.core.v1.ContainerStateRunning')
    )
    io_k8s_api_core_v1_ContainerStateTerminated: (
        IoK8sApiCoreV1ContainerStateTerminated
    ) = Field(..., alias='io.k8s.api.core.v1.ContainerStateTerminated')
    io_k8s_api_core_v1_ContainerStateWaiting: IoK8sApiCoreV1ContainerStateWaiting = (
        Field(..., alias='io.k8s.api.core.v1.ContainerStateWaiting')
    )
    io_k8s_api_core_v1_ContainerStatus: IoK8sApiCoreV1ContainerStatus = Field(
        ..., alias='io.k8s.api.core.v1.ContainerStatus'
    )
    io_k8s_api_core_v1_ContainerUser: IoK8sApiCoreV1ContainerUser = Field(
        ..., alias='io.k8s.api.core.v1.ContainerUser'
    )
    io_k8s_api_core_v1_DaemonEndpoint: IoK8sApiCoreV1DaemonEndpoint = Field(
        ..., alias='io.k8s.api.core.v1.DaemonEndpoint'
    )
    io_k8s_api_core_v1_DownwardAPIProjection: IoK8sApiCoreV1DownwardAPIProjection = (
        Field(..., alias='io.k8s.api.core.v1.DownwardAPIProjection')
    )
    io_k8s_api_core_v1_DownwardAPIVolumeFile: IoK8sApiCoreV1DownwardAPIVolumeFile = (
        Field(..., alias='io.k8s.api.core.v1.DownwardAPIVolumeFile')
    )
    io_k8s_api_core_v1_DownwardAPIVolumeSource: (
        IoK8sApiCoreV1DownwardAPIVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.DownwardAPIVolumeSource')
    io_k8s_api_core_v1_EmptyDirVolumeSource: IoK8sApiCoreV1EmptyDirVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.EmptyDirVolumeSource'
    )
    io_k8s_api_core_v1_EndpointAddress: IoK8sApiCoreV1EndpointAddress = Field(
        ..., alias='io.k8s.api.core.v1.EndpointAddress'
    )
    io_k8s_api_core_v1_EndpointPort: IoK8sApiCoreV1EndpointPort = Field(
        ..., alias='io.k8s.api.core.v1.EndpointPort'
    )
    io_k8s_api_core_v1_EndpointSubset: IoK8sApiCoreV1EndpointSubset = Field(
        ..., alias='io.k8s.api.core.v1.EndpointSubset'
    )
    io_k8s_api_core_v1_Endpoints: IoK8sApiCoreV1Endpoints = Field(
        ..., alias='io.k8s.api.core.v1.Endpoints'
    )
    io_k8s_api_core_v1_EndpointsList: IoK8sApiCoreV1EndpointsList = Field(
        ..., alias='io.k8s.api.core.v1.EndpointsList'
    )
    io_k8s_api_core_v1_EnvFromSource: IoK8sApiCoreV1EnvFromSource = Field(
        ..., alias='io.k8s.api.core.v1.EnvFromSource'
    )
    io_k8s_api_core_v1_EnvVar: IoK8sApiCoreV1EnvVar = Field(
        ..., alias='io.k8s.api.core.v1.EnvVar'
    )
    io_k8s_api_core_v1_EnvVarSource: IoK8sApiCoreV1EnvVarSource = Field(
        ..., alias='io.k8s.api.core.v1.EnvVarSource'
    )
    io_k8s_api_core_v1_EphemeralContainer: IoK8sApiCoreV1EphemeralContainer = Field(
        ..., alias='io.k8s.api.core.v1.EphemeralContainer'
    )
    io_k8s_api_core_v1_EphemeralVolumeSource: IoK8sApiCoreV1EphemeralVolumeSource = (
        Field(..., alias='io.k8s.api.core.v1.EphemeralVolumeSource')
    )
    io_k8s_api_core_v1_Event: IoK8sApiCoreV1Event = Field(
        ..., alias='io.k8s.api.core.v1.Event'
    )
    io_k8s_api_core_v1_EventList: IoK8sApiCoreV1EventList = Field(
        ..., alias='io.k8s.api.core.v1.EventList'
    )
    io_k8s_api_core_v1_EventSeries: IoK8sApiCoreV1EventSeries = Field(
        ..., alias='io.k8s.api.core.v1.EventSeries'
    )
    io_k8s_api_core_v1_EventSource: IoK8sApiCoreV1EventSource = Field(
        ..., alias='io.k8s.api.core.v1.EventSource'
    )
    io_k8s_api_core_v1_ExecAction: IoK8sApiCoreV1ExecAction = Field(
        ..., alias='io.k8s.api.core.v1.ExecAction'
    )
    io_k8s_api_core_v1_FCVolumeSource: IoK8sApiCoreV1FCVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.FCVolumeSource'
    )
    io_k8s_api_core_v1_FlexPersistentVolumeSource: (
        IoK8sApiCoreV1FlexPersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.FlexPersistentVolumeSource')
    io_k8s_api_core_v1_FlexVolumeSource: IoK8sApiCoreV1FlexVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.FlexVolumeSource'
    )
    io_k8s_api_core_v1_FlockerVolumeSource: IoK8sApiCoreV1FlockerVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.FlockerVolumeSource'
    )
    io_k8s_api_core_v1_GCEPersistentDiskVolumeSource: (
        IoK8sApiCoreV1GCEPersistentDiskVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.GCEPersistentDiskVolumeSource')
    io_k8s_api_core_v1_GRPCAction: IoK8sApiCoreV1GRPCAction = Field(
        ..., alias='io.k8s.api.core.v1.GRPCAction'
    )
    io_k8s_api_core_v1_GitRepoVolumeSource: IoK8sApiCoreV1GitRepoVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.GitRepoVolumeSource'
    )
    io_k8s_api_core_v1_GlusterfsPersistentVolumeSource: (
        IoK8sApiCoreV1GlusterfsPersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.GlusterfsPersistentVolumeSource')
    io_k8s_api_core_v1_GlusterfsVolumeSource: IoK8sApiCoreV1GlusterfsVolumeSource = (
        Field(..., alias='io.k8s.api.core.v1.GlusterfsVolumeSource')
    )
    io_k8s_api_core_v1_HTTPGetAction: IoK8sApiCoreV1HTTPGetAction = Field(
        ..., alias='io.k8s.api.core.v1.HTTPGetAction'
    )
    io_k8s_api_core_v1_HTTPHeader: IoK8sApiCoreV1HTTPHeader = Field(
        ..., alias='io.k8s.api.core.v1.HTTPHeader'
    )
    io_k8s_api_core_v1_HostAlias: IoK8sApiCoreV1HostAlias = Field(
        ..., alias='io.k8s.api.core.v1.HostAlias'
    )
    io_k8s_api_core_v1_HostIP: IoK8sApiCoreV1HostIP = Field(
        ..., alias='io.k8s.api.core.v1.HostIP'
    )
    io_k8s_api_core_v1_HostPathVolumeSource: IoK8sApiCoreV1HostPathVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.HostPathVolumeSource'
    )
    io_k8s_api_core_v1_ISCSIPersistentVolumeSource: (
        IoK8sApiCoreV1ISCSIPersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.ISCSIPersistentVolumeSource')
    io_k8s_api_core_v1_ISCSIVolumeSource: IoK8sApiCoreV1ISCSIVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.ISCSIVolumeSource'
    )
    io_k8s_api_core_v1_ImageVolumeSource: IoK8sApiCoreV1ImageVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.ImageVolumeSource'
    )
    io_k8s_api_core_v1_KeyToPath: IoK8sApiCoreV1KeyToPath = Field(
        ..., alias='io.k8s.api.core.v1.KeyToPath'
    )
    io_k8s_api_core_v1_Lifecycle: IoK8sApiCoreV1Lifecycle = Field(
        ..., alias='io.k8s.api.core.v1.Lifecycle'
    )
    io_k8s_api_core_v1_LifecycleHandler: IoK8sApiCoreV1LifecycleHandler = Field(
        ..., alias='io.k8s.api.core.v1.LifecycleHandler'
    )
    io_k8s_api_core_v1_LimitRange: IoK8sApiCoreV1LimitRange = Field(
        ..., alias='io.k8s.api.core.v1.LimitRange'
    )
    io_k8s_api_core_v1_LimitRangeItem: IoK8sApiCoreV1LimitRangeItem = Field(
        ..., alias='io.k8s.api.core.v1.LimitRangeItem'
    )
    io_k8s_api_core_v1_LimitRangeList: IoK8sApiCoreV1LimitRangeList = Field(
        ..., alias='io.k8s.api.core.v1.LimitRangeList'
    )
    io_k8s_api_core_v1_LimitRangeSpec: IoK8sApiCoreV1LimitRangeSpec = Field(
        ..., alias='io.k8s.api.core.v1.LimitRangeSpec'
    )
    io_k8s_api_core_v1_LinuxContainerUser: IoK8sApiCoreV1LinuxContainerUser = Field(
        ..., alias='io.k8s.api.core.v1.LinuxContainerUser'
    )
    io_k8s_api_core_v1_LoadBalancerIngress: IoK8sApiCoreV1LoadBalancerIngress = Field(
        ..., alias='io.k8s.api.core.v1.LoadBalancerIngress'
    )
    io_k8s_api_core_v1_LoadBalancerStatus: IoK8sApiCoreV1LoadBalancerStatus = Field(
        ..., alias='io.k8s.api.core.v1.LoadBalancerStatus'
    )
    io_k8s_api_core_v1_LocalObjectReference: IoK8sApiCoreV1LocalObjectReference = Field(
        ..., alias='io.k8s.api.core.v1.LocalObjectReference'
    )
    io_k8s_api_core_v1_LocalVolumeSource: IoK8sApiCoreV1LocalVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.LocalVolumeSource'
    )
    io_k8s_api_core_v1_ModifyVolumeStatus: IoK8sApiCoreV1ModifyVolumeStatus = Field(
        ..., alias='io.k8s.api.core.v1.ModifyVolumeStatus'
    )
    io_k8s_api_core_v1_NFSVolumeSource: IoK8sApiCoreV1NFSVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.NFSVolumeSource'
    )
    io_k8s_api_core_v1_Namespace: IoK8sApiCoreV1Namespace = Field(
        ..., alias='io.k8s.api.core.v1.Namespace'
    )
    io_k8s_api_core_v1_NamespaceCondition: IoK8sApiCoreV1NamespaceCondition = Field(
        ..., alias='io.k8s.api.core.v1.NamespaceCondition'
    )
    io_k8s_api_core_v1_NamespaceList: IoK8sApiCoreV1NamespaceList = Field(
        ..., alias='io.k8s.api.core.v1.NamespaceList'
    )
    io_k8s_api_core_v1_NamespaceSpec: IoK8sApiCoreV1NamespaceSpec = Field(
        ..., alias='io.k8s.api.core.v1.NamespaceSpec'
    )
    io_k8s_api_core_v1_NamespaceStatus: IoK8sApiCoreV1NamespaceStatus = Field(
        ..., alias='io.k8s.api.core.v1.NamespaceStatus'
    )
    io_k8s_api_core_v1_Node: IoK8sApiCoreV1Node = Field(
        ..., alias='io.k8s.api.core.v1.Node'
    )
    io_k8s_api_core_v1_NodeAddress: IoK8sApiCoreV1NodeAddress = Field(
        ..., alias='io.k8s.api.core.v1.NodeAddress'
    )
    io_k8s_api_core_v1_NodeAffinity: IoK8sApiCoreV1NodeAffinity = Field(
        ..., alias='io.k8s.api.core.v1.NodeAffinity'
    )
    io_k8s_api_core_v1_NodeCondition: IoK8sApiCoreV1NodeCondition = Field(
        ..., alias='io.k8s.api.core.v1.NodeCondition'
    )
    io_k8s_api_core_v1_NodeConfigSource: IoK8sApiCoreV1NodeConfigSource = Field(
        ..., alias='io.k8s.api.core.v1.NodeConfigSource'
    )
    io_k8s_api_core_v1_NodeConfigStatus: IoK8sApiCoreV1NodeConfigStatus = Field(
        ..., alias='io.k8s.api.core.v1.NodeConfigStatus'
    )
    io_k8s_api_core_v1_NodeDaemonEndpoints: IoK8sApiCoreV1NodeDaemonEndpoints = Field(
        ..., alias='io.k8s.api.core.v1.NodeDaemonEndpoints'
    )
    io_k8s_api_core_v1_NodeFeatures: IoK8sApiCoreV1NodeFeatures = Field(
        ..., alias='io.k8s.api.core.v1.NodeFeatures'
    )
    io_k8s_api_core_v1_NodeList: IoK8sApiCoreV1NodeList = Field(
        ..., alias='io.k8s.api.core.v1.NodeList'
    )
    io_k8s_api_core_v1_NodeRuntimeHandler: IoK8sApiCoreV1NodeRuntimeHandler = Field(
        ..., alias='io.k8s.api.core.v1.NodeRuntimeHandler'
    )
    io_k8s_api_core_v1_NodeRuntimeHandlerFeatures: (
        IoK8sApiCoreV1NodeRuntimeHandlerFeatures
    ) = Field(..., alias='io.k8s.api.core.v1.NodeRuntimeHandlerFeatures')
    io_k8s_api_core_v1_NodeSelector: IoK8sApiCoreV1NodeSelector = Field(
        ..., alias='io.k8s.api.core.v1.NodeSelector'
    )
    io_k8s_api_core_v1_NodeSelectorRequirement: (
        IoK8sApiCoreV1NodeSelectorRequirement
    ) = Field(..., alias='io.k8s.api.core.v1.NodeSelectorRequirement')
    io_k8s_api_core_v1_NodeSelectorTerm: IoK8sApiCoreV1NodeSelectorTerm = Field(
        ..., alias='io.k8s.api.core.v1.NodeSelectorTerm'
    )
    io_k8s_api_core_v1_NodeSpec: IoK8sApiCoreV1NodeSpec = Field(
        ..., alias='io.k8s.api.core.v1.NodeSpec'
    )
    io_k8s_api_core_v1_NodeStatus: IoK8sApiCoreV1NodeStatus = Field(
        ..., alias='io.k8s.api.core.v1.NodeStatus'
    )
    io_k8s_api_core_v1_NodeSystemInfo: IoK8sApiCoreV1NodeSystemInfo = Field(
        ..., alias='io.k8s.api.core.v1.NodeSystemInfo'
    )
    io_k8s_api_core_v1_ObjectFieldSelector: IoK8sApiCoreV1ObjectFieldSelector = Field(
        ..., alias='io.k8s.api.core.v1.ObjectFieldSelector'
    )
    io_k8s_api_core_v1_ObjectReference: IoK8sApiCoreV1ObjectReference = Field(
        ..., alias='io.k8s.api.core.v1.ObjectReference'
    )
    io_k8s_api_core_v1_PersistentVolume: IoK8sApiCoreV1PersistentVolume = Field(
        ..., alias='io.k8s.api.core.v1.PersistentVolume'
    )
    io_k8s_api_core_v1_PersistentVolumeClaim: IoK8sApiCoreV1PersistentVolumeClaim = (
        Field(..., alias='io.k8s.api.core.v1.PersistentVolumeClaim')
    )
    io_k8s_api_core_v1_PersistentVolumeClaimCondition: (
        IoK8sApiCoreV1PersistentVolumeClaimCondition
    ) = Field(..., alias='io.k8s.api.core.v1.PersistentVolumeClaimCondition')
    io_k8s_api_core_v1_PersistentVolumeClaimList: (
        IoK8sApiCoreV1PersistentVolumeClaimList
    ) = Field(..., alias='io.k8s.api.core.v1.PersistentVolumeClaimList')
    io_k8s_api_core_v1_PersistentVolumeClaimSpec: (
        IoK8sApiCoreV1PersistentVolumeClaimSpec
    ) = Field(..., alias='io.k8s.api.core.v1.PersistentVolumeClaimSpec')
    io_k8s_api_core_v1_PersistentVolumeClaimStatus: (
        IoK8sApiCoreV1PersistentVolumeClaimStatus
    ) = Field(..., alias='io.k8s.api.core.v1.PersistentVolumeClaimStatus')
    io_k8s_api_core_v1_PersistentVolumeClaimTemplate: (
        IoK8sApiCoreV1PersistentVolumeClaimTemplate
    ) = Field(..., alias='io.k8s.api.core.v1.PersistentVolumeClaimTemplate')
    io_k8s_api_core_v1_PersistentVolumeClaimVolumeSource: (
        IoK8sApiCoreV1PersistentVolumeClaimVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource')
    io_k8s_api_core_v1_PersistentVolumeList: IoK8sApiCoreV1PersistentVolumeList = Field(
        ..., alias='io.k8s.api.core.v1.PersistentVolumeList'
    )
    io_k8s_api_core_v1_PersistentVolumeSpec: IoK8sApiCoreV1PersistentVolumeSpec = Field(
        ..., alias='io.k8s.api.core.v1.PersistentVolumeSpec'
    )
    io_k8s_api_core_v1_PersistentVolumeStatus: IoK8sApiCoreV1PersistentVolumeStatus = (
        Field(..., alias='io.k8s.api.core.v1.PersistentVolumeStatus')
    )
    io_k8s_api_core_v1_PhotonPersistentDiskVolumeSource: (
        IoK8sApiCoreV1PhotonPersistentDiskVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource')
    io_k8s_api_core_v1_Pod: IoK8sApiCoreV1Pod = Field(
        ..., alias='io.k8s.api.core.v1.Pod'
    )
    io_k8s_api_core_v1_PodAffinity: IoK8sApiCoreV1PodAffinity = Field(
        ..., alias='io.k8s.api.core.v1.PodAffinity'
    )
    io_k8s_api_core_v1_PodAffinityTerm: IoK8sApiCoreV1PodAffinityTerm = Field(
        ..., alias='io.k8s.api.core.v1.PodAffinityTerm'
    )
    io_k8s_api_core_v1_PodAntiAffinity: IoK8sApiCoreV1PodAntiAffinity = Field(
        ..., alias='io.k8s.api.core.v1.PodAntiAffinity'
    )
    io_k8s_api_core_v1_PodCondition: IoK8sApiCoreV1PodCondition = Field(
        ..., alias='io.k8s.api.core.v1.PodCondition'
    )
    io_k8s_api_core_v1_PodDNSConfig: IoK8sApiCoreV1PodDNSConfig = Field(
        ..., alias='io.k8s.api.core.v1.PodDNSConfig'
    )
    io_k8s_api_core_v1_PodDNSConfigOption: IoK8sApiCoreV1PodDNSConfigOption = Field(
        ..., alias='io.k8s.api.core.v1.PodDNSConfigOption'
    )
    io_k8s_api_core_v1_PodIP: IoK8sApiCoreV1PodIP = Field(
        ..., alias='io.k8s.api.core.v1.PodIP'
    )
    io_k8s_api_core_v1_PodList: IoK8sApiCoreV1PodList = Field(
        ..., alias='io.k8s.api.core.v1.PodList'
    )
    io_k8s_api_core_v1_PodOS: IoK8sApiCoreV1PodOS = Field(
        ..., alias='io.k8s.api.core.v1.PodOS'
    )
    io_k8s_api_core_v1_PodReadinessGate: IoK8sApiCoreV1PodReadinessGate = Field(
        ..., alias='io.k8s.api.core.v1.PodReadinessGate'
    )
    io_k8s_api_core_v1_PodResourceClaim: IoK8sApiCoreV1PodResourceClaim = Field(
        ..., alias='io.k8s.api.core.v1.PodResourceClaim'
    )
    io_k8s_api_core_v1_PodResourceClaimStatus: IoK8sApiCoreV1PodResourceClaimStatus = (
        Field(..., alias='io.k8s.api.core.v1.PodResourceClaimStatus')
    )
    io_k8s_api_core_v1_PodSchedulingGate: IoK8sApiCoreV1PodSchedulingGate = Field(
        ..., alias='io.k8s.api.core.v1.PodSchedulingGate'
    )
    io_k8s_api_core_v1_PodSecurityContext: IoK8sApiCoreV1PodSecurityContext = Field(
        ..., alias='io.k8s.api.core.v1.PodSecurityContext'
    )
    io_k8s_api_core_v1_PodSpec: IoK8sApiCoreV1PodSpec = Field(
        ..., alias='io.k8s.api.core.v1.PodSpec'
    )
    io_k8s_api_core_v1_PodStatus: IoK8sApiCoreV1PodStatus = Field(
        ..., alias='io.k8s.api.core.v1.PodStatus'
    )
    io_k8s_api_core_v1_PodTemplate: IoK8sApiCoreV1PodTemplate = Field(
        ..., alias='io.k8s.api.core.v1.PodTemplate'
    )
    io_k8s_api_core_v1_PodTemplateList: IoK8sApiCoreV1PodTemplateList = Field(
        ..., alias='io.k8s.api.core.v1.PodTemplateList'
    )
    io_k8s_api_core_v1_PodTemplateSpec: IoK8sApiCoreV1PodTemplateSpec = Field(
        ..., alias='io.k8s.api.core.v1.PodTemplateSpec'
    )
    io_k8s_api_core_v1_PortStatus: IoK8sApiCoreV1PortStatus = Field(
        ..., alias='io.k8s.api.core.v1.PortStatus'
    )
    io_k8s_api_core_v1_PortworxVolumeSource: IoK8sApiCoreV1PortworxVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.PortworxVolumeSource'
    )
    io_k8s_api_core_v1_PreferredSchedulingTerm: (
        IoK8sApiCoreV1PreferredSchedulingTerm
    ) = Field(..., alias='io.k8s.api.core.v1.PreferredSchedulingTerm')
    io_k8s_api_core_v1_Probe: IoK8sApiCoreV1Probe = Field(
        ..., alias='io.k8s.api.core.v1.Probe'
    )
    io_k8s_api_core_v1_ProjectedVolumeSource: IoK8sApiCoreV1ProjectedVolumeSource = (
        Field(..., alias='io.k8s.api.core.v1.ProjectedVolumeSource')
    )
    io_k8s_api_core_v1_QuobyteVolumeSource: IoK8sApiCoreV1QuobyteVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.QuobyteVolumeSource'
    )
    io_k8s_api_core_v1_RBDPersistentVolumeSource: (
        IoK8sApiCoreV1RBDPersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.RBDPersistentVolumeSource')
    io_k8s_api_core_v1_RBDVolumeSource: IoK8sApiCoreV1RBDVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.RBDVolumeSource'
    )
    io_k8s_api_core_v1_ReplicationController: IoK8sApiCoreV1ReplicationController = (
        Field(..., alias='io.k8s.api.core.v1.ReplicationController')
    )
    io_k8s_api_core_v1_ReplicationControllerCondition: (
        IoK8sApiCoreV1ReplicationControllerCondition
    ) = Field(..., alias='io.k8s.api.core.v1.ReplicationControllerCondition')
    io_k8s_api_core_v1_ReplicationControllerList: (
        IoK8sApiCoreV1ReplicationControllerList
    ) = Field(..., alias='io.k8s.api.core.v1.ReplicationControllerList')
    io_k8s_api_core_v1_ReplicationControllerSpec: (
        IoK8sApiCoreV1ReplicationControllerSpec
    ) = Field(..., alias='io.k8s.api.core.v1.ReplicationControllerSpec')
    io_k8s_api_core_v1_ReplicationControllerStatus: (
        IoK8sApiCoreV1ReplicationControllerStatus
    ) = Field(..., alias='io.k8s.api.core.v1.ReplicationControllerStatus')
    io_k8s_api_core_v1_ResourceClaim: IoK8sApiCoreV1ResourceClaim = Field(
        ..., alias='io.k8s.api.core.v1.ResourceClaim'
    )
    io_k8s_api_core_v1_ResourceFieldSelector: IoK8sApiCoreV1ResourceFieldSelector = (
        Field(..., alias='io.k8s.api.core.v1.ResourceFieldSelector')
    )
    io_k8s_api_core_v1_ResourceHealth: IoK8sApiCoreV1ResourceHealth = Field(
        ..., alias='io.k8s.api.core.v1.ResourceHealth'
    )
    io_k8s_api_core_v1_ResourceQuota: IoK8sApiCoreV1ResourceQuota = Field(
        ..., alias='io.k8s.api.core.v1.ResourceQuota'
    )
    io_k8s_api_core_v1_ResourceQuotaList: IoK8sApiCoreV1ResourceQuotaList = Field(
        ..., alias='io.k8s.api.core.v1.ResourceQuotaList'
    )
    io_k8s_api_core_v1_ResourceQuotaSpec: IoK8sApiCoreV1ResourceQuotaSpec = Field(
        ..., alias='io.k8s.api.core.v1.ResourceQuotaSpec'
    )
    io_k8s_api_core_v1_ResourceQuotaStatus: IoK8sApiCoreV1ResourceQuotaStatus = Field(
        ..., alias='io.k8s.api.core.v1.ResourceQuotaStatus'
    )
    io_k8s_api_core_v1_ResourceRequirements: IoK8sApiCoreV1ResourceRequirements = Field(
        ..., alias='io.k8s.api.core.v1.ResourceRequirements'
    )
    io_k8s_api_core_v1_ResourceStatus: IoK8sApiCoreV1ResourceStatus = Field(
        ..., alias='io.k8s.api.core.v1.ResourceStatus'
    )
    io_k8s_api_core_v1_SELinuxOptions: IoK8sApiCoreV1SELinuxOptions = Field(
        ..., alias='io.k8s.api.core.v1.SELinuxOptions'
    )
    io_k8s_api_core_v1_ScaleIOPersistentVolumeSource: (
        IoK8sApiCoreV1ScaleIOPersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.ScaleIOPersistentVolumeSource')
    io_k8s_api_core_v1_ScaleIOVolumeSource: IoK8sApiCoreV1ScaleIOVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.ScaleIOVolumeSource'
    )
    io_k8s_api_core_v1_ScopeSelector: IoK8sApiCoreV1ScopeSelector = Field(
        ..., alias='io.k8s.api.core.v1.ScopeSelector'
    )
    io_k8s_api_core_v1_ScopedResourceSelectorRequirement: (
        IoK8sApiCoreV1ScopedResourceSelectorRequirement
    ) = Field(..., alias='io.k8s.api.core.v1.ScopedResourceSelectorRequirement')
    io_k8s_api_core_v1_SeccompProfile: IoK8sApiCoreV1SeccompProfile = Field(
        ..., alias='io.k8s.api.core.v1.SeccompProfile'
    )
    io_k8s_api_core_v1_Secret: IoK8sApiCoreV1Secret = Field(
        ..., alias='io.k8s.api.core.v1.Secret'
    )
    io_k8s_api_core_v1_SecretEnvSource: IoK8sApiCoreV1SecretEnvSource = Field(
        ..., alias='io.k8s.api.core.v1.SecretEnvSource'
    )
    io_k8s_api_core_v1_SecretKeySelector: IoK8sApiCoreV1SecretKeySelector = Field(
        ..., alias='io.k8s.api.core.v1.SecretKeySelector'
    )
    io_k8s_api_core_v1_SecretList: IoK8sApiCoreV1SecretList = Field(
        ..., alias='io.k8s.api.core.v1.SecretList'
    )
    io_k8s_api_core_v1_SecretProjection: IoK8sApiCoreV1SecretProjection = Field(
        ..., alias='io.k8s.api.core.v1.SecretProjection'
    )
    io_k8s_api_core_v1_SecretReference: IoK8sApiCoreV1SecretReference = Field(
        ..., alias='io.k8s.api.core.v1.SecretReference'
    )
    io_k8s_api_core_v1_SecretVolumeSource: IoK8sApiCoreV1SecretVolumeSource = Field(
        ..., alias='io.k8s.api.core.v1.SecretVolumeSource'
    )
    io_k8s_api_core_v1_SecurityContext: IoK8sApiCoreV1SecurityContext = Field(
        ..., alias='io.k8s.api.core.v1.SecurityContext'
    )
    io_k8s_api_core_v1_Service: IoK8sApiCoreV1Service = Field(
        ..., alias='io.k8s.api.core.v1.Service'
    )
    io_k8s_api_core_v1_ServiceAccount: IoK8sApiCoreV1ServiceAccount = Field(
        ..., alias='io.k8s.api.core.v1.ServiceAccount'
    )
    io_k8s_api_core_v1_ServiceAccountList: IoK8sApiCoreV1ServiceAccountList = Field(
        ..., alias='io.k8s.api.core.v1.ServiceAccountList'
    )
    io_k8s_api_core_v1_ServiceAccountTokenProjection: (
        IoK8sApiCoreV1ServiceAccountTokenProjection
    ) = Field(..., alias='io.k8s.api.core.v1.ServiceAccountTokenProjection')
    io_k8s_api_core_v1_ServiceList: IoK8sApiCoreV1ServiceList = Field(
        ..., alias='io.k8s.api.core.v1.ServiceList'
    )
    io_k8s_api_core_v1_ServicePort: IoK8sApiCoreV1ServicePort = Field(
        ..., alias='io.k8s.api.core.v1.ServicePort'
    )
    io_k8s_api_core_v1_ServiceSpec: IoK8sApiCoreV1ServiceSpec = Field(
        ..., alias='io.k8s.api.core.v1.ServiceSpec'
    )
    io_k8s_api_core_v1_ServiceStatus: IoK8sApiCoreV1ServiceStatus = Field(
        ..., alias='io.k8s.api.core.v1.ServiceStatus'
    )
    io_k8s_api_core_v1_SessionAffinityConfig: IoK8sApiCoreV1SessionAffinityConfig = (
        Field(..., alias='io.k8s.api.core.v1.SessionAffinityConfig')
    )
    io_k8s_api_core_v1_SleepAction: IoK8sApiCoreV1SleepAction = Field(
        ..., alias='io.k8s.api.core.v1.SleepAction'
    )
    io_k8s_api_core_v1_StorageOSPersistentVolumeSource: (
        IoK8sApiCoreV1StorageOSPersistentVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.StorageOSPersistentVolumeSource')
    io_k8s_api_core_v1_StorageOSVolumeSource: IoK8sApiCoreV1StorageOSVolumeSource = (
        Field(..., alias='io.k8s.api.core.v1.StorageOSVolumeSource')
    )
    io_k8s_api_core_v1_Sysctl: IoK8sApiCoreV1Sysctl = Field(
        ..., alias='io.k8s.api.core.v1.Sysctl'
    )
    io_k8s_api_core_v1_TCPSocketAction: IoK8sApiCoreV1TCPSocketAction = Field(
        ..., alias='io.k8s.api.core.v1.TCPSocketAction'
    )
    io_k8s_api_core_v1_Taint: IoK8sApiCoreV1Taint = Field(
        ..., alias='io.k8s.api.core.v1.Taint'
    )
    io_k8s_api_core_v1_Toleration: IoK8sApiCoreV1Toleration = Field(
        ..., alias='io.k8s.api.core.v1.Toleration'
    )
    io_k8s_api_core_v1_TopologySelectorLabelRequirement: (
        IoK8sApiCoreV1TopologySelectorLabelRequirement
    ) = Field(..., alias='io.k8s.api.core.v1.TopologySelectorLabelRequirement')
    io_k8s_api_core_v1_TopologySelectorTerm: IoK8sApiCoreV1TopologySelectorTerm = Field(
        ..., alias='io.k8s.api.core.v1.TopologySelectorTerm'
    )
    io_k8s_api_core_v1_TopologySpreadConstraint: (
        IoK8sApiCoreV1TopologySpreadConstraint
    ) = Field(..., alias='io.k8s.api.core.v1.TopologySpreadConstraint')
    io_k8s_api_core_v1_TypedLocalObjectReference: (
        IoK8sApiCoreV1TypedLocalObjectReference
    ) = Field(..., alias='io.k8s.api.core.v1.TypedLocalObjectReference')
    io_k8s_api_core_v1_TypedObjectReference: IoK8sApiCoreV1TypedObjectReference = Field(
        ..., alias='io.k8s.api.core.v1.TypedObjectReference'
    )
    io_k8s_api_core_v1_Volume: IoK8sApiCoreV1Volume = Field(
        ..., alias='io.k8s.api.core.v1.Volume'
    )
    io_k8s_api_core_v1_VolumeDevice: IoK8sApiCoreV1VolumeDevice = Field(
        ..., alias='io.k8s.api.core.v1.VolumeDevice'
    )
    io_k8s_api_core_v1_VolumeMount: IoK8sApiCoreV1VolumeMount = Field(
        ..., alias='io.k8s.api.core.v1.VolumeMount'
    )
    io_k8s_api_core_v1_VolumeMountStatus: IoK8sApiCoreV1VolumeMountStatus = Field(
        ..., alias='io.k8s.api.core.v1.VolumeMountStatus'
    )
    io_k8s_api_core_v1_VolumeNodeAffinity: IoK8sApiCoreV1VolumeNodeAffinity = Field(
        ..., alias='io.k8s.api.core.v1.VolumeNodeAffinity'
    )
    io_k8s_api_core_v1_VolumeProjection: IoK8sApiCoreV1VolumeProjection = Field(
        ..., alias='io.k8s.api.core.v1.VolumeProjection'
    )
    io_k8s_api_core_v1_VolumeResourceRequirements: (
        IoK8sApiCoreV1VolumeResourceRequirements
    ) = Field(..., alias='io.k8s.api.core.v1.VolumeResourceRequirements')
    io_k8s_api_core_v1_VsphereVirtualDiskVolumeSource: (
        IoK8sApiCoreV1VsphereVirtualDiskVolumeSource
    ) = Field(..., alias='io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource')
    io_k8s_api_core_v1_WeightedPodAffinityTerm: (
        IoK8sApiCoreV1WeightedPodAffinityTerm
    ) = Field(..., alias='io.k8s.api.core.v1.WeightedPodAffinityTerm')
    io_k8s_api_core_v1_WindowsSecurityContextOptions: (
        IoK8sApiCoreV1WindowsSecurityContextOptions
    ) = Field(..., alias='io.k8s.api.core.v1.WindowsSecurityContextOptions')
    io_k8s_api_discovery_v1_Endpoint: IoK8sApiDiscoveryV1Endpoint = Field(
        ..., alias='io.k8s.api.discovery.v1.Endpoint'
    )
    io_k8s_api_discovery_v1_EndpointConditions: (
        IoK8sApiDiscoveryV1EndpointConditions
    ) = Field(..., alias='io.k8s.api.discovery.v1.EndpointConditions')
    io_k8s_api_discovery_v1_EndpointHints: IoK8sApiDiscoveryV1EndpointHints = Field(
        ..., alias='io.k8s.api.discovery.v1.EndpointHints'
    )
    io_k8s_api_discovery_v1_EndpointPort: IoK8sApiDiscoveryV1EndpointPort = Field(
        ..., alias='io.k8s.api.discovery.v1.EndpointPort'
    )
    io_k8s_api_discovery_v1_EndpointSlice: IoK8sApiDiscoveryV1EndpointSlice = Field(
        ..., alias='io.k8s.api.discovery.v1.EndpointSlice'
    )
    io_k8s_api_discovery_v1_EndpointSliceList: IoK8sApiDiscoveryV1EndpointSliceList = (
        Field(..., alias='io.k8s.api.discovery.v1.EndpointSliceList')
    )
    io_k8s_api_discovery_v1_ForZone: IoK8sApiDiscoveryV1ForZone = Field(
        ..., alias='io.k8s.api.discovery.v1.ForZone'
    )
    io_k8s_api_events_v1_Event: IoK8sApiEventsV1Event = Field(
        ..., alias='io.k8s.api.events.v1.Event'
    )
    io_k8s_api_events_v1_EventList: IoK8sApiEventsV1EventList = Field(
        ..., alias='io.k8s.api.events.v1.EventList'
    )
    io_k8s_api_events_v1_EventSeries: IoK8sApiEventsV1EventSeries = Field(
        ..., alias='io.k8s.api.events.v1.EventSeries'
    )
    io_k8s_api_flowcontrol_v1_ExemptPriorityLevelConfiguration: (
        IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration')
    io_k8s_api_flowcontrol_v1_FlowDistinguisherMethod: (
        IoK8sApiFlowcontrolV1FlowDistinguisherMethod
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod')
    io_k8s_api_flowcontrol_v1_FlowSchema: IoK8sApiFlowcontrolV1FlowSchema = Field(
        ..., alias='io.k8s.api.flowcontrol.v1.FlowSchema'
    )
    io_k8s_api_flowcontrol_v1_FlowSchemaCondition: (
        IoK8sApiFlowcontrolV1FlowSchemaCondition
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.FlowSchemaCondition')
    io_k8s_api_flowcontrol_v1_FlowSchemaList: IoK8sApiFlowcontrolV1FlowSchemaList = (
        Field(..., alias='io.k8s.api.flowcontrol.v1.FlowSchemaList')
    )
    io_k8s_api_flowcontrol_v1_FlowSchemaSpec: IoK8sApiFlowcontrolV1FlowSchemaSpec = (
        Field(..., alias='io.k8s.api.flowcontrol.v1.FlowSchemaSpec')
    )
    io_k8s_api_flowcontrol_v1_FlowSchemaStatus: (
        IoK8sApiFlowcontrolV1FlowSchemaStatus
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.FlowSchemaStatus')
    io_k8s_api_flowcontrol_v1_GroupSubject: IoK8sApiFlowcontrolV1GroupSubject = Field(
        ..., alias='io.k8s.api.flowcontrol.v1.GroupSubject'
    )
    io_k8s_api_flowcontrol_v1_LimitResponse: IoK8sApiFlowcontrolV1LimitResponse = Field(
        ..., alias='io.k8s.api.flowcontrol.v1.LimitResponse'
    )
    io_k8s_api_flowcontrol_v1_LimitedPriorityLevelConfiguration: (
        IoK8sApiFlowcontrolV1LimitedPriorityLevelConfiguration
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration')
    io_k8s_api_flowcontrol_v1_NonResourcePolicyRule: (
        IoK8sApiFlowcontrolV1NonResourcePolicyRule
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.NonResourcePolicyRule')
    io_k8s_api_flowcontrol_v1_PolicyRulesWithSubjects: (
        IoK8sApiFlowcontrolV1PolicyRulesWithSubjects
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects')
    io_k8s_api_flowcontrol_v1_PriorityLevelConfiguration: (
        IoK8sApiFlowcontrolV1PriorityLevelConfiguration
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration')
    io_k8s_api_flowcontrol_v1_PriorityLevelConfigurationCondition: (
        IoK8sApiFlowcontrolV1PriorityLevelConfigurationCondition
    ) = Field(
        ..., alias='io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition'
    )
    io_k8s_api_flowcontrol_v1_PriorityLevelConfigurationList: (
        IoK8sApiFlowcontrolV1PriorityLevelConfigurationList
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationList')
    io_k8s_api_flowcontrol_v1_PriorityLevelConfigurationReference: (
        IoK8sApiFlowcontrolV1PriorityLevelConfigurationReference
    ) = Field(
        ..., alias='io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference'
    )
    io_k8s_api_flowcontrol_v1_PriorityLevelConfigurationSpec: (
        IoK8sApiFlowcontrolV1PriorityLevelConfigurationSpec
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec')
    io_k8s_api_flowcontrol_v1_PriorityLevelConfigurationStatus: (
        IoK8sApiFlowcontrolV1PriorityLevelConfigurationStatus
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus')
    io_k8s_api_flowcontrol_v1_QueuingConfiguration: (
        IoK8sApiFlowcontrolV1QueuingConfiguration
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.QueuingConfiguration')
    io_k8s_api_flowcontrol_v1_ResourcePolicyRule: (
        IoK8sApiFlowcontrolV1ResourcePolicyRule
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.ResourcePolicyRule')
    io_k8s_api_flowcontrol_v1_ServiceAccountSubject: (
        IoK8sApiFlowcontrolV1ServiceAccountSubject
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1.ServiceAccountSubject')
    io_k8s_api_flowcontrol_v1_Subject: IoK8sApiFlowcontrolV1Subject = Field(
        ..., alias='io.k8s.api.flowcontrol.v1.Subject'
    )
    io_k8s_api_flowcontrol_v1_UserSubject: IoK8sApiFlowcontrolV1UserSubject = Field(
        ..., alias='io.k8s.api.flowcontrol.v1.UserSubject'
    )
    io_k8s_api_flowcontrol_v1beta3_ExemptPriorityLevelConfiguration: (
        IoK8sApiFlowcontrolV1beta3ExemptPriorityLevelConfiguration
    ) = Field(
        ..., alias='io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration'
    )
    io_k8s_api_flowcontrol_v1beta3_FlowDistinguisherMethod: (
        IoK8sApiFlowcontrolV1beta3FlowDistinguisherMethod
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod')
    io_k8s_api_flowcontrol_v1beta3_FlowSchema: IoK8sApiFlowcontrolV1beta3FlowSchema = (
        Field(..., alias='io.k8s.api.flowcontrol.v1beta3.FlowSchema')
    )
    io_k8s_api_flowcontrol_v1beta3_FlowSchemaCondition: (
        IoK8sApiFlowcontrolV1beta3FlowSchemaCondition
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition')
    io_k8s_api_flowcontrol_v1beta3_FlowSchemaList: (
        IoK8sApiFlowcontrolV1beta3FlowSchemaList
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.FlowSchemaList')
    io_k8s_api_flowcontrol_v1beta3_FlowSchemaSpec: (
        IoK8sApiFlowcontrolV1beta3FlowSchemaSpec
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec')
    io_k8s_api_flowcontrol_v1beta3_FlowSchemaStatus: (
        IoK8sApiFlowcontrolV1beta3FlowSchemaStatus
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus')
    io_k8s_api_flowcontrol_v1beta3_GroupSubject: (
        IoK8sApiFlowcontrolV1beta3GroupSubject
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.GroupSubject')
    io_k8s_api_flowcontrol_v1beta3_LimitResponse: (
        IoK8sApiFlowcontrolV1beta3LimitResponse
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.LimitResponse')
    io_k8s_api_flowcontrol_v1beta3_LimitedPriorityLevelConfiguration: (
        IoK8sApiFlowcontrolV1beta3LimitedPriorityLevelConfiguration
    ) = Field(
        ..., alias='io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration'
    )
    io_k8s_api_flowcontrol_v1beta3_NonResourcePolicyRule: (
        IoK8sApiFlowcontrolV1beta3NonResourcePolicyRule
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule')
    io_k8s_api_flowcontrol_v1beta3_PolicyRulesWithSubjects: (
        IoK8sApiFlowcontrolV1beta3PolicyRulesWithSubjects
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects')
    io_k8s_api_flowcontrol_v1beta3_PriorityLevelConfiguration: (
        IoK8sApiFlowcontrolV1beta3PriorityLevelConfiguration
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration')
    io_k8s_api_flowcontrol_v1beta3_PriorityLevelConfigurationCondition: (
        IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationCondition
    ) = Field(
        ..., alias='io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition'
    )
    io_k8s_api_flowcontrol_v1beta3_PriorityLevelConfigurationList: (
        IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationList
    ) = Field(
        ..., alias='io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList'
    )
    io_k8s_api_flowcontrol_v1beta3_PriorityLevelConfigurationReference: (
        IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationReference
    ) = Field(
        ..., alias='io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference'
    )
    io_k8s_api_flowcontrol_v1beta3_PriorityLevelConfigurationSpec: (
        IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationSpec
    ) = Field(
        ..., alias='io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec'
    )
    io_k8s_api_flowcontrol_v1beta3_PriorityLevelConfigurationStatus: (
        IoK8sApiFlowcontrolV1beta3PriorityLevelConfigurationStatus
    ) = Field(
        ..., alias='io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus'
    )
    io_k8s_api_flowcontrol_v1beta3_QueuingConfiguration: (
        IoK8sApiFlowcontrolV1beta3QueuingConfiguration
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration')
    io_k8s_api_flowcontrol_v1beta3_ResourcePolicyRule: (
        IoK8sApiFlowcontrolV1beta3ResourcePolicyRule
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule')
    io_k8s_api_flowcontrol_v1beta3_ServiceAccountSubject: (
        IoK8sApiFlowcontrolV1beta3ServiceAccountSubject
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject')
    io_k8s_api_flowcontrol_v1beta3_Subject: IoK8sApiFlowcontrolV1beta3Subject = Field(
        ..., alias='io.k8s.api.flowcontrol.v1beta3.Subject'
    )
    io_k8s_api_flowcontrol_v1beta3_UserSubject: (
        IoK8sApiFlowcontrolV1beta3UserSubject
    ) = Field(..., alias='io.k8s.api.flowcontrol.v1beta3.UserSubject')
    io_k8s_api_networking_v1_HTTPIngressPath: IoK8sApiNetworkingV1HTTPIngressPath = (
        Field(..., alias='io.k8s.api.networking.v1.HTTPIngressPath')
    )
    io_k8s_api_networking_v1_HTTPIngressRuleValue: (
        IoK8sApiNetworkingV1HTTPIngressRuleValue
    ) = Field(..., alias='io.k8s.api.networking.v1.HTTPIngressRuleValue')
    io_k8s_api_networking_v1_IPBlock: IoK8sApiNetworkingV1IPBlock = Field(
        ..., alias='io.k8s.api.networking.v1.IPBlock'
    )
    io_k8s_api_networking_v1_Ingress: IoK8sApiNetworkingV1Ingress = Field(
        ..., alias='io.k8s.api.networking.v1.Ingress'
    )
    io_k8s_api_networking_v1_IngressBackend: IoK8sApiNetworkingV1IngressBackend = Field(
        ..., alias='io.k8s.api.networking.v1.IngressBackend'
    )
    io_k8s_api_networking_v1_IngressClass: IoK8sApiNetworkingV1IngressClass = Field(
        ..., alias='io.k8s.api.networking.v1.IngressClass'
    )
    io_k8s_api_networking_v1_IngressClassList: IoK8sApiNetworkingV1IngressClassList = (
        Field(..., alias='io.k8s.api.networking.v1.IngressClassList')
    )
    io_k8s_api_networking_v1_IngressClassParametersReference: (
        IoK8sApiNetworkingV1IngressClassParametersReference
    ) = Field(..., alias='io.k8s.api.networking.v1.IngressClassParametersReference')
    io_k8s_api_networking_v1_IngressClassSpec: IoK8sApiNetworkingV1IngressClassSpec = (
        Field(..., alias='io.k8s.api.networking.v1.IngressClassSpec')
    )
    io_k8s_api_networking_v1_IngressList: IoK8sApiNetworkingV1IngressList = Field(
        ..., alias='io.k8s.api.networking.v1.IngressList'
    )
    io_k8s_api_networking_v1_IngressLoadBalancerIngress: (
        IoK8sApiNetworkingV1IngressLoadBalancerIngress
    ) = Field(..., alias='io.k8s.api.networking.v1.IngressLoadBalancerIngress')
    io_k8s_api_networking_v1_IngressLoadBalancerStatus: (
        IoK8sApiNetworkingV1IngressLoadBalancerStatus
    ) = Field(..., alias='io.k8s.api.networking.v1.IngressLoadBalancerStatus')
    io_k8s_api_networking_v1_IngressPortStatus: (
        IoK8sApiNetworkingV1IngressPortStatus
    ) = Field(..., alias='io.k8s.api.networking.v1.IngressPortStatus')
    io_k8s_api_networking_v1_IngressRule: IoK8sApiNetworkingV1IngressRule = Field(
        ..., alias='io.k8s.api.networking.v1.IngressRule'
    )
    io_k8s_api_networking_v1_IngressServiceBackend: (
        IoK8sApiNetworkingV1IngressServiceBackend
    ) = Field(..., alias='io.k8s.api.networking.v1.IngressServiceBackend')
    io_k8s_api_networking_v1_IngressSpec: IoK8sApiNetworkingV1IngressSpec = Field(
        ..., alias='io.k8s.api.networking.v1.IngressSpec'
    )
    io_k8s_api_networking_v1_IngressStatus: IoK8sApiNetworkingV1IngressStatus = Field(
        ..., alias='io.k8s.api.networking.v1.IngressStatus'
    )
    io_k8s_api_networking_v1_IngressTLS: IoK8sApiNetworkingV1IngressTLS = Field(
        ..., alias='io.k8s.api.networking.v1.IngressTLS'
    )
    io_k8s_api_networking_v1_NetworkPolicy: IoK8sApiNetworkingV1NetworkPolicy = Field(
        ..., alias='io.k8s.api.networking.v1.NetworkPolicy'
    )
    io_k8s_api_networking_v1_NetworkPolicyEgressRule: (
        IoK8sApiNetworkingV1NetworkPolicyEgressRule
    ) = Field(..., alias='io.k8s.api.networking.v1.NetworkPolicyEgressRule')
    io_k8s_api_networking_v1_NetworkPolicyIngressRule: (
        IoK8sApiNetworkingV1NetworkPolicyIngressRule
    ) = Field(..., alias='io.k8s.api.networking.v1.NetworkPolicyIngressRule')
    io_k8s_api_networking_v1_NetworkPolicyList: (
        IoK8sApiNetworkingV1NetworkPolicyList
    ) = Field(..., alias='io.k8s.api.networking.v1.NetworkPolicyList')
    io_k8s_api_networking_v1_NetworkPolicyPeer: (
        IoK8sApiNetworkingV1NetworkPolicyPeer
    ) = Field(..., alias='io.k8s.api.networking.v1.NetworkPolicyPeer')
    io_k8s_api_networking_v1_NetworkPolicyPort: (
        IoK8sApiNetworkingV1NetworkPolicyPort
    ) = Field(..., alias='io.k8s.api.networking.v1.NetworkPolicyPort')
    io_k8s_api_networking_v1_NetworkPolicySpec: (
        IoK8sApiNetworkingV1NetworkPolicySpec
    ) = Field(..., alias='io.k8s.api.networking.v1.NetworkPolicySpec')
    io_k8s_api_networking_v1_ServiceBackendPort: (
        IoK8sApiNetworkingV1ServiceBackendPort
    ) = Field(..., alias='io.k8s.api.networking.v1.ServiceBackendPort')
    io_k8s_api_networking_v1beta1_IPAddress: IoK8sApiNetworkingV1beta1IPAddress = Field(
        ..., alias='io.k8s.api.networking.v1beta1.IPAddress'
    )
    io_k8s_api_networking_v1beta1_IPAddressList: (
        IoK8sApiNetworkingV1beta1IPAddressList
    ) = Field(..., alias='io.k8s.api.networking.v1beta1.IPAddressList')
    io_k8s_api_networking_v1beta1_IPAddressSpec: (
        IoK8sApiNetworkingV1beta1IPAddressSpec
    ) = Field(..., alias='io.k8s.api.networking.v1beta1.IPAddressSpec')
    io_k8s_api_networking_v1beta1_ParentReference: (
        IoK8sApiNetworkingV1beta1ParentReference
    ) = Field(..., alias='io.k8s.api.networking.v1beta1.ParentReference')
    io_k8s_api_networking_v1beta1_ServiceCIDR: IoK8sApiNetworkingV1beta1ServiceCIDR = (
        Field(..., alias='io.k8s.api.networking.v1beta1.ServiceCIDR')
    )
    io_k8s_api_networking_v1beta1_ServiceCIDRList: (
        IoK8sApiNetworkingV1beta1ServiceCIDRList
    ) = Field(..., alias='io.k8s.api.networking.v1beta1.ServiceCIDRList')
    io_k8s_api_networking_v1beta1_ServiceCIDRSpec: (
        IoK8sApiNetworkingV1beta1ServiceCIDRSpec
    ) = Field(..., alias='io.k8s.api.networking.v1beta1.ServiceCIDRSpec')
    io_k8s_api_networking_v1beta1_ServiceCIDRStatus: (
        IoK8sApiNetworkingV1beta1ServiceCIDRStatus
    ) = Field(..., alias='io.k8s.api.networking.v1beta1.ServiceCIDRStatus')
    io_k8s_api_node_v1_Overhead: IoK8sApiNodeV1Overhead = Field(
        ..., alias='io.k8s.api.node.v1.Overhead'
    )
    io_k8s_api_node_v1_RuntimeClass: IoK8sApiNodeV1RuntimeClass = Field(
        ..., alias='io.k8s.api.node.v1.RuntimeClass'
    )
    io_k8s_api_node_v1_RuntimeClassList: IoK8sApiNodeV1RuntimeClassList = Field(
        ..., alias='io.k8s.api.node.v1.RuntimeClassList'
    )
    io_k8s_api_node_v1_Scheduling: IoK8sApiNodeV1Scheduling = Field(
        ..., alias='io.k8s.api.node.v1.Scheduling'
    )
    io_k8s_api_policy_v1_Eviction: IoK8sApiPolicyV1Eviction = Field(
        ..., alias='io.k8s.api.policy.v1.Eviction'
    )
    io_k8s_api_policy_v1_PodDisruptionBudget: IoK8sApiPolicyV1PodDisruptionBudget = (
        Field(..., alias='io.k8s.api.policy.v1.PodDisruptionBudget')
    )
    io_k8s_api_policy_v1_PodDisruptionBudgetList: (
        IoK8sApiPolicyV1PodDisruptionBudgetList
    ) = Field(..., alias='io.k8s.api.policy.v1.PodDisruptionBudgetList')
    io_k8s_api_policy_v1_PodDisruptionBudgetSpec: (
        IoK8sApiPolicyV1PodDisruptionBudgetSpec
    ) = Field(..., alias='io.k8s.api.policy.v1.PodDisruptionBudgetSpec')
    io_k8s_api_policy_v1_PodDisruptionBudgetStatus: (
        IoK8sApiPolicyV1PodDisruptionBudgetStatus
    ) = Field(..., alias='io.k8s.api.policy.v1.PodDisruptionBudgetStatus')
    io_k8s_api_rbac_v1_AggregationRule: IoK8sApiRbacV1AggregationRule = Field(
        ..., alias='io.k8s.api.rbac.v1.AggregationRule'
    )
    io_k8s_api_rbac_v1_ClusterRole: IoK8sApiRbacV1ClusterRole = Field(
        ..., alias='io.k8s.api.rbac.v1.ClusterRole'
    )
    io_k8s_api_rbac_v1_ClusterRoleBinding: IoK8sApiRbacV1ClusterRoleBinding = Field(
        ..., alias='io.k8s.api.rbac.v1.ClusterRoleBinding'
    )
    io_k8s_api_rbac_v1_ClusterRoleBindingList: IoK8sApiRbacV1ClusterRoleBindingList = (
        Field(..., alias='io.k8s.api.rbac.v1.ClusterRoleBindingList')
    )
    io_k8s_api_rbac_v1_ClusterRoleList: IoK8sApiRbacV1ClusterRoleList = Field(
        ..., alias='io.k8s.api.rbac.v1.ClusterRoleList'
    )
    io_k8s_api_rbac_v1_PolicyRule: IoK8sApiRbacV1PolicyRule = Field(
        ..., alias='io.k8s.api.rbac.v1.PolicyRule'
    )
    io_k8s_api_rbac_v1_Role: IoK8sApiRbacV1Role = Field(
        ..., alias='io.k8s.api.rbac.v1.Role'
    )
    io_k8s_api_rbac_v1_RoleBinding: IoK8sApiRbacV1RoleBinding = Field(
        ..., alias='io.k8s.api.rbac.v1.RoleBinding'
    )
    io_k8s_api_rbac_v1_RoleBindingList: IoK8sApiRbacV1RoleBindingList = Field(
        ..., alias='io.k8s.api.rbac.v1.RoleBindingList'
    )
    io_k8s_api_rbac_v1_RoleList: IoK8sApiRbacV1RoleList = Field(
        ..., alias='io.k8s.api.rbac.v1.RoleList'
    )
    io_k8s_api_rbac_v1_RoleRef: IoK8sApiRbacV1RoleRef = Field(
        ..., alias='io.k8s.api.rbac.v1.RoleRef'
    )
    io_k8s_api_rbac_v1_Subject: IoK8sApiRbacV1Subject = Field(
        ..., alias='io.k8s.api.rbac.v1.Subject'
    )
    io_k8s_api_resource_v1alpha3_AllocationResult: (
        IoK8sApiResourceV1alpha3AllocationResult
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.AllocationResult')
    io_k8s_api_resource_v1alpha3_BasicDevice: IoK8sApiResourceV1alpha3BasicDevice = (
        Field(..., alias='io.k8s.api.resource.v1alpha3.BasicDevice')
    )
    io_k8s_api_resource_v1alpha3_CELDeviceSelector: (
        IoK8sApiResourceV1alpha3CELDeviceSelector
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.CELDeviceSelector')
    io_k8s_api_resource_v1alpha3_Device: IoK8sApiResourceV1alpha3Device = Field(
        ..., alias='io.k8s.api.resource.v1alpha3.Device'
    )
    io_k8s_api_resource_v1alpha3_DeviceAllocationConfiguration: (
        IoK8sApiResourceV1alpha3DeviceAllocationConfiguration
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceAllocationConfiguration')
    io_k8s_api_resource_v1alpha3_DeviceAllocationResult: (
        IoK8sApiResourceV1alpha3DeviceAllocationResult
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceAllocationResult')
    io_k8s_api_resource_v1alpha3_DeviceAttribute: (
        IoK8sApiResourceV1alpha3DeviceAttribute
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceAttribute')
    io_k8s_api_resource_v1alpha3_DeviceClaim: IoK8sApiResourceV1alpha3DeviceClaim = (
        Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceClaim')
    )
    io_k8s_api_resource_v1alpha3_DeviceClaimConfiguration: (
        IoK8sApiResourceV1alpha3DeviceClaimConfiguration
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceClaimConfiguration')
    io_k8s_api_resource_v1alpha3_DeviceClass: IoK8sApiResourceV1alpha3DeviceClass = (
        Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceClass')
    )
    io_k8s_api_resource_v1alpha3_DeviceClassConfiguration: (
        IoK8sApiResourceV1alpha3DeviceClassConfiguration
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceClassConfiguration')
    io_k8s_api_resource_v1alpha3_DeviceClassList: (
        IoK8sApiResourceV1alpha3DeviceClassList
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceClassList')
    io_k8s_api_resource_v1alpha3_DeviceClassSpec: (
        IoK8sApiResourceV1alpha3DeviceClassSpec
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceClassSpec')
    io_k8s_api_resource_v1alpha3_DeviceConstraint: (
        IoK8sApiResourceV1alpha3DeviceConstraint
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceConstraint')
    io_k8s_api_resource_v1alpha3_DeviceRequest: (
        IoK8sApiResourceV1alpha3DeviceRequest
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceRequest')
    io_k8s_api_resource_v1alpha3_DeviceRequestAllocationResult: (
        IoK8sApiResourceV1alpha3DeviceRequestAllocationResult
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceRequestAllocationResult')
    io_k8s_api_resource_v1alpha3_DeviceSelector: (
        IoK8sApiResourceV1alpha3DeviceSelector
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.DeviceSelector')
    io_k8s_api_resource_v1alpha3_OpaqueDeviceConfiguration: (
        IoK8sApiResourceV1alpha3OpaqueDeviceConfiguration
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.OpaqueDeviceConfiguration')
    io_k8s_api_resource_v1alpha3_PodSchedulingContext: (
        IoK8sApiResourceV1alpha3PodSchedulingContext
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.PodSchedulingContext')
    io_k8s_api_resource_v1alpha3_PodSchedulingContextList: (
        IoK8sApiResourceV1alpha3PodSchedulingContextList
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.PodSchedulingContextList')
    io_k8s_api_resource_v1alpha3_PodSchedulingContextSpec: (
        IoK8sApiResourceV1alpha3PodSchedulingContextSpec
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.PodSchedulingContextSpec')
    io_k8s_api_resource_v1alpha3_PodSchedulingContextStatus: (
        IoK8sApiResourceV1alpha3PodSchedulingContextStatus
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.PodSchedulingContextStatus')
    io_k8s_api_resource_v1alpha3_ResourceClaim: (
        IoK8sApiResourceV1alpha3ResourceClaim
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceClaim')
    io_k8s_api_resource_v1alpha3_ResourceClaimConsumerReference: (
        IoK8sApiResourceV1alpha3ResourceClaimConsumerReference
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceClaimConsumerReference')
    io_k8s_api_resource_v1alpha3_ResourceClaimList: (
        IoK8sApiResourceV1alpha3ResourceClaimList
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceClaimList')
    io_k8s_api_resource_v1alpha3_ResourceClaimSchedulingStatus: (
        IoK8sApiResourceV1alpha3ResourceClaimSchedulingStatus
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceClaimSchedulingStatus')
    io_k8s_api_resource_v1alpha3_ResourceClaimSpec: (
        IoK8sApiResourceV1alpha3ResourceClaimSpec
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceClaimSpec')
    io_k8s_api_resource_v1alpha3_ResourceClaimStatus: (
        IoK8sApiResourceV1alpha3ResourceClaimStatus
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceClaimStatus')
    io_k8s_api_resource_v1alpha3_ResourceClaimTemplate: (
        IoK8sApiResourceV1alpha3ResourceClaimTemplate
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceClaimTemplate')
    io_k8s_api_resource_v1alpha3_ResourceClaimTemplateList: (
        IoK8sApiResourceV1alpha3ResourceClaimTemplateList
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceClaimTemplateList')
    io_k8s_api_resource_v1alpha3_ResourceClaimTemplateSpec: (
        IoK8sApiResourceV1alpha3ResourceClaimTemplateSpec
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceClaimTemplateSpec')
    io_k8s_api_resource_v1alpha3_ResourcePool: IoK8sApiResourceV1alpha3ResourcePool = (
        Field(..., alias='io.k8s.api.resource.v1alpha3.ResourcePool')
    )
    io_k8s_api_resource_v1alpha3_ResourceSlice: (
        IoK8sApiResourceV1alpha3ResourceSlice
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceSlice')
    io_k8s_api_resource_v1alpha3_ResourceSliceList: (
        IoK8sApiResourceV1alpha3ResourceSliceList
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceSliceList')
    io_k8s_api_resource_v1alpha3_ResourceSliceSpec: (
        IoK8sApiResourceV1alpha3ResourceSliceSpec
    ) = Field(..., alias='io.k8s.api.resource.v1alpha3.ResourceSliceSpec')
    io_k8s_api_scheduling_v1_PriorityClass: IoK8sApiSchedulingV1PriorityClass = Field(
        ..., alias='io.k8s.api.scheduling.v1.PriorityClass'
    )
    io_k8s_api_scheduling_v1_PriorityClassList: (
        IoK8sApiSchedulingV1PriorityClassList
    ) = Field(..., alias='io.k8s.api.scheduling.v1.PriorityClassList')
    io_k8s_api_storage_v1_CSIDriver: IoK8sApiStorageV1CSIDriver = Field(
        ..., alias='io.k8s.api.storage.v1.CSIDriver'
    )
    io_k8s_api_storage_v1_CSIDriverList: IoK8sApiStorageV1CSIDriverList = Field(
        ..., alias='io.k8s.api.storage.v1.CSIDriverList'
    )
    io_k8s_api_storage_v1_CSIDriverSpec: IoK8sApiStorageV1CSIDriverSpec = Field(
        ..., alias='io.k8s.api.storage.v1.CSIDriverSpec'
    )
    io_k8s_api_storage_v1_CSINode: IoK8sApiStorageV1CSINode = Field(
        ..., alias='io.k8s.api.storage.v1.CSINode'
    )
    io_k8s_api_storage_v1_CSINodeDriver: IoK8sApiStorageV1CSINodeDriver = Field(
        ..., alias='io.k8s.api.storage.v1.CSINodeDriver'
    )
    io_k8s_api_storage_v1_CSINodeList: IoK8sApiStorageV1CSINodeList = Field(
        ..., alias='io.k8s.api.storage.v1.CSINodeList'
    )
    io_k8s_api_storage_v1_CSINodeSpec: IoK8sApiStorageV1CSINodeSpec = Field(
        ..., alias='io.k8s.api.storage.v1.CSINodeSpec'
    )
    io_k8s_api_storage_v1_CSIStorageCapacity: IoK8sApiStorageV1CSIStorageCapacity = (
        Field(..., alias='io.k8s.api.storage.v1.CSIStorageCapacity')
    )
    io_k8s_api_storage_v1_CSIStorageCapacityList: (
        IoK8sApiStorageV1CSIStorageCapacityList
    ) = Field(..., alias='io.k8s.api.storage.v1.CSIStorageCapacityList')
    io_k8s_api_storage_v1_StorageClass: IoK8sApiStorageV1StorageClass = Field(
        ..., alias='io.k8s.api.storage.v1.StorageClass'
    )
    io_k8s_api_storage_v1_StorageClassList: IoK8sApiStorageV1StorageClassList = Field(
        ..., alias='io.k8s.api.storage.v1.StorageClassList'
    )
    io_k8s_api_storage_v1_TokenRequest: IoK8sApiStorageV1TokenRequest = Field(
        ..., alias='io.k8s.api.storage.v1.TokenRequest'
    )
    io_k8s_api_storage_v1_VolumeAttachment: IoK8sApiStorageV1VolumeAttachment = Field(
        ..., alias='io.k8s.api.storage.v1.VolumeAttachment'
    )
    io_k8s_api_storage_v1_VolumeAttachmentList: (
        IoK8sApiStorageV1VolumeAttachmentList
    ) = Field(..., alias='io.k8s.api.storage.v1.VolumeAttachmentList')
    io_k8s_api_storage_v1_VolumeAttachmentSource: (
        IoK8sApiStorageV1VolumeAttachmentSource
    ) = Field(..., alias='io.k8s.api.storage.v1.VolumeAttachmentSource')
    io_k8s_api_storage_v1_VolumeAttachmentSpec: (
        IoK8sApiStorageV1VolumeAttachmentSpec
    ) = Field(..., alias='io.k8s.api.storage.v1.VolumeAttachmentSpec')
    io_k8s_api_storage_v1_VolumeAttachmentStatus: (
        IoK8sApiStorageV1VolumeAttachmentStatus
    ) = Field(..., alias='io.k8s.api.storage.v1.VolumeAttachmentStatus')
    io_k8s_api_storage_v1_VolumeError: IoK8sApiStorageV1VolumeError = Field(
        ..., alias='io.k8s.api.storage.v1.VolumeError'
    )
    io_k8s_api_storage_v1_VolumeNodeResources: IoK8sApiStorageV1VolumeNodeResources = (
        Field(..., alias='io.k8s.api.storage.v1.VolumeNodeResources')
    )
    io_k8s_api_storage_v1alpha1_VolumeAttributesClass: (
        IoK8sApiStorageV1alpha1VolumeAttributesClass
    ) = Field(..., alias='io.k8s.api.storage.v1alpha1.VolumeAttributesClass')
    io_k8s_api_storage_v1alpha1_VolumeAttributesClassList: (
        IoK8sApiStorageV1alpha1VolumeAttributesClassList
    ) = Field(..., alias='io.k8s.api.storage.v1alpha1.VolumeAttributesClassList')
    io_k8s_api_storage_v1beta1_VolumeAttributesClass: (
        IoK8sApiStorageV1beta1VolumeAttributesClass
    ) = Field(..., alias='io.k8s.api.storage.v1beta1.VolumeAttributesClass')
    io_k8s_api_storage_v1beta1_VolumeAttributesClassList: (
        IoK8sApiStorageV1beta1VolumeAttributesClassList
    ) = Field(..., alias='io.k8s.api.storage.v1beta1.VolumeAttributesClassList')
    io_k8s_api_storagemigration_v1alpha1_GroupVersionResource: (
        IoK8sApiStoragemigrationV1alpha1GroupVersionResource
    ) = Field(..., alias='io.k8s.api.storagemigration.v1alpha1.GroupVersionResource')
    io_k8s_api_storagemigration_v1alpha1_MigrationCondition: (
        IoK8sApiStoragemigrationV1alpha1MigrationCondition
    ) = Field(..., alias='io.k8s.api.storagemigration.v1alpha1.MigrationCondition')
    io_k8s_api_storagemigration_v1alpha1_StorageVersionMigration: (
        IoK8sApiStoragemigrationV1alpha1StorageVersionMigration
    ) = Field(..., alias='io.k8s.api.storagemigration.v1alpha1.StorageVersionMigration')
    io_k8s_api_storagemigration_v1alpha1_StorageVersionMigrationList: (
        IoK8sApiStoragemigrationV1alpha1StorageVersionMigrationList
    ) = Field(
        ..., alias='io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationList'
    )
    io_k8s_api_storagemigration_v1alpha1_StorageVersionMigrationSpec: (
        IoK8sApiStoragemigrationV1alpha1StorageVersionMigrationSpec
    ) = Field(
        ..., alias='io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationSpec'
    )
    io_k8s_api_storagemigration_v1alpha1_StorageVersionMigrationStatus: (
        IoK8sApiStoragemigrationV1alpha1StorageVersionMigrationStatus
    ) = Field(
        ..., alias='io.k8s.api.storagemigration.v1alpha1.StorageVersionMigrationStatus'
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceColumnDefinition: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceColumnDefinition
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceConversion: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceConversion
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinition: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionCondition: IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionCondition = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionList: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionList
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNames: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionSpec: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionSpec
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionStatus: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionStatus
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionVersion: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionVersion
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceScale: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceScale
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceStatus: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresourceStatus
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresources: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceSubresources
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceValidation: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceValidation
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ExternalDocumentation: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1ExternalDocumentation
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSON: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSON
    ) = Field(
        ..., alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON'
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaProps: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaProps
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrArray: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrArray
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrBool: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrBool
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsOrStringArray: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1JSONSchemaPropsOrStringArray
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_SelectableField: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1SelectableField
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.SelectableField',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ServiceReference: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ValidationRule: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1ValidationRule
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookClientConfig: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig',
    )
    io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookConversion: (
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookConversion
    ) = Field(
        ...,
        alias='io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion',
    )
    io_k8s_apimachinery_pkg_api_resource_Quantity: (
        IoK8sApimachineryPkgApiResourceQuantity
    ) = Field(..., alias='io.k8s.apimachinery.pkg.api.resource.Quantity')
    io_k8s_apimachinery_pkg_apis_meta_v1_APIGroup: (
        IoK8sApimachineryPkgApisMetaV1APIGroup
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup')
    io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupList: (
        IoK8sApimachineryPkgApisMetaV1APIGroupList
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList')
    io_k8s_apimachinery_pkg_apis_meta_v1_APIResource: (
        IoK8sApimachineryPkgApisMetaV1APIResource
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.APIResource')
    io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceList: (
        IoK8sApimachineryPkgApisMetaV1APIResourceList
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList')
    io_k8s_apimachinery_pkg_apis_meta_v1_APIVersions: (
        IoK8sApimachineryPkgApisMetaV1APIVersions
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions')
    io_k8s_apimachinery_pkg_apis_meta_v1_Condition: (
        IoK8sApimachineryPkgApisMetaV1Condition
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.Condition')
    io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptions: (
        IoK8sApimachineryPkgApisMetaV1DeleteOptions
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions')
    io_k8s_apimachinery_pkg_apis_meta_v1_FieldSelectorRequirement: (
        IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement
    ) = Field(
        ..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement'
    )
    io_k8s_apimachinery_pkg_apis_meta_v1_FieldsV1: (
        IoK8sApimachineryPkgApisMetaV1FieldsV1
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1')
    io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscovery: (
        IoK8sApimachineryPkgApisMetaV1GroupVersionForDiscovery
    ) = Field(
        ..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery'
    )
    io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelector: (
        IoK8sApimachineryPkgApisMetaV1LabelSelector
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector')
    io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirement: (
        IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement
    ) = Field(
        ..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement'
    )
    io_k8s_apimachinery_pkg_apis_meta_v1_ListMeta: (
        IoK8sApimachineryPkgApisMetaV1ListMeta
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta')
    io_k8s_apimachinery_pkg_apis_meta_v1_ManagedFieldsEntry: (
        IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry')
    io_k8s_apimachinery_pkg_apis_meta_v1_MicroTime: (
        IoK8sApimachineryPkgApisMetaV1MicroTime
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime')
    io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMeta: (
        IoK8sApimachineryPkgApisMetaV1ObjectMeta
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta')
    io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReference: (
        IoK8sApimachineryPkgApisMetaV1OwnerReference
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference')
    io_k8s_apimachinery_pkg_apis_meta_v1_Patch: IoK8sApimachineryPkgApisMetaV1Patch = (
        Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.Patch')
    )
    io_k8s_apimachinery_pkg_apis_meta_v1_Preconditions: (
        IoK8sApimachineryPkgApisMetaV1Preconditions
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions')
    io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDR: (
        IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR
    ) = Field(
        ..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR'
    )
    io_k8s_apimachinery_pkg_apis_meta_v1_Status: (
        IoK8sApimachineryPkgApisMetaV1Status
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.Status')
    io_k8s_apimachinery_pkg_apis_meta_v1_StatusCause: (
        IoK8sApimachineryPkgApisMetaV1StatusCause
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause')
    io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetails: (
        IoK8sApimachineryPkgApisMetaV1StatusDetails
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails')
    io_k8s_apimachinery_pkg_apis_meta_v1_Time: IoK8sApimachineryPkgApisMetaV1Time = (
        Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.Time')
    )
    io_k8s_apimachinery_pkg_apis_meta_v1_WatchEvent: (
        IoK8sApimachineryPkgApisMetaV1WatchEvent
    ) = Field(..., alias='io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent')
    io_k8s_apimachinery_pkg_runtime_RawExtension: (
        IoK8sApimachineryPkgRuntimeRawExtension
    ) = Field(..., alias='io.k8s.apimachinery.pkg.runtime.RawExtension')
    io_k8s_apimachinery_pkg_util_intstr_IntOrString: (
        IoK8sApimachineryPkgUtilIntstrIntOrString
    ) = Field(..., alias='io.k8s.apimachinery.pkg.util.intstr.IntOrString')
    io_k8s_apimachinery_pkg_version_Info: IoK8sApimachineryPkgVersionInfo = Field(
        ..., alias='io.k8s.apimachinery.pkg.version.Info'
    )
    io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIService: (
        IoK8sKubeAggregatorPkgApisApiregistrationV1APIService
    ) = Field(
        ..., alias='io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService'
    )
    io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceCondition: (
        IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceCondition
    ) = Field(
        ...,
        alias='io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition',
    )
    io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceList: (
        IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceList
    ) = Field(
        ..., alias='io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList'
    )
    io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpec: (
        IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceSpec
    ) = Field(
        ..., alias='io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec'
    )
    io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatus: (
        IoK8sKubeAggregatorPkgApisApiregistrationV1APIServiceStatus
    ) = Field(
        ..., alias='io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus'
    )
    io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReference: (
        IoK8sKubeAggregatorPkgApisApiregistrationV1ServiceReference
    ) = Field(
        ..., alias='io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference'
    )


class Info(BaseModel):
    title: str
    version: str


class AllowWatchBookmarksHC2hJtJ(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class Schema1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Body2Y1dVQaQ(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    schema_: Schema1 = Field(..., alias='schema')


class Body78PwaGsr(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema1 = Field(..., alias='schema')


class CommandPy3eQybp(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class Container1GeXxFDC(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class ContainerQEJ3nR(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class ContainerI5dOmRiM(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class ContinueQfD61s0i(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class FieldManager7c6nTn1T(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class FieldManagerQy4HdaTW(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class FieldSelectorXIcQKXFG(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class Follow9OIXh2R(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class ForceTOGGb0Yi(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class GracePeriodSecondsK5HaBOS(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class InsecureSkipTLSVerifyBackendGM00jVbe(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class LabelSelector5Zw57w4C(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class Limit1NfNmdNH(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class LimitBytesZwd1RXuc(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class LogpathNoq7euwC(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str
    uniqueItems: bool


class NamespaceVgWSWtn3(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str
    uniqueItems: bool


class OrphanDependentsURB25kX5(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class PathQCf0eosM(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class PathOPbzgLUj(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class PathRFDtV0x9(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class PathZ6Ciiujn(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    type: str
    uniqueItems: bool


class Ports91KROJmm(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class PrettyTJGM1Ng(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class Previous1jxDPu3y(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class PropagationPolicy6jk3prlO(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class ResourceVersion5WAnf1kx(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class ResourceVersionMatchT8XhRHeC(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class SendInitialEventsRLXlEKK(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class SinceSecondsVE2NLdnP(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class Stderr26jJhFUR(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class StderrW1TNlWc(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class StdinPSzNhyUC(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class StdinSEFnN3IS(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class StdoutEZLRwV1(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class Stdout005YMKE6(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class TailLines2fRTNzbP(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class TimeoutSecondsYvYezaOC(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class TimestampsC17fW1w(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class TtyG7MlETL(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class TtyS0flW37O(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class WatchXNNPZGbK(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str
    uniqueItems: bool


class Parameters5(BaseModel):
    allowWatchBookmarks_HC2hJt_J: AllowWatchBookmarksHC2hJtJ = Field(
        ..., alias='allowWatchBookmarks-HC2hJt-J'
    )
    body_2Y1dVQaQ: Body2Y1dVQaQ = Field(..., alias='body-2Y1dVQaQ')
    body_78PwaGsr: Body78PwaGsr = Field(..., alias='body-78PwaGsr')
    command_Py3eQybp: CommandPy3eQybp = Field(..., alias='command-Py3eQybp')
    container_1GeXxFDC: Container1GeXxFDC = Field(..., alias='container-1GeXxFDC')
    container__Q_EJ3nR: ContainerQEJ3nR = Field(..., alias='container-_Q-EJ3nR')
    container_i5dOmRiM: ContainerI5dOmRiM = Field(..., alias='container-i5dOmRiM')
    continue_QfD61s0i: ContinueQfD61s0i = Field(..., alias='continue-QfD61s0i')
    fieldManager_7c6nTn1T: FieldManager7c6nTn1T = Field(
        ..., alias='fieldManager-7c6nTn1T'
    )
    fieldManager_Qy4HdaTW: FieldManagerQy4HdaTW = Field(
        ..., alias='fieldManager-Qy4HdaTW'
    )
    fieldSelector_xIcQKXFG: FieldSelectorXIcQKXFG = Field(
        ..., alias='fieldSelector-xIcQKXFG'
    )
    follow_9OIXh_2R: Follow9OIXh2R = Field(..., alias='follow-9OIXh_2R')
    force_tOGGb0Yi: ForceTOGGb0Yi = Field(..., alias='force-tOGGb0Yi')
    gracePeriodSeconds__K5HaBOS: GracePeriodSecondsK5HaBOS = Field(
        ..., alias='gracePeriodSeconds--K5HaBOS'
    )
    insecureSkipTLSVerifyBackend_gM00jVbe: InsecureSkipTLSVerifyBackendGM00jVbe = Field(
        ..., alias='insecureSkipTLSVerifyBackend-gM00jVbe'
    )
    labelSelector_5Zw57w4C: LabelSelector5Zw57w4C = Field(
        ..., alias='labelSelector-5Zw57w4C'
    )
    limit_1NfNmdNH: Limit1NfNmdNH = Field(..., alias='limit-1NfNmdNH')
    limitBytes_zwd1RXuc: LimitBytesZwd1RXuc = Field(..., alias='limitBytes-zwd1RXuc')
    logpath_Noq7euwC: LogpathNoq7euwC = Field(..., alias='logpath-Noq7euwC')
    namespace_vgWSWtn3: NamespaceVgWSWtn3 = Field(..., alias='namespace-vgWSWtn3')
    orphanDependents_uRB25kX5: OrphanDependentsURB25kX5 = Field(
        ..., alias='orphanDependents-uRB25kX5'
    )
    path_QCf0eosM: PathQCf0eosM = Field(..., alias='path-QCf0eosM')
    path_oPbzgLUj: PathOPbzgLUj = Field(..., alias='path-oPbzgLUj')
    path_rFDtV0x9: PathRFDtV0x9 = Field(..., alias='path-rFDtV0x9')
    path_z6Ciiujn: PathZ6Ciiujn = Field(..., alias='path-z6Ciiujn')
    ports_91KROJmm: Ports91KROJmm = Field(..., alias='ports-91KROJmm')
    pretty_tJGM1_ng: PrettyTJGM1Ng = Field(..., alias='pretty-tJGM1-ng')
    previous_1jxDPu3y: Previous1jxDPu3y = Field(..., alias='previous-1jxDPu3y')
    propagationPolicy_6jk3prlO: PropagationPolicy6jk3prlO = Field(
        ..., alias='propagationPolicy-6jk3prlO'
    )
    resourceVersion_5WAnf1kx: ResourceVersion5WAnf1kx = Field(
        ..., alias='resourceVersion-5WAnf1kx'
    )
    resourceVersionMatch_t8XhRHeC: ResourceVersionMatchT8XhRHeC = Field(
        ..., alias='resourceVersionMatch-t8XhRHeC'
    )
    sendInitialEvents_rLXlEK_k: SendInitialEventsRLXlEKK = Field(
        ..., alias='sendInitialEvents-rLXlEK_k'
    )
    sinceSeconds_vE2NLdnP: SinceSecondsVE2NLdnP = Field(
        ..., alias='sinceSeconds-vE2NLdnP'
    )
    stderr_26jJhFUR: Stderr26jJhFUR = Field(..., alias='stderr-26jJhFUR')
    stderr_W_1TNlWc: StderrW1TNlWc = Field(..., alias='stderr-W_1TNlWc')
    stdin_PSzNhyUC: StdinPSzNhyUC = Field(..., alias='stdin-PSzNhyUC')
    stdin_sEFnN3IS: StdinSEFnN3IS = Field(..., alias='stdin-sEFnN3IS')
    stdout__EZLRwV1: StdoutEZLRwV1 = Field(..., alias='stdout--EZLRwV1')
    stdout_005YMKE6: Stdout005YMKE6 = Field(..., alias='stdout-005YMKE6')
    tailLines_2fRTNzbP: TailLines2fRTNzbP = Field(..., alias='tailLines-2fRTNzbP')
    timeoutSeconds_yvYezaOC: TimeoutSecondsYvYezaOC = Field(
        ..., alias='timeoutSeconds-yvYezaOC'
    )
    timestamps_c17fW1w_: TimestampsC17fW1w = Field(..., alias='timestamps-c17fW1w_')
    tty_g7MlET_l: TtyG7MlETL = Field(..., alias='tty-g7MlET_l')
    tty_s0flW37O: TtyS0flW37O = Field(..., alias='tty-s0flW37O')
    watch_XNNPZGbK: WatchXNNPZGbK = Field(..., alias='watch-XNNPZGbK')


class Schema3(BaseModel):
    type: str


class Field200(BaseModel):
    description: str
    schema_: Schema3 = Field(..., alias='schema')


class Field401(BaseModel):
    description: str


class Responses(BaseModel):
    field_200: Field200 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get(BaseModel):
    description: str
    operationId: str
    produces: List[str]
    responses: Responses
    schemes: List[str]
    tags: List[str]


class FieldWellKnownOpenidConfiguration(BaseModel):
    get: Get


class Schema4(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field2001(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses1(BaseModel):
    field_200: Field2001 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get1(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses1
    schemes: List[str]
    tags: List[str]


class FieldApi(BaseModel):
    get: Get1


class Field2002(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses2(BaseModel):
    field_200: Field2002 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get2(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses2
    schemes: List[str]
    tags: List[str]


class FieldApiV1(BaseModel):
    get: Get2


class Field2003(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses3(BaseModel):
    field_200: Field2003 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class XKubernetesGroupVersionKind(BaseModel):
    group: str
    kind: str
    version: str


class Get3(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses3
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1Componentstatuses(BaseModel):
    get: Get3
    parameters: List[Parameter]


class Field2004(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses4(BaseModel):
    field_200: Field2004 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get4(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses4
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter1(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class FieldApiV1ComponentstatusesName(BaseModel):
    get: Get4
    parameters: List[Parameter1]


class Field2005(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses5(BaseModel):
    field_200: Field2005 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get5(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses5
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter2(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1Configmaps(BaseModel):
    get: Get5
    parameters: List[Parameter2]


class Field2006(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses6(BaseModel):
    field_200: Field2006 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get6(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses6
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Endpoints(BaseModel):
    get: Get6
    parameters: List[Parameter2]


class Field2007(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses7(BaseModel):
    field_200: Field2007 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get7(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses7
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Events(BaseModel):
    get: Get7
    parameters: List[Parameter2]


class Field2008(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses8(BaseModel):
    field_200: Field2008 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get8(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses8
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Limitranges(BaseModel):
    get: Get8
    parameters: List[Parameter2]


class Field2009(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses9(BaseModel):
    field_200: Field2009 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get9(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter2]
    produces: List[str]
    responses: Responses9
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter8(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20010(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field201(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field202(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses10(BaseModel):
    field_200: Field20010 = Field(..., alias='200')
    field_201: Field201 = Field(..., alias='201')
    field_202: Field202 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter8]
    produces: List[str]
    responses: Responses10
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Namespaces(BaseModel):
    get: Get9
    parameters: List[Parameter2]
    post: Post


class Parameter9(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter10(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema4 = Field(..., alias='schema')


class Field20011(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2011(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2021(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses11(BaseModel):
    field_200: Field20011 = Field(..., alias='200')
    field_201: Field2011 = Field(..., alias='201')
    field_202: Field2021 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post1(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter10]
    produces: List[str]
    responses: Responses11
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceBindings(BaseModel):
    parameters: List[Parameter9]
    post: Post1


class Parameter11(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20012(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses12(BaseModel):
    field_200: Field20012 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter11]
    produces: List[str]
    responses: Responses12
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter12(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20013(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses13(BaseModel):
    field_200: Field20013 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get10(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter12]
    produces: List[str]
    responses: Responses13
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter14(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20014(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2012(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2022(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses14(BaseModel):
    field_200: Field20014 = Field(..., alias='200')
    field_201: Field2012 = Field(..., alias='201')
    field_202: Field2022 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post2(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter14]
    produces: List[str]
    responses: Responses14
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceConfigmaps(BaseModel):
    delete: Delete
    get: Get10
    parameters: List[Parameter12]
    post: Post2


class Parameter15(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20015(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2023(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses15(BaseModel):
    field_200: Field20015 = Field(..., alias='200')
    field_202: Field2023 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete1(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter15]
    produces: List[str]
    responses: Responses15
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20016(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses16(BaseModel):
    field_200: Field20016 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get11(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses16
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter16(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter17(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20017(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2013(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses17(BaseModel):
    field_200: Field20017 = Field(..., alias='200')
    field_201: Field2013 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter17]
    produces: List[str]
    responses: Responses17
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter18(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20018(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2014(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses18(BaseModel):
    field_200: Field20018 = Field(..., alias='200')
    field_201: Field2014 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter18]
    produces: List[str]
    responses: Responses18
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceConfigmapsName(BaseModel):
    delete: Delete1
    get: Get11
    parameters: List[Parameter16]
    patch: Patch
    put: Put


class Parameter19(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20019(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses19(BaseModel):
    field_200: Field20019 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete2(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter19]
    produces: List[str]
    responses: Responses19
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter20(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20020(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses20(BaseModel):
    field_200: Field20020 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get12(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter20]
    produces: List[str]
    responses: Responses20
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter22(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20021(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2015(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2024(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses21(BaseModel):
    field_200: Field20021 = Field(..., alias='200')
    field_201: Field2015 = Field(..., alias='201')
    field_202: Field2024 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post3(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter22]
    produces: List[str]
    responses: Responses21
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceEndpoints(BaseModel):
    delete: Delete2
    get: Get12
    parameters: List[Parameter20]
    post: Post3


class Parameter23(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20022(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2025(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses22(BaseModel):
    field_200: Field20022 = Field(..., alias='200')
    field_202: Field2025 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete3(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter23]
    produces: List[str]
    responses: Responses22
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20023(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses23(BaseModel):
    field_200: Field20023 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get13(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses23
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter24(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter25(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20024(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2016(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses24(BaseModel):
    field_200: Field20024 = Field(..., alias='200')
    field_201: Field2016 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch1(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter25]
    produces: List[str]
    responses: Responses24
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter26(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20025(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2017(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses25(BaseModel):
    field_200: Field20025 = Field(..., alias='200')
    field_201: Field2017 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put1(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter26]
    produces: List[str]
    responses: Responses25
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceEndpointsName(BaseModel):
    delete: Delete3
    get: Get13
    parameters: List[Parameter24]
    patch: Patch1
    put: Put1


class Parameter27(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20026(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses26(BaseModel):
    field_200: Field20026 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete4(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter27]
    produces: List[str]
    responses: Responses26
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter28(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20027(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses27(BaseModel):
    field_200: Field20027 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get14(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter28]
    produces: List[str]
    responses: Responses27
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter30(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20028(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2018(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2026(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses28(BaseModel):
    field_200: Field20028 = Field(..., alias='200')
    field_201: Field2018 = Field(..., alias='201')
    field_202: Field2026 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post4(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter30]
    produces: List[str]
    responses: Responses28
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceEvents(BaseModel):
    delete: Delete4
    get: Get14
    parameters: List[Parameter28]
    post: Post4


class Parameter31(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20029(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2027(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses29(BaseModel):
    field_200: Field20029 = Field(..., alias='200')
    field_202: Field2027 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete5(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter31]
    produces: List[str]
    responses: Responses29
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20030(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses30(BaseModel):
    field_200: Field20030 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get15(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses30
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter32(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter33(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20031(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2019(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses31(BaseModel):
    field_200: Field20031 = Field(..., alias='200')
    field_201: Field2019 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch2(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter33]
    produces: List[str]
    responses: Responses31
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter34(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20032(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20110(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses32(BaseModel):
    field_200: Field20032 = Field(..., alias='200')
    field_201: Field20110 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put2(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter34]
    produces: List[str]
    responses: Responses32
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceEventsName(BaseModel):
    delete: Delete5
    get: Get15
    parameters: List[Parameter32]
    patch: Patch2
    put: Put2


class Parameter35(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20033(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses33(BaseModel):
    field_200: Field20033 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete6(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter35]
    produces: List[str]
    responses: Responses33
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter36(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20034(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses34(BaseModel):
    field_200: Field20034 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get16(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter36]
    produces: List[str]
    responses: Responses34
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter38(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20035(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20111(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2028(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses35(BaseModel):
    field_200: Field20035 = Field(..., alias='200')
    field_201: Field20111 = Field(..., alias='201')
    field_202: Field2028 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post5(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter38]
    produces: List[str]
    responses: Responses35
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceLimitranges(BaseModel):
    delete: Delete6
    get: Get16
    parameters: List[Parameter36]
    post: Post5


class Parameter39(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20036(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field2029(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses36(BaseModel):
    field_200: Field20036 = Field(..., alias='200')
    field_202: Field2029 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete7(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter39]
    produces: List[str]
    responses: Responses36
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20037(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses37(BaseModel):
    field_200: Field20037 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get17(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses37
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter40(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter41(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20038(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20112(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses38(BaseModel):
    field_200: Field20038 = Field(..., alias='200')
    field_201: Field20112 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch3(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter41]
    produces: List[str]
    responses: Responses38
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter42(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20039(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20113(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses39(BaseModel):
    field_200: Field20039 = Field(..., alias='200')
    field_201: Field20113 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put3(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter42]
    produces: List[str]
    responses: Responses39
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceLimitrangesName(BaseModel):
    delete: Delete7
    get: Get17
    parameters: List[Parameter40]
    patch: Patch3
    put: Put3


class Parameter43(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20040(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses40(BaseModel):
    field_200: Field20040 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete8(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter43]
    produces: List[str]
    responses: Responses40
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter44(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20041(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses41(BaseModel):
    field_200: Field20041 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get18(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter44]
    produces: List[str]
    responses: Responses41
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter46(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20042(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20114(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20210(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses42(BaseModel):
    field_200: Field20042 = Field(..., alias='200')
    field_201: Field20114 = Field(..., alias='201')
    field_202: Field20210 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post6(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter46]
    produces: List[str]
    responses: Responses42
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePersistentvolumeclaims(BaseModel):
    delete: Delete8
    get: Get18
    parameters: List[Parameter44]
    post: Post6


class Parameter47(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20043(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20211(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses43(BaseModel):
    field_200: Field20043 = Field(..., alias='200')
    field_202: Field20211 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete9(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter47]
    produces: List[str]
    responses: Responses43
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20044(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses44(BaseModel):
    field_200: Field20044 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get19(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses44
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter48(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter49(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20045(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20115(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses45(BaseModel):
    field_200: Field20045 = Field(..., alias='200')
    field_201: Field20115 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch4(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter49]
    produces: List[str]
    responses: Responses45
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter50(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20046(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20116(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses46(BaseModel):
    field_200: Field20046 = Field(..., alias='200')
    field_201: Field20116 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put4(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter50]
    produces: List[str]
    responses: Responses46
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePersistentvolumeclaimsName(BaseModel):
    delete: Delete9
    get: Get19
    parameters: List[Parameter48]
    patch: Patch4
    put: Put4


class Field20047(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses47(BaseModel):
    field_200: Field20047 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get20(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses47
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter51(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter52(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20048(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20117(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses48(BaseModel):
    field_200: Field20048 = Field(..., alias='200')
    field_201: Field20117 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch5(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter52]
    produces: List[str]
    responses: Responses48
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter53(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20049(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20118(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses49(BaseModel):
    field_200: Field20049 = Field(..., alias='200')
    field_201: Field20118 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put5(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter53]
    produces: List[str]
    responses: Responses49
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePersistentvolumeclaimsNameStatus(BaseModel):
    get: Get20
    parameters: List[Parameter51]
    patch: Patch5
    put: Put5


class Parameter54(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20050(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses50(BaseModel):
    field_200: Field20050 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete10(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter54]
    produces: List[str]
    responses: Responses50
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter55(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20051(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses51(BaseModel):
    field_200: Field20051 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get21(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter55]
    produces: List[str]
    responses: Responses51
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter57(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20052(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20119(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20212(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses52(BaseModel):
    field_200: Field20052 = Field(..., alias='200')
    field_201: Field20119 = Field(..., alias='201')
    field_202: Field20212 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post7(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter57]
    produces: List[str]
    responses: Responses52
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePods(BaseModel):
    delete: Delete10
    get: Get21
    parameters: List[Parameter55]
    post: Post7


class Parameter58(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20053(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20213(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses53(BaseModel):
    field_200: Field20053 = Field(..., alias='200')
    field_202: Field20213 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete11(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter58]
    produces: List[str]
    responses: Responses53
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20054(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses54(BaseModel):
    field_200: Field20054 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get22(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses54
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter59(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter60(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20055(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20120(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses55(BaseModel):
    field_200: Field20055 = Field(..., alias='200')
    field_201: Field20120 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch6(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter60]
    produces: List[str]
    responses: Responses55
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter61(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema4] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20056(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Field20121(BaseModel):
    description: str
    schema_: Schema4 = Field(..., alias='schema')


class Responses56(BaseModel):
    field_200: Field20056 = Field(..., alias='200')
    field_201: Field20121 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put6(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter61]
    produces: List[str]
    responses: Responses56
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsName(BaseModel):
    delete: Delete11
    get: Get22
    parameters: List[Parameter59]
    patch: Patch6
    put: Put6


class Schema111(BaseModel):
    type: str


class Field20057(BaseModel):
    description: str
    schema_: Schema111 = Field(..., alias='schema')


class Responses57(BaseModel):
    field_200: Field20057 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get23(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses57
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter62(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20058(BaseModel):
    description: str
    schema_: Schema111 = Field(..., alias='schema')


class Responses58(BaseModel):
    field_200: Field20058 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Post8(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses58
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNameAttach(BaseModel):
    get: Get23
    parameters: List[Parameter62]
    post: Post8


class Parameter63(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')
    required: Optional[bool] = None


class Schema113(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Parameter64(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema113 = Field(..., alias='schema')


class Field20059(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Field20122(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Field20214(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Responses59(BaseModel):
    field_200: Field20059 = Field(..., alias='200')
    field_201: Field20122 = Field(..., alias='201')
    field_202: Field20214 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post9(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter64]
    produces: List[str]
    responses: Responses59
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNameBinding(BaseModel):
    parameters: List[Parameter63]
    post: Post9


class Field20060(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Responses60(BaseModel):
    field_200: Field20060 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get24(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses60
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter65(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter66(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20061(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Field20123(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Responses61(BaseModel):
    field_200: Field20061 = Field(..., alias='200')
    field_201: Field20123 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch7(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter66]
    produces: List[str]
    responses: Responses61
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter67(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema113] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20062(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Field20124(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Responses62(BaseModel):
    field_200: Field20062 = Field(..., alias='200')
    field_201: Field20124 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put7(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter67]
    produces: List[str]
    responses: Responses62
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNameEphemeralcontainers(BaseModel):
    get: Get24
    parameters: List[Parameter65]
    patch: Patch7
    put: Put7


class Parameter68(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')
    required: Optional[bool] = None


class Parameter69(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema113 = Field(..., alias='schema')


class Field20063(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Field20125(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Field20215(BaseModel):
    description: str
    schema_: Schema113 = Field(..., alias='schema')


class Responses63(BaseModel):
    field_200: Field20063 = Field(..., alias='200')
    field_201: Field20125 = Field(..., alias='201')
    field_202: Field20215 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post10(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter69]
    produces: List[str]
    responses: Responses63
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNameEviction(BaseModel):
    parameters: List[Parameter68]
    post: Post10


class Schema127(BaseModel):
    type: str


class Field20064(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses64(BaseModel):
    field_200: Field20064 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get25(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses64
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter70(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20065(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses65(BaseModel):
    field_200: Field20065 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Post11(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses65
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNameExec(BaseModel):
    get: Get25
    parameters: List[Parameter70]
    post: Post11


class Field20066(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses66(BaseModel):
    field_200: Field20066 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get26(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses66
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNameLog(BaseModel):
    get: Get26
    parameters: List[Parameter70]


class Field20067(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses67(BaseModel):
    field_200: Field20067 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get27(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses67
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter72(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20068(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses68(BaseModel):
    field_200: Field20068 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Post12(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses68
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNamePortforward(BaseModel):
    get: Get27
    parameters: List[Parameter72]
    post: Post12


class Field20069(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses69(BaseModel):
    field_200: Field20069 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete12(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses69
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20070(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses70(BaseModel):
    field_200: Field20070 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get28(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses70
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20071(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses71(BaseModel):
    field_200: Field20071 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Head(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses71
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20072(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses72(BaseModel):
    field_200: Field20072 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Options3(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses72
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20073(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses73(BaseModel):
    field_200: Field20073 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Patch8(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses73
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20074(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses74(BaseModel):
    field_200: Field20074 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Post13(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses74
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20075(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses75(BaseModel):
    field_200: Field20075 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Put8(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses75
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNameProxy(BaseModel):
    delete: Delete12
    get: Get28
    head: Head
    options: Options3
    parameters: List[Parameter72]
    patch: Patch8
    post: Post13
    put: Put8


class Field20076(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses76(BaseModel):
    field_200: Field20076 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete13(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses76
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20077(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses77(BaseModel):
    field_200: Field20077 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get29(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses77
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20078(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses78(BaseModel):
    field_200: Field20078 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Head1(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses78
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20079(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses79(BaseModel):
    field_200: Field20079 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Options4(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses79
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20080(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses80(BaseModel):
    field_200: Field20080 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Patch9(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses80
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20081(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses81(BaseModel):
    field_200: Field20081 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Post14(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses81
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20082(BaseModel):
    description: str
    schema_: Schema127 = Field(..., alias='schema')


class Responses82(BaseModel):
    field_200: Field20082 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Put9(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses82
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNameProxyPath(BaseModel):
    delete: Delete13
    get: Get29
    head: Head1
    options: Options4
    parameters: List[Parameter72]
    patch: Patch9
    post: Post14
    put: Put9


class Schema146(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20083(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses83(BaseModel):
    field_200: Field20083 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get30(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses83
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter76(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20084(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20126(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses84(BaseModel):
    field_200: Field20084 = Field(..., alias='200')
    field_201: Field20126 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch10(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter76]
    produces: List[str]
    responses: Responses84
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter77(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20085(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20127(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses85(BaseModel):
    field_200: Field20085 = Field(..., alias='200')
    field_201: Field20127 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put10(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter77]
    produces: List[str]
    responses: Responses85
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodsNameStatus(BaseModel):
    get: Get30
    parameters: List[Parameter72]
    patch: Patch10
    put: Put10


class Parameter78(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20086(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses86(BaseModel):
    field_200: Field20086 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete14(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter78]
    produces: List[str]
    responses: Responses86
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter79(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20087(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses87(BaseModel):
    field_200: Field20087 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get31(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter79]
    produces: List[str]
    responses: Responses87
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter81(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20088(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20128(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20216(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses88(BaseModel):
    field_200: Field20088 = Field(..., alias='200')
    field_201: Field20128 = Field(..., alias='201')
    field_202: Field20216 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post15(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter81]
    produces: List[str]
    responses: Responses88
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodtemplates(BaseModel):
    delete: Delete14
    get: Get31
    parameters: List[Parameter79]
    post: Post15


class Parameter82(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20089(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20217(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses89(BaseModel):
    field_200: Field20089 = Field(..., alias='200')
    field_202: Field20217 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete15(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter82]
    produces: List[str]
    responses: Responses89
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20090(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses90(BaseModel):
    field_200: Field20090 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get32(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses90
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter83(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter84(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20091(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20129(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses91(BaseModel):
    field_200: Field20091 = Field(..., alias='200')
    field_201: Field20129 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch11(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter84]
    produces: List[str]
    responses: Responses91
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter85(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20092(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20130(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses92(BaseModel):
    field_200: Field20092 = Field(..., alias='200')
    field_201: Field20130 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put11(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter85]
    produces: List[str]
    responses: Responses92
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespacePodtemplatesName(BaseModel):
    delete: Delete15
    get: Get32
    parameters: List[Parameter83]
    patch: Patch11
    put: Put11


class Parameter86(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20093(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses93(BaseModel):
    field_200: Field20093 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete16(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter86]
    produces: List[str]
    responses: Responses93
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter87(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field20094(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses94(BaseModel):
    field_200: Field20094 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get33(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter87]
    produces: List[str]
    responses: Responses94
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter89(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20095(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20131(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20218(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses95(BaseModel):
    field_200: Field20095 = Field(..., alias='200')
    field_201: Field20131 = Field(..., alias='201')
    field_202: Field20218 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post16(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter89]
    produces: List[str]
    responses: Responses95
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceReplicationcontrollers(BaseModel):
    delete: Delete16
    get: Get33
    parameters: List[Parameter87]
    post: Post16


class Parameter90(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20096(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20219(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses96(BaseModel):
    field_200: Field20096 = Field(..., alias='200')
    field_202: Field20219 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete17(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter90]
    produces: List[str]
    responses: Responses96
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field20097(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses97(BaseModel):
    field_200: Field20097 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get34(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses97
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter91(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter92(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field20098(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20132(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses98(BaseModel):
    field_200: Field20098 = Field(..., alias='200')
    field_201: Field20132 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch12(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter92]
    produces: List[str]
    responses: Responses98
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter93(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field20099(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20133(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses99(BaseModel):
    field_200: Field20099 = Field(..., alias='200')
    field_201: Field20133 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put12(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter93]
    produces: List[str]
    responses: Responses99
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceReplicationcontrollersName(BaseModel):
    delete: Delete17
    get: Get34
    parameters: List[Parameter91]
    patch: Patch12
    put: Put12


class Field200100(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses100(BaseModel):
    field_200: Field200100 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get35(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses100
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter94(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter95(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200101(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20134(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses101(BaseModel):
    field_200: Field200101 = Field(..., alias='200')
    field_201: Field20134 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch13(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter95]
    produces: List[str]
    responses: Responses101
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter96(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200102(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20135(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses102(BaseModel):
    field_200: Field200102 = Field(..., alias='200')
    field_201: Field20135 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put13(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter96]
    produces: List[str]
    responses: Responses102
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceReplicationcontrollersNameScale(BaseModel):
    get: Get35
    parameters: List[Parameter94]
    patch: Patch13
    put: Put13


class Field200103(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses103(BaseModel):
    field_200: Field200103 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get36(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses103
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter97(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter98(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200104(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20136(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses104(BaseModel):
    field_200: Field200104 = Field(..., alias='200')
    field_201: Field20136 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch14(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter98]
    produces: List[str]
    responses: Responses104
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter99(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200105(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20137(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses105(BaseModel):
    field_200: Field200105 = Field(..., alias='200')
    field_201: Field20137 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put14(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter99]
    produces: List[str]
    responses: Responses105
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceReplicationcontrollersNameStatus(BaseModel):
    get: Get36
    parameters: List[Parameter97]
    patch: Patch14
    put: Put14


class Parameter100(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200106(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses106(BaseModel):
    field_200: Field200106 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete18(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter100]
    produces: List[str]
    responses: Responses106
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter101(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200107(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses107(BaseModel):
    field_200: Field200107 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get37(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter101]
    produces: List[str]
    responses: Responses107
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter103(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200108(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20138(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20220(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses108(BaseModel):
    field_200: Field200108 = Field(..., alias='200')
    field_201: Field20138 = Field(..., alias='201')
    field_202: Field20220 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post17(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter103]
    produces: List[str]
    responses: Responses108
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceResourcequotas(BaseModel):
    delete: Delete18
    get: Get37
    parameters: List[Parameter101]
    post: Post17


class Parameter104(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200109(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20221(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses109(BaseModel):
    field_200: Field200109 = Field(..., alias='200')
    field_202: Field20221 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete19(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter104]
    produces: List[str]
    responses: Responses109
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200110(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses110(BaseModel):
    field_200: Field200110 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get38(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses110
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter105(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter106(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200111(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20139(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses111(BaseModel):
    field_200: Field200111 = Field(..., alias='200')
    field_201: Field20139 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch15(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter106]
    produces: List[str]
    responses: Responses111
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter107(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200112(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20140(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses112(BaseModel):
    field_200: Field200112 = Field(..., alias='200')
    field_201: Field20140 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put15(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter107]
    produces: List[str]
    responses: Responses112
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceResourcequotasName(BaseModel):
    delete: Delete19
    get: Get38
    parameters: List[Parameter105]
    patch: Patch15
    put: Put15


class Field200113(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses113(BaseModel):
    field_200: Field200113 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get39(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses113
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter108(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter109(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200114(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20141(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses114(BaseModel):
    field_200: Field200114 = Field(..., alias='200')
    field_201: Field20141 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch16(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter109]
    produces: List[str]
    responses: Responses114
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter110(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200115(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20142(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses115(BaseModel):
    field_200: Field200115 = Field(..., alias='200')
    field_201: Field20142 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put16(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter110]
    produces: List[str]
    responses: Responses115
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceResourcequotasNameStatus(BaseModel):
    get: Get39
    parameters: List[Parameter108]
    patch: Patch16
    put: Put16


class Parameter111(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200116(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses116(BaseModel):
    field_200: Field200116 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete20(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter111]
    produces: List[str]
    responses: Responses116
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter112(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200117(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses117(BaseModel):
    field_200: Field200117 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get40(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter112]
    produces: List[str]
    responses: Responses117
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter114(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200118(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20143(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20222(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses118(BaseModel):
    field_200: Field200118 = Field(..., alias='200')
    field_201: Field20143 = Field(..., alias='201')
    field_202: Field20222 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post18(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter114]
    produces: List[str]
    responses: Responses118
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceSecrets(BaseModel):
    delete: Delete20
    get: Get40
    parameters: List[Parameter112]
    post: Post18


class Parameter115(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200119(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20223(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses119(BaseModel):
    field_200: Field200119 = Field(..., alias='200')
    field_202: Field20223 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete21(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter115]
    produces: List[str]
    responses: Responses119
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200120(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses120(BaseModel):
    field_200: Field200120 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get41(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses120
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter116(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter117(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200121(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20144(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses121(BaseModel):
    field_200: Field200121 = Field(..., alias='200')
    field_201: Field20144 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch17(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter117]
    produces: List[str]
    responses: Responses121
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter118(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200122(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20145(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses122(BaseModel):
    field_200: Field200122 = Field(..., alias='200')
    field_201: Field20145 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put17(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter118]
    produces: List[str]
    responses: Responses122
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceSecretsName(BaseModel):
    delete: Delete21
    get: Get41
    parameters: List[Parameter116]
    patch: Patch17
    put: Put17


class Parameter119(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200123(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses123(BaseModel):
    field_200: Field200123 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete22(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter119]
    produces: List[str]
    responses: Responses123
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter120(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200124(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses124(BaseModel):
    field_200: Field200124 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get42(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter120]
    produces: List[str]
    responses: Responses124
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter122(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200125(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20146(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20224(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses125(BaseModel):
    field_200: Field200125 = Field(..., alias='200')
    field_201: Field20146 = Field(..., alias='201')
    field_202: Field20224 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post19(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter122]
    produces: List[str]
    responses: Responses125
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceServiceaccounts(BaseModel):
    delete: Delete22
    get: Get42
    parameters: List[Parameter120]
    post: Post19


class Parameter123(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200126(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20225(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses126(BaseModel):
    field_200: Field200126 = Field(..., alias='200')
    field_202: Field20225 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete23(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter123]
    produces: List[str]
    responses: Responses126
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200127(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses127(BaseModel):
    field_200: Field200127 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get43(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses127
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter124(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter125(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200128(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20147(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses128(BaseModel):
    field_200: Field200128 = Field(..., alias='200')
    field_201: Field20147 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch18(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter125]
    produces: List[str]
    responses: Responses128
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter126(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200129(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20148(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses129(BaseModel):
    field_200: Field200129 = Field(..., alias='200')
    field_201: Field20148 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put18(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter126]
    produces: List[str]
    responses: Responses129
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceServiceaccountsName(BaseModel):
    delete: Delete23
    get: Get43
    parameters: List[Parameter124]
    patch: Patch18
    put: Put18


class Parameter127(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')
    required: Optional[bool] = None


class Parameter128(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema146 = Field(..., alias='schema')


class Field200130(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20149(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20226(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses130(BaseModel):
    field_200: Field200130 = Field(..., alias='200')
    field_201: Field20149 = Field(..., alias='201')
    field_202: Field20226 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post20(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter128]
    produces: List[str]
    responses: Responses130
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceServiceaccountsNameToken(BaseModel):
    parameters: List[Parameter127]
    post: Post20


class Parameter129(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200131(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses131(BaseModel):
    field_200: Field200131 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete24(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter129]
    produces: List[str]
    responses: Responses131
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter130(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200132(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses132(BaseModel):
    field_200: Field200132 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get44(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter130]
    produces: List[str]
    responses: Responses132
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter132(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200133(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20150(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20227(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses133(BaseModel):
    field_200: Field200133 = Field(..., alias='200')
    field_201: Field20150 = Field(..., alias='201')
    field_202: Field20227 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post21(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter132]
    produces: List[str]
    responses: Responses133
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceServices(BaseModel):
    delete: Delete24
    get: Get44
    parameters: List[Parameter130]
    post: Post21


class Parameter133(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200134(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20228(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses134(BaseModel):
    field_200: Field200134 = Field(..., alias='200')
    field_202: Field20228 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete25(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter133]
    produces: List[str]
    responses: Responses134
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200135(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses135(BaseModel):
    field_200: Field200135 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get45(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses135
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter134(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter135(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200136(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20151(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses136(BaseModel):
    field_200: Field200136 = Field(..., alias='200')
    field_201: Field20151 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch19(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter135]
    produces: List[str]
    responses: Responses136
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter136(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema146] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200137(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Field20152(BaseModel):
    description: str
    schema_: Schema146 = Field(..., alias='schema')


class Responses137(BaseModel):
    field_200: Field200137 = Field(..., alias='200')
    field_201: Field20152 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put19(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter136]
    produces: List[str]
    responses: Responses137
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceServicesName(BaseModel):
    delete: Delete25
    get: Get45
    parameters: List[Parameter134]
    patch: Patch19
    put: Put19


class Schema258(BaseModel):
    type: str


class Field200138(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses138(BaseModel):
    field_200: Field200138 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete26(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses138
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200139(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses139(BaseModel):
    field_200: Field200139 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get46(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses139
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200140(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses140(BaseModel):
    field_200: Field200140 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Head2(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses140
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200141(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses141(BaseModel):
    field_200: Field200141 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Options5(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses141
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter137(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200142(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses142(BaseModel):
    field_200: Field200142 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Patch20(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses142
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200143(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses143(BaseModel):
    field_200: Field200143 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Post22(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses143
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200144(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses144(BaseModel):
    field_200: Field200144 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Put20(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses144
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceServicesNameProxy(BaseModel):
    delete: Delete26
    get: Get46
    head: Head2
    options: Options5
    parameters: List[Parameter137]
    patch: Patch20
    post: Post22
    put: Put20


class Field200145(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses145(BaseModel):
    field_200: Field200145 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete27(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses145
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200146(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses146(BaseModel):
    field_200: Field200146 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get47(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses146
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200147(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses147(BaseModel):
    field_200: Field200147 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Head3(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses147
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200148(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses148(BaseModel):
    field_200: Field200148 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Options6(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses148
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200149(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses149(BaseModel):
    field_200: Field200149 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Patch21(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses149
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200150(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses150(BaseModel):
    field_200: Field200150 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Post23(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses150
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200151(BaseModel):
    description: str
    schema_: Schema258 = Field(..., alias='schema')


class Responses151(BaseModel):
    field_200: Field200151 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Put21(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses151
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceServicesNameProxyPath(BaseModel):
    delete: Delete27
    get: Get47
    head: Head3
    options: Options6
    parameters: List[Parameter137]
    patch: Patch21
    post: Post23
    put: Put21


class Schema272(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200152(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses152(BaseModel):
    field_200: Field200152 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get48(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses152
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter140(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200153(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20153(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses153(BaseModel):
    field_200: Field200153 = Field(..., alias='200')
    field_201: Field20153 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch22(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter140]
    produces: List[str]
    responses: Responses153
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter141(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema272] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200154(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20154(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses154(BaseModel):
    field_200: Field200154 = Field(..., alias='200')
    field_201: Field20154 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put22(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter141]
    produces: List[str]
    responses: Responses154
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNamespaceServicesNameStatus(BaseModel):
    get: Get48
    parameters: List[Parameter137]
    patch: Patch22
    put: Put22


class Parameter142(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200155(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20229(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses155(BaseModel):
    field_200: Field200155 = Field(..., alias='200')
    field_202: Field20229 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete28(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter142]
    produces: List[str]
    responses: Responses155
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200156(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses156(BaseModel):
    field_200: Field200156 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get49(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses156
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter143(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter144(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200157(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20155(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses157(BaseModel):
    field_200: Field200157 = Field(..., alias='200')
    field_201: Field20155 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch23(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter144]
    produces: List[str]
    responses: Responses157
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter145(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema272] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200158(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20156(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses158(BaseModel):
    field_200: Field200158 = Field(..., alias='200')
    field_201: Field20156 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put23(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter145]
    produces: List[str]
    responses: Responses158
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesName(BaseModel):
    delete: Delete28
    get: Get49
    parameters: List[Parameter143]
    patch: Patch23
    put: Put23


class Parameter146(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')
    required: Optional[bool] = None


class Parameter147(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema272 = Field(..., alias='schema')


class Field200159(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20157(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses159(BaseModel):
    field_200: Field200159 = Field(..., alias='200')
    field_201: Field20157 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put24(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter147]
    produces: List[str]
    responses: Responses159
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNameFinalize(BaseModel):
    parameters: List[Parameter146]
    put: Put24


class Field200160(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses160(BaseModel):
    field_200: Field200160 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get50(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses160
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter148(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter149(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200161(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20158(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses161(BaseModel):
    field_200: Field200161 = Field(..., alias='200')
    field_201: Field20158 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch24(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter149]
    produces: List[str]
    responses: Responses161
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter150(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema272] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200162(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20159(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses162(BaseModel):
    field_200: Field200162 = Field(..., alias='200')
    field_201: Field20159 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put25(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter150]
    produces: List[str]
    responses: Responses162
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NamespacesNameStatus(BaseModel):
    get: Get50
    parameters: List[Parameter148]
    patch: Patch24
    put: Put25


class Parameter151(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200163(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses163(BaseModel):
    field_200: Field200163 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete29(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter151]
    produces: List[str]
    responses: Responses163
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter152(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200164(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses164(BaseModel):
    field_200: Field200164 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get51(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter152]
    produces: List[str]
    responses: Responses164
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter154(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema272] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200165(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20160(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20230(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses165(BaseModel):
    field_200: Field200165 = Field(..., alias='200')
    field_201: Field20160 = Field(..., alias='201')
    field_202: Field20230 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post24(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter154]
    produces: List[str]
    responses: Responses165
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Nodes(BaseModel):
    delete: Delete29
    get: Get51
    parameters: List[Parameter152]
    post: Post24


class Parameter155(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200166(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20231(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses166(BaseModel):
    field_200: Field200166 = Field(..., alias='200')
    field_202: Field20231 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete30(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter155]
    produces: List[str]
    responses: Responses166
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200167(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses167(BaseModel):
    field_200: Field200167 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get52(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses167
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter156(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter157(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200168(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20161(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses168(BaseModel):
    field_200: Field200168 = Field(..., alias='200')
    field_201: Field20161 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch25(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter157]
    produces: List[str]
    responses: Responses168
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter158(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema272] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200169(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Field20162(BaseModel):
    description: str
    schema_: Schema272 = Field(..., alias='schema')


class Responses169(BaseModel):
    field_200: Field200169 = Field(..., alias='200')
    field_201: Field20162 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put26(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter158]
    produces: List[str]
    responses: Responses169
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NodesName(BaseModel):
    delete: Delete30
    get: Get52
    parameters: List[Parameter156]
    patch: Patch25
    put: Put26


class Schema309(BaseModel):
    type: str


class Field200170(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses170(BaseModel):
    field_200: Field200170 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete31(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses170
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200171(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses171(BaseModel):
    field_200: Field200171 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get53(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses171
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200172(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses172(BaseModel):
    field_200: Field200172 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Head4(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses172
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200173(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses173(BaseModel):
    field_200: Field200173 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Options7(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses173
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter159(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200174(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses174(BaseModel):
    field_200: Field200174 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Patch26(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses174
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200175(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses175(BaseModel):
    field_200: Field200175 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Post25(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses175
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200176(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses176(BaseModel):
    field_200: Field200176 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Put27(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses176
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NodesNameProxy(BaseModel):
    delete: Delete31
    get: Get53
    head: Head4
    options: Options7
    parameters: List[Parameter159]
    patch: Patch26
    post: Post25
    put: Put27


class Field200177(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses177(BaseModel):
    field_200: Field200177 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete32(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses177
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200178(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses178(BaseModel):
    field_200: Field200178 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get54(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses178
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200179(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses179(BaseModel):
    field_200: Field200179 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Head5(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses179
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200180(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses180(BaseModel):
    field_200: Field200180 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Options8(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses180
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200181(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses181(BaseModel):
    field_200: Field200181 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Patch27(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses181
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200182(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses182(BaseModel):
    field_200: Field200182 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Post26(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses182
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200183(BaseModel):
    description: str
    schema_: Schema309 = Field(..., alias='schema')


class Responses183(BaseModel):
    field_200: Field200183 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Put28(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses183
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NodesNameProxyPath(BaseModel):
    delete: Delete32
    get: Get54
    head: Head5
    options: Options8
    parameters: List[Parameter159]
    patch: Patch27
    post: Post26
    put: Put28


class Schema323(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200184(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses184(BaseModel):
    field_200: Field200184 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get55(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses184
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter162(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200185(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20163(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses185(BaseModel):
    field_200: Field200185 = Field(..., alias='200')
    field_201: Field20163 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch28(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter162]
    produces: List[str]
    responses: Responses185
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter163(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200186(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20164(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses186(BaseModel):
    field_200: Field200186 = Field(..., alias='200')
    field_201: Field20164 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put29(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter163]
    produces: List[str]
    responses: Responses186
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1NodesNameStatus(BaseModel):
    get: Get55
    parameters: List[Parameter159]
    patch: Patch28
    put: Put29


class Field200187(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses187(BaseModel):
    field_200: Field200187 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get56(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses187
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter164(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1Persistentvolumeclaims(BaseModel):
    get: Get56
    parameters: List[Parameter164]


class Parameter165(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200188(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses188(BaseModel):
    field_200: Field200188 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete33(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter165]
    produces: List[str]
    responses: Responses188
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter166(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200189(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses189(BaseModel):
    field_200: Field200189 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get57(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter166]
    produces: List[str]
    responses: Responses189
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter168(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200190(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20165(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20232(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses190(BaseModel):
    field_200: Field200190 = Field(..., alias='200')
    field_201: Field20165 = Field(..., alias='201')
    field_202: Field20232 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post27(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter168]
    produces: List[str]
    responses: Responses190
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Persistentvolumes(BaseModel):
    delete: Delete33
    get: Get57
    parameters: List[Parameter166]
    post: Post27


class Parameter169(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200191(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20233(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses191(BaseModel):
    field_200: Field200191 = Field(..., alias='200')
    field_202: Field20233 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete34(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter169]
    produces: List[str]
    responses: Responses191
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200192(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses192(BaseModel):
    field_200: Field200192 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get58(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses192
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter170(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter171(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200193(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20166(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses193(BaseModel):
    field_200: Field200193 = Field(..., alias='200')
    field_201: Field20166 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch29(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter171]
    produces: List[str]
    responses: Responses193
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter172(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200194(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20167(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses194(BaseModel):
    field_200: Field200194 = Field(..., alias='200')
    field_201: Field20167 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put30(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter172]
    produces: List[str]
    responses: Responses194
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1PersistentvolumesName(BaseModel):
    delete: Delete34
    get: Get58
    parameters: List[Parameter170]
    patch: Patch29
    put: Put30


class Field200195(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses195(BaseModel):
    field_200: Field200195 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get59(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses195
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter173(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter174(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200196(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20168(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses196(BaseModel):
    field_200: Field200196 = Field(..., alias='200')
    field_201: Field20168 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch30(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter174]
    produces: List[str]
    responses: Responses196
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter175(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200197(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20169(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses197(BaseModel):
    field_200: Field200197 = Field(..., alias='200')
    field_201: Field20169 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put31(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter175]
    produces: List[str]
    responses: Responses197
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1PersistentvolumesNameStatus(BaseModel):
    get: Get59
    parameters: List[Parameter173]
    patch: Patch30
    put: Put31


class Field200198(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses198(BaseModel):
    field_200: Field200198 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get60(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses198
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter176(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1Pods(BaseModel):
    get: Get60
    parameters: List[Parameter176]


class Field200199(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses199(BaseModel):
    field_200: Field200199 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get61(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses199
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Podtemplates(BaseModel):
    get: Get61
    parameters: List[Parameter176]


class Field200200(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses200(BaseModel):
    field_200: Field200200 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get62(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses200
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Replicationcontrollers(BaseModel):
    get: Get62
    parameters: List[Parameter176]


class Field200201(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses201(BaseModel):
    field_200: Field200201 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get63(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses201
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Resourcequotas(BaseModel):
    get: Get63
    parameters: List[Parameter176]


class Field200202(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses202(BaseModel):
    field_200: Field200202 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get64(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses202
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Secrets(BaseModel):
    get: Get64
    parameters: List[Parameter176]


class Field200203(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses203(BaseModel):
    field_200: Field200203 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get65(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses203
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Serviceaccounts(BaseModel):
    get: Get65
    parameters: List[Parameter176]


class Field200204(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses204(BaseModel):
    field_200: Field200204 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get66(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses204
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1Services(BaseModel):
    get: Get66
    parameters: List[Parameter176]


class Field200205(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses205(BaseModel):
    field_200: Field200205 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get67(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses205
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchConfigmaps(BaseModel):
    get: Get67
    parameters: List[Parameter176]


class Field200206(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses206(BaseModel):
    field_200: Field200206 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get68(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses206
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchEndpoints(BaseModel):
    get: Get68
    parameters: List[Parameter176]


class Field200207(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses207(BaseModel):
    field_200: Field200207 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get69(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses207
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchEvents(BaseModel):
    get: Get69
    parameters: List[Parameter176]


class Field200208(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses208(BaseModel):
    field_200: Field200208 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get70(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses208
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchLimitranges(BaseModel):
    get: Get70
    parameters: List[Parameter176]


class Field200209(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses209(BaseModel):
    field_200: Field200209 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get71(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses209
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchNamespaces(BaseModel):
    get: Get71
    parameters: List[Parameter176]


class Field200210(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses210(BaseModel):
    field_200: Field200210 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get72(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses210
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchNamespacesNamespaceConfigmaps(BaseModel):
    get: Get72
    parameters: List[Parameter176]


class Field200211(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses211(BaseModel):
    field_200: Field200211 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get73(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses211
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter189(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespaceConfigmapsName(BaseModel):
    get: Get73
    parameters: List[Parameter189]


class Field200212(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses212(BaseModel):
    field_200: Field200212 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get74(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses212
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter190(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespaceEndpoints(BaseModel):
    get: Get74
    parameters: List[Parameter190]


class Field200213(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses213(BaseModel):
    field_200: Field200213 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get75(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses213
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter191(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespaceEndpointsName(BaseModel):
    get: Get75
    parameters: List[Parameter191]


class Field200214(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses214(BaseModel):
    field_200: Field200214 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get76(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses214
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter192(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespaceEvents(BaseModel):
    get: Get76
    parameters: List[Parameter192]


class Field200215(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses215(BaseModel):
    field_200: Field200215 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get77(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses215
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter193(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespaceEventsName(BaseModel):
    get: Get77
    parameters: List[Parameter193]


class Field200216(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses216(BaseModel):
    field_200: Field200216 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get78(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses216
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter194(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespaceLimitranges(BaseModel):
    get: Get78
    parameters: List[Parameter194]


class Field200217(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses217(BaseModel):
    field_200: Field200217 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get79(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses217
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter195(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespaceLimitrangesName(BaseModel):
    get: Get79
    parameters: List[Parameter195]


class Field200218(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses218(BaseModel):
    field_200: Field200218 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get80(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses218
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter196(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespacePersistentvolumeclaims(BaseModel):
    get: Get80
    parameters: List[Parameter196]


class Field200219(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses219(BaseModel):
    field_200: Field200219 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get81(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses219
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter197(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespacePersistentvolumeclaimsName(BaseModel):
    get: Get81
    parameters: List[Parameter197]


class Field200220(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses220(BaseModel):
    field_200: Field200220 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get82(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses220
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter198(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespacePods(BaseModel):
    get: Get82
    parameters: List[Parameter198]


class Field200221(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses221(BaseModel):
    field_200: Field200221 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get83(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses221
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter199(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespacePodsName(BaseModel):
    get: Get83
    parameters: List[Parameter199]


class Field200222(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses222(BaseModel):
    field_200: Field200222 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get84(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses222
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter200(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespacePodtemplates(BaseModel):
    get: Get84
    parameters: List[Parameter200]


class Field200223(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses223(BaseModel):
    field_200: Field200223 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get85(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses223
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter201(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespacePodtemplatesName(BaseModel):
    get: Get85
    parameters: List[Parameter201]


class Field200224(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses224(BaseModel):
    field_200: Field200224 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get86(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses224
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter202(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespaceReplicationcontrollers(BaseModel):
    get: Get86
    parameters: List[Parameter202]


class Field200225(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses225(BaseModel):
    field_200: Field200225 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get87(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses225
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter203(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespaceReplicationcontrollersName(BaseModel):
    get: Get87
    parameters: List[Parameter203]


class Field200226(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses226(BaseModel):
    field_200: Field200226 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get88(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses226
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter204(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespaceResourcequotas(BaseModel):
    get: Get88
    parameters: List[Parameter204]


class Field200227(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses227(BaseModel):
    field_200: Field200227 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get89(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses227
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter205(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespaceResourcequotasName(BaseModel):
    get: Get89
    parameters: List[Parameter205]


class Field200228(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses228(BaseModel):
    field_200: Field200228 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get90(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses228
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter206(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespaceSecrets(BaseModel):
    get: Get90
    parameters: List[Parameter206]


class Field200229(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses229(BaseModel):
    field_200: Field200229 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get91(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses229
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter207(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespaceSecretsName(BaseModel):
    get: Get91
    parameters: List[Parameter207]


class Field200230(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses230(BaseModel):
    field_200: Field200230 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get92(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses230
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter208(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespaceServiceaccounts(BaseModel):
    get: Get92
    parameters: List[Parameter208]


class Field200231(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses231(BaseModel):
    field_200: Field200231 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get93(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses231
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter209(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespaceServiceaccountsName(BaseModel):
    get: Get93
    parameters: List[Parameter209]


class Field200232(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses232(BaseModel):
    field_200: Field200232 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get94(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses232
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter210(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNamespacesNamespaceServices(BaseModel):
    get: Get94
    parameters: List[Parameter210]


class Field200233(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses233(BaseModel):
    field_200: Field200233 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get95(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses233
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter211(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNamespacesNamespaceServicesName(BaseModel):
    get: Get95
    parameters: List[Parameter211]


class Field200234(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses234(BaseModel):
    field_200: Field200234 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get96(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses234
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchNamespacesName(BaseModel):
    get: Get96
    parameters: List[Parameter211]


class Field200235(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses235(BaseModel):
    field_200: Field200235 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get97(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses235
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter213(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchNodes(BaseModel):
    get: Get97
    parameters: List[Parameter213]


class Field200236(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses236(BaseModel):
    field_200: Field200236 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get98(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses236
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter214(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchNodesName(BaseModel):
    get: Get98
    parameters: List[Parameter214]


class Field200237(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses237(BaseModel):
    field_200: Field200237 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get99(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses237
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter215(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchPersistentvolumeclaims(BaseModel):
    get: Get99
    parameters: List[Parameter215]


class Field200238(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses238(BaseModel):
    field_200: Field200238 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get100(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses238
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchPersistentvolumes(BaseModel):
    get: Get100
    parameters: List[Parameter215]


class Field200239(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses239(BaseModel):
    field_200: Field200239 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get101(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses239
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter217(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApiV1WatchPersistentvolumesName(BaseModel):
    get: Get101
    parameters: List[Parameter217]


class Field200240(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses240(BaseModel):
    field_200: Field200240 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get102(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses240
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter218(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApiV1WatchPods(BaseModel):
    get: Get102
    parameters: List[Parameter218]


class Field200241(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses241(BaseModel):
    field_200: Field200241 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get103(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses241
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchPodtemplates(BaseModel):
    get: Get103
    parameters: List[Parameter218]


class Field200242(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses242(BaseModel):
    field_200: Field200242 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get104(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses242
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchReplicationcontrollers(BaseModel):
    get: Get104
    parameters: List[Parameter218]


class Field200243(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses243(BaseModel):
    field_200: Field200243 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get105(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses243
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchResourcequotas(BaseModel):
    get: Get105
    parameters: List[Parameter218]


class Field200244(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses244(BaseModel):
    field_200: Field200244 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get106(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses244
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchSecrets(BaseModel):
    get: Get106
    parameters: List[Parameter218]


class Field200245(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses245(BaseModel):
    field_200: Field200245 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get107(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses245
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchServiceaccounts(BaseModel):
    get: Get107
    parameters: List[Parameter218]


class Field200246(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses246(BaseModel):
    field_200: Field200246 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get108(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses246
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApiV1WatchServices(BaseModel):
    get: Get108
    parameters: List[Parameter218]


class Field200247(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses247(BaseModel):
    field_200: Field200247 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get109(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses247
    schemes: List[str]
    tags: List[str]


class FieldApis(BaseModel):
    get: Get109


class Field200248(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses248(BaseModel):
    field_200: Field200248 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get110(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses248
    schemes: List[str]
    tags: List[str]


class FieldApisAdmissionregistrationK8sIo(BaseModel):
    get: Get110


class Field200249(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses249(BaseModel):
    field_200: Field200249 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get111(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses249
    schemes: List[str]
    tags: List[str]


class FieldApisAdmissionregistrationK8sIoV1(BaseModel):
    get: Get111


class Parameter225(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200250(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses250(BaseModel):
    field_200: Field200250 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete35(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter225]
    produces: List[str]
    responses: Responses250
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter226(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200251(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses251(BaseModel):
    field_200: Field200251 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get112(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter226]
    produces: List[str]
    responses: Responses251
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter228(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200252(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20170(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20234(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses252(BaseModel):
    field_200: Field200252 = Field(..., alias='200')
    field_201: Field20170 = Field(..., alias='201')
    field_202: Field20234 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post28(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter228]
    produces: List[str]
    responses: Responses252
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1Mutatingwebhookconfigurations(BaseModel):
    delete: Delete35
    get: Get112
    parameters: List[Parameter226]
    post: Post28


class Parameter229(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200253(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20235(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses253(BaseModel):
    field_200: Field200253 = Field(..., alias='200')
    field_202: Field20235 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete36(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter229]
    produces: List[str]
    responses: Responses253
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200254(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses254(BaseModel):
    field_200: Field200254 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get113(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses254
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter230(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter231(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200255(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20171(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses255(BaseModel):
    field_200: Field200255 = Field(..., alias='200')
    field_201: Field20171 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch31(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter231]
    produces: List[str]
    responses: Responses255
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter232(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200256(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20172(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses256(BaseModel):
    field_200: Field200256 = Field(..., alias='200')
    field_201: Field20172 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put32(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter232]
    produces: List[str]
    responses: Responses256
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1MutatingwebhookconfigurationsName(BaseModel):
    delete: Delete36
    get: Get113
    parameters: List[Parameter230]
    patch: Patch31
    put: Put32


class Parameter233(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200257(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses257(BaseModel):
    field_200: Field200257 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete37(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter233]
    produces: List[str]
    responses: Responses257
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter234(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200258(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses258(BaseModel):
    field_200: Field200258 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get114(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter234]
    produces: List[str]
    responses: Responses258
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter236(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200259(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20173(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20236(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses259(BaseModel):
    field_200: Field200259 = Field(..., alias='200')
    field_201: Field20173 = Field(..., alias='201')
    field_202: Field20236 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post29(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter236]
    produces: List[str]
    responses: Responses259
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1Validatingadmissionpolicies(BaseModel):
    delete: Delete37
    get: Get114
    parameters: List[Parameter234]
    post: Post29


class Parameter237(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200260(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20237(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses260(BaseModel):
    field_200: Field200260 = Field(..., alias='200')
    field_202: Field20237 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete38(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter237]
    produces: List[str]
    responses: Responses260
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200261(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses261(BaseModel):
    field_200: Field200261 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get115(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses261
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter238(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter239(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200262(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20174(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses262(BaseModel):
    field_200: Field200262 = Field(..., alias='200')
    field_201: Field20174 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch32(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter239]
    produces: List[str]
    responses: Responses262
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter240(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200263(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20175(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses263(BaseModel):
    field_200: Field200263 = Field(..., alias='200')
    field_201: Field20175 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put33(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter240]
    produces: List[str]
    responses: Responses263
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1ValidatingadmissionpoliciesName(BaseModel):
    delete: Delete38
    get: Get115
    parameters: List[Parameter238]
    patch: Patch32
    put: Put33


class Field200264(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses264(BaseModel):
    field_200: Field200264 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get116(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses264
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter241(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter242(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200265(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20176(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses265(BaseModel):
    field_200: Field200265 = Field(..., alias='200')
    field_201: Field20176 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch33(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter242]
    produces: List[str]
    responses: Responses265
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter243(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200266(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20177(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses266(BaseModel):
    field_200: Field200266 = Field(..., alias='200')
    field_201: Field20177 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put34(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter243]
    produces: List[str]
    responses: Responses266
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1ValidatingadmissionpoliciesNameStatus(
    BaseModel
):
    get: Get116
    parameters: List[Parameter241]
    patch: Patch33
    put: Put34


class Parameter244(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200267(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses267(BaseModel):
    field_200: Field200267 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete39(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter244]
    produces: List[str]
    responses: Responses267
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter245(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200268(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses268(BaseModel):
    field_200: Field200268 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get117(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter245]
    produces: List[str]
    responses: Responses268
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter247(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200269(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20178(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20238(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses269(BaseModel):
    field_200: Field200269 = Field(..., alias='200')
    field_201: Field20178 = Field(..., alias='201')
    field_202: Field20238 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post30(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter247]
    produces: List[str]
    responses: Responses269
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1Validatingadmissionpolicybindings(BaseModel):
    delete: Delete39
    get: Get117
    parameters: List[Parameter245]
    post: Post30


class Parameter248(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200270(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20239(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses270(BaseModel):
    field_200: Field200270 = Field(..., alias='200')
    field_202: Field20239 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete40(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter248]
    produces: List[str]
    responses: Responses270
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200271(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses271(BaseModel):
    field_200: Field200271 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get118(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses271
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter249(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter250(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200272(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20179(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses272(BaseModel):
    field_200: Field200272 = Field(..., alias='200')
    field_201: Field20179 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch34(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter250]
    produces: List[str]
    responses: Responses272
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter251(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200273(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20180(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses273(BaseModel):
    field_200: Field200273 = Field(..., alias='200')
    field_201: Field20180 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put35(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter251]
    produces: List[str]
    responses: Responses273
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1ValidatingadmissionpolicybindingsName(
    BaseModel
):
    delete: Delete40
    get: Get118
    parameters: List[Parameter249]
    patch: Patch34
    put: Put35


class Parameter252(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200274(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses274(BaseModel):
    field_200: Field200274 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete41(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter252]
    produces: List[str]
    responses: Responses274
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter253(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200275(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses275(BaseModel):
    field_200: Field200275 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get119(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter253]
    produces: List[str]
    responses: Responses275
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter255(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200276(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20181(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20240(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses276(BaseModel):
    field_200: Field200276 = Field(..., alias='200')
    field_201: Field20181 = Field(..., alias='201')
    field_202: Field20240 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post31(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter255]
    produces: List[str]
    responses: Responses276
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1Validatingwebhookconfigurations(BaseModel):
    delete: Delete41
    get: Get119
    parameters: List[Parameter253]
    post: Post31


class Parameter256(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200277(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20241(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses277(BaseModel):
    field_200: Field200277 = Field(..., alias='200')
    field_202: Field20241 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete42(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter256]
    produces: List[str]
    responses: Responses277
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200278(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses278(BaseModel):
    field_200: Field200278 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get120(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses278
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter257(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter258(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200279(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20182(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses279(BaseModel):
    field_200: Field200279 = Field(..., alias='200')
    field_201: Field20182 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch35(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter258]
    produces: List[str]
    responses: Responses279
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter259(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200280(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20183(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses280(BaseModel):
    field_200: Field200280 = Field(..., alias='200')
    field_201: Field20183 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put36(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter259]
    produces: List[str]
    responses: Responses280
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1ValidatingwebhookconfigurationsName(
    BaseModel
):
    delete: Delete42
    get: Get120
    parameters: List[Parameter257]
    patch: Patch35
    put: Put36


class Field200281(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses281(BaseModel):
    field_200: Field200281 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get121(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses281
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter260(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAdmissionregistrationK8sIoV1WatchMutatingwebhookconfigurations(
    BaseModel
):
    get: Get121
    parameters: List[Parameter260]


class Field200282(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses282(BaseModel):
    field_200: Field200282 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get122(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses282
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter261(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAdmissionregistrationK8sIoV1WatchMutatingwebhookconfigurationsName(
    BaseModel
):
    get: Get122
    parameters: List[Parameter261]


class Field200283(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses283(BaseModel):
    field_200: Field200283 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get123(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses283
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter262(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAdmissionregistrationK8sIoV1WatchValidatingadmissionpolicies(BaseModel):
    get: Get123
    parameters: List[Parameter262]


class Field200284(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses284(BaseModel):
    field_200: Field200284 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get124(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses284
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter263(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAdmissionregistrationK8sIoV1WatchValidatingadmissionpoliciesName(
    BaseModel
):
    get: Get124
    parameters: List[Parameter263]


class Field200285(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses285(BaseModel):
    field_200: Field200285 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get125(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses285
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter264(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAdmissionregistrationK8sIoV1WatchValidatingadmissionpolicybindings(
    BaseModel
):
    get: Get125
    parameters: List[Parameter264]


class Field200286(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses286(BaseModel):
    field_200: Field200286 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get126(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses286
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter265(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAdmissionregistrationK8sIoV1WatchValidatingadmissionpolicybindingsName(
    BaseModel
):
    get: Get126
    parameters: List[Parameter265]


class Field200287(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses287(BaseModel):
    field_200: Field200287 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get127(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses287
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter266(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAdmissionregistrationK8sIoV1WatchValidatingwebhookconfigurations(
    BaseModel
):
    get: Get127
    parameters: List[Parameter266]


class Field200288(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses288(BaseModel):
    field_200: Field200288 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get128(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses288
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter267(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAdmissionregistrationK8sIoV1WatchValidatingwebhookconfigurationsName(
    BaseModel
):
    get: Get128
    parameters: List[Parameter267]


class Field200289(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses289(BaseModel):
    field_200: Field200289 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get129(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses289
    schemes: List[str]
    tags: List[str]


class FieldApisAdmissionregistrationK8sIoV1alpha1(BaseModel):
    get: Get129


class Parameter268(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200290(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses290(BaseModel):
    field_200: Field200290 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete43(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter268]
    produces: List[str]
    responses: Responses290
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter269(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200291(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses291(BaseModel):
    field_200: Field200291 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get130(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter269]
    produces: List[str]
    responses: Responses291
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter271(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200292(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20184(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20242(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses292(BaseModel):
    field_200: Field200292 = Field(..., alias='200')
    field_201: Field20184 = Field(..., alias='201')
    field_202: Field20242 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post32(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter271]
    produces: List[str]
    responses: Responses292
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1alpha1Validatingadmissionpolicies(BaseModel):
    delete: Delete43
    get: Get130
    parameters: List[Parameter269]
    post: Post32


class Parameter272(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200293(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20243(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses293(BaseModel):
    field_200: Field200293 = Field(..., alias='200')
    field_202: Field20243 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete44(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter272]
    produces: List[str]
    responses: Responses293
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200294(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses294(BaseModel):
    field_200: Field200294 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get131(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses294
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter273(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter274(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200295(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20185(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses295(BaseModel):
    field_200: Field200295 = Field(..., alias='200')
    field_201: Field20185 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch36(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter274]
    produces: List[str]
    responses: Responses295
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter275(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200296(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20186(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses296(BaseModel):
    field_200: Field200296 = Field(..., alias='200')
    field_201: Field20186 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put37(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter275]
    produces: List[str]
    responses: Responses296
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1alpha1ValidatingadmissionpoliciesName(
    BaseModel
):
    delete: Delete44
    get: Get131
    parameters: List[Parameter273]
    patch: Patch36
    put: Put37


class Field200297(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses297(BaseModel):
    field_200: Field200297 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get132(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses297
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter276(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter277(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200298(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20187(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses298(BaseModel):
    field_200: Field200298 = Field(..., alias='200')
    field_201: Field20187 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch37(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter277]
    produces: List[str]
    responses: Responses298
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter278(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200299(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20188(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses299(BaseModel):
    field_200: Field200299 = Field(..., alias='200')
    field_201: Field20188 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put38(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter278]
    produces: List[str]
    responses: Responses299
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1alpha1ValidatingadmissionpoliciesNameStatus(
    BaseModel
):
    get: Get132
    parameters: List[Parameter276]
    patch: Patch37
    put: Put38


class Parameter279(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200300(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses300(BaseModel):
    field_200: Field200300 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete45(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter279]
    produces: List[str]
    responses: Responses300
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter280(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200301(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses301(BaseModel):
    field_200: Field200301 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get133(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter280]
    produces: List[str]
    responses: Responses301
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter282(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200302(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20189(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20244(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses302(BaseModel):
    field_200: Field200302 = Field(..., alias='200')
    field_201: Field20189 = Field(..., alias='201')
    field_202: Field20244 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post33(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter282]
    produces: List[str]
    responses: Responses302
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1alpha1Validatingadmissionpolicybindings(
    BaseModel
):
    delete: Delete45
    get: Get133
    parameters: List[Parameter280]
    post: Post33


class Parameter283(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200303(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20245(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses303(BaseModel):
    field_200: Field200303 = Field(..., alias='200')
    field_202: Field20245 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete46(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter283]
    produces: List[str]
    responses: Responses303
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200304(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses304(BaseModel):
    field_200: Field200304 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get134(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses304
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter284(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter285(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200305(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20190(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses305(BaseModel):
    field_200: Field200305 = Field(..., alias='200')
    field_201: Field20190 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch38(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter285]
    produces: List[str]
    responses: Responses305
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter286(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200306(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20191(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses306(BaseModel):
    field_200: Field200306 = Field(..., alias='200')
    field_201: Field20191 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put39(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter286]
    produces: List[str]
    responses: Responses306
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1alpha1ValidatingadmissionpolicybindingsName(
    BaseModel
):
    delete: Delete46
    get: Get134
    parameters: List[Parameter284]
    patch: Patch38
    put: Put39


class Field200307(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses307(BaseModel):
    field_200: Field200307 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get135(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses307
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter287(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAdmissionregistrationK8sIoV1alpha1WatchValidatingadmissionpolicies(
    BaseModel
):
    get: Get135
    parameters: List[Parameter287]


class Field200308(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses308(BaseModel):
    field_200: Field200308 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get136(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses308
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter288(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAdmissionregistrationK8sIoV1alpha1WatchValidatingadmissionpoliciesName(
    BaseModel
):
    get: Get136
    parameters: List[Parameter288]


class Field200309(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses309(BaseModel):
    field_200: Field200309 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get137(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses309
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter289(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAdmissionregistrationK8sIoV1alpha1WatchValidatingadmissionpolicybindings(
    BaseModel
):
    get: Get137
    parameters: List[Parameter289]


class Field200310(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses310(BaseModel):
    field_200: Field200310 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get138(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses310
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter290(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAdmissionregistrationK8sIoV1alpha1WatchValidatingadmissionpolicybindingsName(
    BaseModel
):
    get: Get138
    parameters: List[Parameter290]


class Field200311(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses311(BaseModel):
    field_200: Field200311 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get139(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses311
    schemes: List[str]
    tags: List[str]


class FieldApisAdmissionregistrationK8sIoV1beta1(BaseModel):
    get: Get139


class Parameter291(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200312(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses312(BaseModel):
    field_200: Field200312 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete47(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter291]
    produces: List[str]
    responses: Responses312
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter292(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200313(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses313(BaseModel):
    field_200: Field200313 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get140(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter292]
    produces: List[str]
    responses: Responses313
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter294(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200314(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20192(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20246(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses314(BaseModel):
    field_200: Field200314 = Field(..., alias='200')
    field_201: Field20192 = Field(..., alias='201')
    field_202: Field20246 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post34(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter294]
    produces: List[str]
    responses: Responses314
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1beta1Validatingadmissionpolicies(BaseModel):
    delete: Delete47
    get: Get140
    parameters: List[Parameter292]
    post: Post34


class Parameter295(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200315(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20247(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses315(BaseModel):
    field_200: Field200315 = Field(..., alias='200')
    field_202: Field20247 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete48(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter295]
    produces: List[str]
    responses: Responses315
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200316(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses316(BaseModel):
    field_200: Field200316 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get141(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses316
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter296(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter297(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200317(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20193(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses317(BaseModel):
    field_200: Field200317 = Field(..., alias='200')
    field_201: Field20193 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch39(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter297]
    produces: List[str]
    responses: Responses317
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter298(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200318(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20194(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses318(BaseModel):
    field_200: Field200318 = Field(..., alias='200')
    field_201: Field20194 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put40(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter298]
    produces: List[str]
    responses: Responses318
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1beta1ValidatingadmissionpoliciesName(
    BaseModel
):
    delete: Delete48
    get: Get141
    parameters: List[Parameter296]
    patch: Patch39
    put: Put40


class Field200319(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses319(BaseModel):
    field_200: Field200319 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get142(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses319
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter299(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter300(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200320(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20195(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses320(BaseModel):
    field_200: Field200320 = Field(..., alias='200')
    field_201: Field20195 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch40(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter300]
    produces: List[str]
    responses: Responses320
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter301(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200321(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20196(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses321(BaseModel):
    field_200: Field200321 = Field(..., alias='200')
    field_201: Field20196 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put41(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter301]
    produces: List[str]
    responses: Responses321
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1beta1ValidatingadmissionpoliciesNameStatus(
    BaseModel
):
    get: Get142
    parameters: List[Parameter299]
    patch: Patch40
    put: Put41


class Parameter302(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200322(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses322(BaseModel):
    field_200: Field200322 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete49(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter302]
    produces: List[str]
    responses: Responses322
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter303(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200323(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses323(BaseModel):
    field_200: Field200323 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get143(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter303]
    produces: List[str]
    responses: Responses323
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter305(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200324(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20197(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20248(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses324(BaseModel):
    field_200: Field200324 = Field(..., alias='200')
    field_201: Field20197 = Field(..., alias='201')
    field_202: Field20248 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post35(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter305]
    produces: List[str]
    responses: Responses324
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1beta1Validatingadmissionpolicybindings(
    BaseModel
):
    delete: Delete49
    get: Get143
    parameters: List[Parameter303]
    post: Post35


class Parameter306(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200325(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20249(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses325(BaseModel):
    field_200: Field200325 = Field(..., alias='200')
    field_202: Field20249 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete50(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter306]
    produces: List[str]
    responses: Responses325
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200326(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses326(BaseModel):
    field_200: Field200326 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get144(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses326
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter307(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter308(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200327(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20198(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses327(BaseModel):
    field_200: Field200327 = Field(..., alias='200')
    field_201: Field20198 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch41(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter308]
    produces: List[str]
    responses: Responses327
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter309(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200328(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20199(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses328(BaseModel):
    field_200: Field200328 = Field(..., alias='200')
    field_201: Field20199 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put42(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter309]
    produces: List[str]
    responses: Responses328
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAdmissionregistrationK8sIoV1beta1ValidatingadmissionpolicybindingsName(
    BaseModel
):
    delete: Delete50
    get: Get144
    parameters: List[Parameter307]
    patch: Patch41
    put: Put42


class Field200329(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses329(BaseModel):
    field_200: Field200329 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get145(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses329
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter310(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAdmissionregistrationK8sIoV1beta1WatchValidatingadmissionpolicies(
    BaseModel
):
    get: Get145
    parameters: List[Parameter310]


class Field200330(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses330(BaseModel):
    field_200: Field200330 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get146(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses330
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter311(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAdmissionregistrationK8sIoV1beta1WatchValidatingadmissionpoliciesName(
    BaseModel
):
    get: Get146
    parameters: List[Parameter311]


class Field200331(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses331(BaseModel):
    field_200: Field200331 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get147(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses331
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter312(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAdmissionregistrationK8sIoV1beta1WatchValidatingadmissionpolicybindings(
    BaseModel
):
    get: Get147
    parameters: List[Parameter312]


class Field200332(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses332(BaseModel):
    field_200: Field200332 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get148(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses332
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter313(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAdmissionregistrationK8sIoV1beta1WatchValidatingadmissionpolicybindingsName(
    BaseModel
):
    get: Get148
    parameters: List[Parameter313]


class Field200333(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses333(BaseModel):
    field_200: Field200333 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get149(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses333
    schemes: List[str]
    tags: List[str]


class FieldApisApiextensionsK8sIo(BaseModel):
    get: Get149


class Field200334(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses334(BaseModel):
    field_200: Field200334 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get150(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses334
    schemes: List[str]
    tags: List[str]


class FieldApisApiextensionsK8sIoV1(BaseModel):
    get: Get150


class Parameter314(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200335(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses335(BaseModel):
    field_200: Field200335 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete51(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter314]
    produces: List[str]
    responses: Responses335
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter315(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200336(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses336(BaseModel):
    field_200: Field200336 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get151(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter315]
    produces: List[str]
    responses: Responses336
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter317(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200337(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201100(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20250(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses337(BaseModel):
    field_200: Field200337 = Field(..., alias='200')
    field_201: Field201100 = Field(..., alias='201')
    field_202: Field20250 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post36(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter317]
    produces: List[str]
    responses: Responses337
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisApiextensionsK8sIoV1Customresourcedefinitions(BaseModel):
    delete: Delete51
    get: Get151
    parameters: List[Parameter315]
    post: Post36


class Parameter318(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200338(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20251(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses338(BaseModel):
    field_200: Field200338 = Field(..., alias='200')
    field_202: Field20251 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete52(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter318]
    produces: List[str]
    responses: Responses338
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200339(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses339(BaseModel):
    field_200: Field200339 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get152(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses339
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter319(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter320(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200340(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201101(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses340(BaseModel):
    field_200: Field200340 = Field(..., alias='200')
    field_201: Field201101 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch42(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter320]
    produces: List[str]
    responses: Responses340
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter321(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200341(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201102(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses341(BaseModel):
    field_200: Field200341 = Field(..., alias='200')
    field_201: Field201102 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put43(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter321]
    produces: List[str]
    responses: Responses341
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisApiextensionsK8sIoV1CustomresourcedefinitionsName(BaseModel):
    delete: Delete52
    get: Get152
    parameters: List[Parameter319]
    patch: Patch42
    put: Put43


class Field200342(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses342(BaseModel):
    field_200: Field200342 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get153(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses342
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter322(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter323(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200343(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201103(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses343(BaseModel):
    field_200: Field200343 = Field(..., alias='200')
    field_201: Field201103 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch43(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter323]
    produces: List[str]
    responses: Responses343
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter324(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200344(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201104(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses344(BaseModel):
    field_200: Field200344 = Field(..., alias='200')
    field_201: Field201104 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put44(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter324]
    produces: List[str]
    responses: Responses344
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisApiextensionsK8sIoV1CustomresourcedefinitionsNameStatus(BaseModel):
    get: Get153
    parameters: List[Parameter322]
    patch: Patch43
    put: Put44


class Field200345(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses345(BaseModel):
    field_200: Field200345 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get154(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses345
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter325(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisApiextensionsK8sIoV1WatchCustomresourcedefinitions(BaseModel):
    get: Get154
    parameters: List[Parameter325]


class Field200346(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses346(BaseModel):
    field_200: Field200346 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get155(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses346
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter326(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisApiextensionsK8sIoV1WatchCustomresourcedefinitionsName(BaseModel):
    get: Get155
    parameters: List[Parameter326]


class Field200347(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses347(BaseModel):
    field_200: Field200347 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get156(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses347
    schemes: List[str]
    tags: List[str]


class FieldApisApiregistrationK8sIo(BaseModel):
    get: Get156


class Field200348(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses348(BaseModel):
    field_200: Field200348 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get157(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses348
    schemes: List[str]
    tags: List[str]


class FieldApisApiregistrationK8sIoV1(BaseModel):
    get: Get157


class Parameter327(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200349(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses349(BaseModel):
    field_200: Field200349 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete53(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter327]
    produces: List[str]
    responses: Responses349
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter328(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200350(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses350(BaseModel):
    field_200: Field200350 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get158(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter328]
    produces: List[str]
    responses: Responses350
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter330(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200351(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201105(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20252(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses351(BaseModel):
    field_200: Field200351 = Field(..., alias='200')
    field_201: Field201105 = Field(..., alias='201')
    field_202: Field20252 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post37(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter330]
    produces: List[str]
    responses: Responses351
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisApiregistrationK8sIoV1Apiservices(BaseModel):
    delete: Delete53
    get: Get158
    parameters: List[Parameter328]
    post: Post37


class Parameter331(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200352(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20253(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses352(BaseModel):
    field_200: Field200352 = Field(..., alias='200')
    field_202: Field20253 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete54(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter331]
    produces: List[str]
    responses: Responses352
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200353(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses353(BaseModel):
    field_200: Field200353 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get159(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses353
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter332(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter333(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200354(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201106(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses354(BaseModel):
    field_200: Field200354 = Field(..., alias='200')
    field_201: Field201106 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch44(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter333]
    produces: List[str]
    responses: Responses354
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter334(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200355(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201107(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses355(BaseModel):
    field_200: Field200355 = Field(..., alias='200')
    field_201: Field201107 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put45(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter334]
    produces: List[str]
    responses: Responses355
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisApiregistrationK8sIoV1ApiservicesName(BaseModel):
    delete: Delete54
    get: Get159
    parameters: List[Parameter332]
    patch: Patch44
    put: Put45


class Field200356(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses356(BaseModel):
    field_200: Field200356 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get160(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses356
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter335(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter336(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200357(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201108(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses357(BaseModel):
    field_200: Field200357 = Field(..., alias='200')
    field_201: Field201108 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch45(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter336]
    produces: List[str]
    responses: Responses357
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter337(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200358(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201109(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses358(BaseModel):
    field_200: Field200358 = Field(..., alias='200')
    field_201: Field201109 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put46(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter337]
    produces: List[str]
    responses: Responses358
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisApiregistrationK8sIoV1ApiservicesNameStatus(BaseModel):
    get: Get160
    parameters: List[Parameter335]
    patch: Patch45
    put: Put46


class Field200359(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses359(BaseModel):
    field_200: Field200359 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get161(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses359
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter338(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisApiregistrationK8sIoV1WatchApiservices(BaseModel):
    get: Get161
    parameters: List[Parameter338]


class Field200360(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses360(BaseModel):
    field_200: Field200360 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get162(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses360
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter339(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisApiregistrationK8sIoV1WatchApiservicesName(BaseModel):
    get: Get162
    parameters: List[Parameter339]


class Field200361(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses361(BaseModel):
    field_200: Field200361 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get163(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses361
    schemes: List[str]
    tags: List[str]


class FieldApisApps(BaseModel):
    get: Get163


class Field200362(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses362(BaseModel):
    field_200: Field200362 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get164(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses362
    schemes: List[str]
    tags: List[str]


class FieldApisAppsV1(BaseModel):
    get: Get164


class Field200363(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses363(BaseModel):
    field_200: Field200363 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get165(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses363
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter340(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAppsV1Controllerrevisions(BaseModel):
    get: Get165
    parameters: List[Parameter340]


class Field200364(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses364(BaseModel):
    field_200: Field200364 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get166(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses364
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1Daemonsets(BaseModel):
    get: Get166
    parameters: List[Parameter340]


class Field200365(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses365(BaseModel):
    field_200: Field200365 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get167(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses365
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1Deployments(BaseModel):
    get: Get167
    parameters: List[Parameter340]


class Parameter343(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200366(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses366(BaseModel):
    field_200: Field200366 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete55(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter343]
    produces: List[str]
    responses: Responses366
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter344(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200367(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses367(BaseModel):
    field_200: Field200367 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get168(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter344]
    produces: List[str]
    responses: Responses367
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter346(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200368(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201110(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20254(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses368(BaseModel):
    field_200: Field200368 = Field(..., alias='200')
    field_201: Field201110 = Field(..., alias='201')
    field_202: Field20254 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post38(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter346]
    produces: List[str]
    responses: Responses368
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceControllerrevisions(BaseModel):
    delete: Delete55
    get: Get168
    parameters: List[Parameter344]
    post: Post38


class Parameter347(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200369(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20255(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses369(BaseModel):
    field_200: Field200369 = Field(..., alias='200')
    field_202: Field20255 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete56(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter347]
    produces: List[str]
    responses: Responses369
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200370(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses370(BaseModel):
    field_200: Field200370 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get169(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses370
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter348(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter349(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200371(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201111(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses371(BaseModel):
    field_200: Field200371 = Field(..., alias='200')
    field_201: Field201111 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch46(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter349]
    produces: List[str]
    responses: Responses371
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter350(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200372(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201112(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses372(BaseModel):
    field_200: Field200372 = Field(..., alias='200')
    field_201: Field201112 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put47(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter350]
    produces: List[str]
    responses: Responses372
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceControllerrevisionsName(BaseModel):
    delete: Delete56
    get: Get169
    parameters: List[Parameter348]
    patch: Patch46
    put: Put47


class Parameter351(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200373(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses373(BaseModel):
    field_200: Field200373 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete57(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter351]
    produces: List[str]
    responses: Responses373
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter352(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200374(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses374(BaseModel):
    field_200: Field200374 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get170(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter352]
    produces: List[str]
    responses: Responses374
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter354(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200375(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201113(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20256(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses375(BaseModel):
    field_200: Field200375 = Field(..., alias='200')
    field_201: Field201113 = Field(..., alias='201')
    field_202: Field20256 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post39(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter354]
    produces: List[str]
    responses: Responses375
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceDaemonsets(BaseModel):
    delete: Delete57
    get: Get170
    parameters: List[Parameter352]
    post: Post39


class Parameter355(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200376(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20257(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses376(BaseModel):
    field_200: Field200376 = Field(..., alias='200')
    field_202: Field20257 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete58(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter355]
    produces: List[str]
    responses: Responses376
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200377(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses377(BaseModel):
    field_200: Field200377 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get171(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses377
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter356(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter357(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200378(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201114(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses378(BaseModel):
    field_200: Field200378 = Field(..., alias='200')
    field_201: Field201114 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch47(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter357]
    produces: List[str]
    responses: Responses378
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter358(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200379(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201115(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses379(BaseModel):
    field_200: Field200379 = Field(..., alias='200')
    field_201: Field201115 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put48(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter358]
    produces: List[str]
    responses: Responses379
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceDaemonsetsName(BaseModel):
    delete: Delete58
    get: Get171
    parameters: List[Parameter356]
    patch: Patch47
    put: Put48


class Field200380(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses380(BaseModel):
    field_200: Field200380 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get172(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses380
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter359(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter360(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200381(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201116(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses381(BaseModel):
    field_200: Field200381 = Field(..., alias='200')
    field_201: Field201116 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch48(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter360]
    produces: List[str]
    responses: Responses381
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter361(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200382(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201117(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses382(BaseModel):
    field_200: Field200382 = Field(..., alias='200')
    field_201: Field201117 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put49(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter361]
    produces: List[str]
    responses: Responses382
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceDaemonsetsNameStatus(BaseModel):
    get: Get172
    parameters: List[Parameter359]
    patch: Patch48
    put: Put49


class Parameter362(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200383(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses383(BaseModel):
    field_200: Field200383 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete59(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter362]
    produces: List[str]
    responses: Responses383
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter363(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200384(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses384(BaseModel):
    field_200: Field200384 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get173(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter363]
    produces: List[str]
    responses: Responses384
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter365(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200385(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201118(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20258(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses385(BaseModel):
    field_200: Field200385 = Field(..., alias='200')
    field_201: Field201118 = Field(..., alias='201')
    field_202: Field20258 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post40(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter365]
    produces: List[str]
    responses: Responses385
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceDeployments(BaseModel):
    delete: Delete59
    get: Get173
    parameters: List[Parameter363]
    post: Post40


class Parameter366(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200386(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20259(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses386(BaseModel):
    field_200: Field200386 = Field(..., alias='200')
    field_202: Field20259 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete60(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter366]
    produces: List[str]
    responses: Responses386
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200387(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses387(BaseModel):
    field_200: Field200387 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get174(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses387
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter367(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter368(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200388(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201119(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses388(BaseModel):
    field_200: Field200388 = Field(..., alias='200')
    field_201: Field201119 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch49(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter368]
    produces: List[str]
    responses: Responses388
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter369(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200389(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201120(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses389(BaseModel):
    field_200: Field200389 = Field(..., alias='200')
    field_201: Field201120 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put50(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter369]
    produces: List[str]
    responses: Responses389
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceDeploymentsName(BaseModel):
    delete: Delete60
    get: Get174
    parameters: List[Parameter367]
    patch: Patch49
    put: Put50


class Field200390(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses390(BaseModel):
    field_200: Field200390 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get175(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses390
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter370(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter371(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200391(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201121(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses391(BaseModel):
    field_200: Field200391 = Field(..., alias='200')
    field_201: Field201121 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch50(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter371]
    produces: List[str]
    responses: Responses391
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter372(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200392(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201122(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses392(BaseModel):
    field_200: Field200392 = Field(..., alias='200')
    field_201: Field201122 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put51(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter372]
    produces: List[str]
    responses: Responses392
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceDeploymentsNameScale(BaseModel):
    get: Get175
    parameters: List[Parameter370]
    patch: Patch50
    put: Put51


class Field200393(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses393(BaseModel):
    field_200: Field200393 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get176(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses393
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter373(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter374(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200394(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201123(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses394(BaseModel):
    field_200: Field200394 = Field(..., alias='200')
    field_201: Field201123 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch51(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter374]
    produces: List[str]
    responses: Responses394
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter375(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200395(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201124(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses395(BaseModel):
    field_200: Field200395 = Field(..., alias='200')
    field_201: Field201124 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put52(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter375]
    produces: List[str]
    responses: Responses395
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceDeploymentsNameStatus(BaseModel):
    get: Get176
    parameters: List[Parameter373]
    patch: Patch51
    put: Put52


class Parameter376(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200396(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses396(BaseModel):
    field_200: Field200396 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete61(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter376]
    produces: List[str]
    responses: Responses396
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter377(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200397(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses397(BaseModel):
    field_200: Field200397 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get177(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter377]
    produces: List[str]
    responses: Responses397
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter379(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200398(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201125(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20260(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses398(BaseModel):
    field_200: Field200398 = Field(..., alias='200')
    field_201: Field201125 = Field(..., alias='201')
    field_202: Field20260 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post41(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter379]
    produces: List[str]
    responses: Responses398
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceReplicasets(BaseModel):
    delete: Delete61
    get: Get177
    parameters: List[Parameter377]
    post: Post41


class Parameter380(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200399(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20261(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses399(BaseModel):
    field_200: Field200399 = Field(..., alias='200')
    field_202: Field20261 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete62(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter380]
    produces: List[str]
    responses: Responses399
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200400(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses400(BaseModel):
    field_200: Field200400 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get178(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses400
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter381(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter382(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200401(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201126(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses401(BaseModel):
    field_200: Field200401 = Field(..., alias='200')
    field_201: Field201126 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch52(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter382]
    produces: List[str]
    responses: Responses401
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter383(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200402(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201127(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses402(BaseModel):
    field_200: Field200402 = Field(..., alias='200')
    field_201: Field201127 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put53(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter383]
    produces: List[str]
    responses: Responses402
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceReplicasetsName(BaseModel):
    delete: Delete62
    get: Get178
    parameters: List[Parameter381]
    patch: Patch52
    put: Put53


class Field200403(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses403(BaseModel):
    field_200: Field200403 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get179(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses403
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter384(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter385(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200404(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201128(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses404(BaseModel):
    field_200: Field200404 = Field(..., alias='200')
    field_201: Field201128 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch53(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter385]
    produces: List[str]
    responses: Responses404
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter386(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200405(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201129(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses405(BaseModel):
    field_200: Field200405 = Field(..., alias='200')
    field_201: Field201129 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put54(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter386]
    produces: List[str]
    responses: Responses405
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceReplicasetsNameScale(BaseModel):
    get: Get179
    parameters: List[Parameter384]
    patch: Patch53
    put: Put54


class Field200406(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses406(BaseModel):
    field_200: Field200406 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get180(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses406
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter387(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter388(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200407(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201130(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses407(BaseModel):
    field_200: Field200407 = Field(..., alias='200')
    field_201: Field201130 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch54(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter388]
    produces: List[str]
    responses: Responses407
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter389(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200408(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201131(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses408(BaseModel):
    field_200: Field200408 = Field(..., alias='200')
    field_201: Field201131 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put55(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter389]
    produces: List[str]
    responses: Responses408
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceReplicasetsNameStatus(BaseModel):
    get: Get180
    parameters: List[Parameter387]
    patch: Patch54
    put: Put55


class Parameter390(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200409(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses409(BaseModel):
    field_200: Field200409 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete63(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter390]
    produces: List[str]
    responses: Responses409
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter391(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200410(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses410(BaseModel):
    field_200: Field200410 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get181(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter391]
    produces: List[str]
    responses: Responses410
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter393(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200411(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201132(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20262(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses411(BaseModel):
    field_200: Field200411 = Field(..., alias='200')
    field_201: Field201132 = Field(..., alias='201')
    field_202: Field20262 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post42(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter393]
    produces: List[str]
    responses: Responses411
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceStatefulsets(BaseModel):
    delete: Delete63
    get: Get181
    parameters: List[Parameter391]
    post: Post42


class Parameter394(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200412(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20263(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses412(BaseModel):
    field_200: Field200412 = Field(..., alias='200')
    field_202: Field20263 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete64(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter394]
    produces: List[str]
    responses: Responses412
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200413(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses413(BaseModel):
    field_200: Field200413 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get182(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses413
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter395(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter396(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200414(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201133(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses414(BaseModel):
    field_200: Field200414 = Field(..., alias='200')
    field_201: Field201133 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch55(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter396]
    produces: List[str]
    responses: Responses414
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter397(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200415(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201134(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses415(BaseModel):
    field_200: Field200415 = Field(..., alias='200')
    field_201: Field201134 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put56(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter397]
    produces: List[str]
    responses: Responses415
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceStatefulsetsName(BaseModel):
    delete: Delete64
    get: Get182
    parameters: List[Parameter395]
    patch: Patch55
    put: Put56


class Field200416(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses416(BaseModel):
    field_200: Field200416 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get183(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses416
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter398(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter399(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200417(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201135(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses417(BaseModel):
    field_200: Field200417 = Field(..., alias='200')
    field_201: Field201135 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch56(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter399]
    produces: List[str]
    responses: Responses417
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter400(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200418(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201136(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses418(BaseModel):
    field_200: Field200418 = Field(..., alias='200')
    field_201: Field201136 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put57(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter400]
    produces: List[str]
    responses: Responses418
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceStatefulsetsNameScale(BaseModel):
    get: Get183
    parameters: List[Parameter398]
    patch: Patch56
    put: Put57


class Field200419(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses419(BaseModel):
    field_200: Field200419 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get184(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses419
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter401(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter402(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200420(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201137(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses420(BaseModel):
    field_200: Field200420 = Field(..., alias='200')
    field_201: Field201137 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch57(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter402]
    produces: List[str]
    responses: Responses420
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter403(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200421(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201138(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses421(BaseModel):
    field_200: Field200421 = Field(..., alias='200')
    field_201: Field201138 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put58(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter403]
    produces: List[str]
    responses: Responses421
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1NamespacesNamespaceStatefulsetsNameStatus(BaseModel):
    get: Get184
    parameters: List[Parameter401]
    patch: Patch57
    put: Put58


class Field200422(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses422(BaseModel):
    field_200: Field200422 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get185(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses422
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter404(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAppsV1Replicasets(BaseModel):
    get: Get185
    parameters: List[Parameter404]


class Field200423(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses423(BaseModel):
    field_200: Field200423 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get186(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses423
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1Statefulsets(BaseModel):
    get: Get186
    parameters: List[Parameter404]


class Field200424(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses424(BaseModel):
    field_200: Field200424 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get187(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses424
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1WatchControllerrevisions(BaseModel):
    get: Get187
    parameters: List[Parameter404]


class Field200425(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses425(BaseModel):
    field_200: Field200425 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get188(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses425
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1WatchDaemonsets(BaseModel):
    get: Get188
    parameters: List[Parameter404]


class Field200426(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses426(BaseModel):
    field_200: Field200426 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get189(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses426
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1WatchDeployments(BaseModel):
    get: Get189
    parameters: List[Parameter404]


class Field200427(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses427(BaseModel):
    field_200: Field200427 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get190(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses427
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1WatchNamespacesNamespaceControllerrevisions(BaseModel):
    get: Get190
    parameters: List[Parameter404]


class Field200428(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses428(BaseModel):
    field_200: Field200428 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get191(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses428
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter410(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAppsV1WatchNamespacesNamespaceControllerrevisionsName(BaseModel):
    get: Get191
    parameters: List[Parameter410]


class Field200429(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses429(BaseModel):
    field_200: Field200429 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get192(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses429
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter411(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAppsV1WatchNamespacesNamespaceDaemonsets(BaseModel):
    get: Get192
    parameters: List[Parameter411]


class Field200430(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses430(BaseModel):
    field_200: Field200430 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get193(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses430
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter412(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAppsV1WatchNamespacesNamespaceDaemonsetsName(BaseModel):
    get: Get193
    parameters: List[Parameter412]


class Field200431(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses431(BaseModel):
    field_200: Field200431 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get194(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses431
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter413(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAppsV1WatchNamespacesNamespaceDeployments(BaseModel):
    get: Get194
    parameters: List[Parameter413]


class Field200432(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses432(BaseModel):
    field_200: Field200432 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get195(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses432
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter414(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAppsV1WatchNamespacesNamespaceDeploymentsName(BaseModel):
    get: Get195
    parameters: List[Parameter414]


class Field200433(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses433(BaseModel):
    field_200: Field200433 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get196(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses433
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter415(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAppsV1WatchNamespacesNamespaceReplicasets(BaseModel):
    get: Get196
    parameters: List[Parameter415]


class Field200434(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses434(BaseModel):
    field_200: Field200434 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get197(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses434
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter416(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAppsV1WatchNamespacesNamespaceReplicasetsName(BaseModel):
    get: Get197
    parameters: List[Parameter416]


class Field200435(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses435(BaseModel):
    field_200: Field200435 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get198(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses435
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter417(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAppsV1WatchNamespacesNamespaceStatefulsets(BaseModel):
    get: Get198
    parameters: List[Parameter417]


class Field200436(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses436(BaseModel):
    field_200: Field200436 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get199(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses436
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter418(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAppsV1WatchNamespacesNamespaceStatefulsetsName(BaseModel):
    get: Get199
    parameters: List[Parameter418]


class Field200437(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses437(BaseModel):
    field_200: Field200437 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get200(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses437
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter419(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAppsV1WatchReplicasets(BaseModel):
    get: Get200
    parameters: List[Parameter419]


class Field200438(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses438(BaseModel):
    field_200: Field200438 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get201(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses438
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAppsV1WatchStatefulsets(BaseModel):
    get: Get201
    parameters: List[Parameter419]


class Field200439(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses439(BaseModel):
    field_200: Field200439 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get202(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses439
    schemes: List[str]
    tags: List[str]


class FieldApisAuthenticationK8sIo(BaseModel):
    get: Get202


class Field200440(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses440(BaseModel):
    field_200: Field200440 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get203(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses440
    schemes: List[str]
    tags: List[str]


class FieldApisAuthenticationK8sIoV1(BaseModel):
    get: Get203


class Parameter421(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter422(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema323 = Field(..., alias='schema')


class Field200441(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201139(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20264(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses441(BaseModel):
    field_200: Field200441 = Field(..., alias='200')
    field_201: Field201139 = Field(..., alias='201')
    field_202: Field20264 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post43(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter422]
    produces: List[str]
    responses: Responses441
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAuthenticationK8sIoV1Selfsubjectreviews(BaseModel):
    parameters: List[Parameter421]
    post: Post43


class Parameter423(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter424(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema323 = Field(..., alias='schema')


class Field200442(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201140(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20265(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses442(BaseModel):
    field_200: Field200442 = Field(..., alias='200')
    field_201: Field201140 = Field(..., alias='201')
    field_202: Field20265 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post44(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter424]
    produces: List[str]
    responses: Responses442
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAuthenticationK8sIoV1Tokenreviews(BaseModel):
    parameters: List[Parameter423]
    post: Post44


class Field200443(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses443(BaseModel):
    field_200: Field200443 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get204(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses443
    schemes: List[str]
    tags: List[str]


class FieldApisAuthenticationK8sIoV1alpha1(BaseModel):
    get: Get204


class Parameter425(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter426(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema323 = Field(..., alias='schema')


class Field200444(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201141(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20266(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses444(BaseModel):
    field_200: Field200444 = Field(..., alias='200')
    field_201: Field201141 = Field(..., alias='201')
    field_202: Field20266 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post45(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter426]
    produces: List[str]
    responses: Responses444
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAuthenticationK8sIoV1alpha1Selfsubjectreviews(BaseModel):
    parameters: List[Parameter425]
    post: Post45


class Field200445(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses445(BaseModel):
    field_200: Field200445 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get205(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses445
    schemes: List[str]
    tags: List[str]


class FieldApisAuthenticationK8sIoV1beta1(BaseModel):
    get: Get205


class Parameter427(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter428(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema323 = Field(..., alias='schema')


class Field200446(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201142(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20267(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses446(BaseModel):
    field_200: Field200446 = Field(..., alias='200')
    field_201: Field201142 = Field(..., alias='201')
    field_202: Field20267 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post46(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter428]
    produces: List[str]
    responses: Responses446
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAuthenticationK8sIoV1beta1Selfsubjectreviews(BaseModel):
    parameters: List[Parameter427]
    post: Post46


class Field200447(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses447(BaseModel):
    field_200: Field200447 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get206(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses447
    schemes: List[str]
    tags: List[str]


class FieldApisAuthorizationK8sIo(BaseModel):
    get: Get206


class Field200448(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses448(BaseModel):
    field_200: Field200448 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get207(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses448
    schemes: List[str]
    tags: List[str]


class FieldApisAuthorizationK8sIoV1(BaseModel):
    get: Get207


class Parameter429(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter430(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema323 = Field(..., alias='schema')


class Field200449(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201143(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20268(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses449(BaseModel):
    field_200: Field200449 = Field(..., alias='200')
    field_201: Field201143 = Field(..., alias='201')
    field_202: Field20268 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post47(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter430]
    produces: List[str]
    responses: Responses449
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAuthorizationK8sIoV1NamespacesNamespaceLocalsubjectaccessreviews(
    BaseModel
):
    parameters: List[Parameter429]
    post: Post47


class Parameter431(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter432(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema323 = Field(..., alias='schema')


class Field200450(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201144(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20269(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses450(BaseModel):
    field_200: Field200450 = Field(..., alias='200')
    field_201: Field201144 = Field(..., alias='201')
    field_202: Field20269 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post48(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter432]
    produces: List[str]
    responses: Responses450
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAuthorizationK8sIoV1Selfsubjectaccessreviews(BaseModel):
    parameters: List[Parameter431]
    post: Post48


class Parameter433(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter434(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema323 = Field(..., alias='schema')


class Field200451(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201145(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20270(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses451(BaseModel):
    field_200: Field200451 = Field(..., alias='200')
    field_201: Field201145 = Field(..., alias='201')
    field_202: Field20270 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post49(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter434]
    produces: List[str]
    responses: Responses451
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAuthorizationK8sIoV1Selfsubjectrulesreviews(BaseModel):
    parameters: List[Parameter433]
    post: Post49


class Parameter435(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter436(BaseModel):
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema323 = Field(..., alias='schema')


class Field200452(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201146(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20271(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses452(BaseModel):
    field_200: Field200452 = Field(..., alias='200')
    field_201: Field201146 = Field(..., alias='201')
    field_202: Field20271 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post50(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter436]
    produces: List[str]
    responses: Responses452
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAuthorizationK8sIoV1Subjectaccessreviews(BaseModel):
    parameters: List[Parameter435]
    post: Post50


class Field200453(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses453(BaseModel):
    field_200: Field200453 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get208(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses453
    schemes: List[str]
    tags: List[str]


class FieldApisAutoscaling(BaseModel):
    get: Get208


class Field200454(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses454(BaseModel):
    field_200: Field200454 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get209(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses454
    schemes: List[str]
    tags: List[str]


class FieldApisAutoscalingV1(BaseModel):
    get: Get209


class Field200455(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses455(BaseModel):
    field_200: Field200455 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get210(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses455
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter437(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAutoscalingV1Horizontalpodautoscalers(BaseModel):
    get: Get210
    parameters: List[Parameter437]


class Parameter438(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200456(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses456(BaseModel):
    field_200: Field200456 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete65(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter438]
    produces: List[str]
    responses: Responses456
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter439(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200457(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses457(BaseModel):
    field_200: Field200457 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get211(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter439]
    produces: List[str]
    responses: Responses457
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter441(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200458(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201147(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20272(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses458(BaseModel):
    field_200: Field200458 = Field(..., alias='200')
    field_201: Field201147 = Field(..., alias='201')
    field_202: Field20272 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post51(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter441]
    produces: List[str]
    responses: Responses458
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAutoscalingV1NamespacesNamespaceHorizontalpodautoscalers(BaseModel):
    delete: Delete65
    get: Get211
    parameters: List[Parameter439]
    post: Post51


class Parameter442(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200459(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20273(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses459(BaseModel):
    field_200: Field200459 = Field(..., alias='200')
    field_202: Field20273 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete66(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter442]
    produces: List[str]
    responses: Responses459
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200460(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses460(BaseModel):
    field_200: Field200460 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get212(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses460
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter443(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter444(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200461(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201148(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses461(BaseModel):
    field_200: Field200461 = Field(..., alias='200')
    field_201: Field201148 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch58(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter444]
    produces: List[str]
    responses: Responses461
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter445(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200462(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201149(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses462(BaseModel):
    field_200: Field200462 = Field(..., alias='200')
    field_201: Field201149 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put59(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter445]
    produces: List[str]
    responses: Responses462
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAutoscalingV1NamespacesNamespaceHorizontalpodautoscalersName(BaseModel):
    delete: Delete66
    get: Get212
    parameters: List[Parameter443]
    patch: Patch58
    put: Put59


class Field200463(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses463(BaseModel):
    field_200: Field200463 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get213(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses463
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter446(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter447(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200464(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201150(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses464(BaseModel):
    field_200: Field200464 = Field(..., alias='200')
    field_201: Field201150 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch59(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter447]
    produces: List[str]
    responses: Responses464
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter448(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200465(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201151(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses465(BaseModel):
    field_200: Field200465 = Field(..., alias='200')
    field_201: Field201151 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put60(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter448]
    produces: List[str]
    responses: Responses465
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAutoscalingV1NamespacesNamespaceHorizontalpodautoscalersNameStatus(
    BaseModel
):
    get: Get213
    parameters: List[Parameter446]
    patch: Patch59
    put: Put60


class Field200466(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses466(BaseModel):
    field_200: Field200466 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get214(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses466
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter449(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAutoscalingV1WatchHorizontalpodautoscalers(BaseModel):
    get: Get214
    parameters: List[Parameter449]


class Field200467(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses467(BaseModel):
    field_200: Field200467 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get215(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses467
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAutoscalingV1WatchNamespacesNamespaceHorizontalpodautoscalers(BaseModel):
    get: Get215
    parameters: List[Parameter449]


class Field200468(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses468(BaseModel):
    field_200: Field200468 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get216(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses468
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter451(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAutoscalingV1WatchNamespacesNamespaceHorizontalpodautoscalersName(
    BaseModel
):
    get: Get216
    parameters: List[Parameter451]


class Field200469(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses469(BaseModel):
    field_200: Field200469 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get217(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses469
    schemes: List[str]
    tags: List[str]


class FieldApisAutoscalingV2(BaseModel):
    get: Get217


class Field200470(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses470(BaseModel):
    field_200: Field200470 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get218(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses470
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter452(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAutoscalingV2Horizontalpodautoscalers(BaseModel):
    get: Get218
    parameters: List[Parameter452]


class Parameter453(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200471(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses471(BaseModel):
    field_200: Field200471 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete67(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter453]
    produces: List[str]
    responses: Responses471
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter454(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200472(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses472(BaseModel):
    field_200: Field200472 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get219(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter454]
    produces: List[str]
    responses: Responses472
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter456(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200473(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201152(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20274(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses473(BaseModel):
    field_200: Field200473 = Field(..., alias='200')
    field_201: Field201152 = Field(..., alias='201')
    field_202: Field20274 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post52(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter456]
    produces: List[str]
    responses: Responses473
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAutoscalingV2NamespacesNamespaceHorizontalpodautoscalers(BaseModel):
    delete: Delete67
    get: Get219
    parameters: List[Parameter454]
    post: Post52


class Parameter457(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200474(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20275(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses474(BaseModel):
    field_200: Field200474 = Field(..., alias='200')
    field_202: Field20275 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete68(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter457]
    produces: List[str]
    responses: Responses474
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200475(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses475(BaseModel):
    field_200: Field200475 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get220(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses475
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter458(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter459(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200476(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201153(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses476(BaseModel):
    field_200: Field200476 = Field(..., alias='200')
    field_201: Field201153 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch60(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter459]
    produces: List[str]
    responses: Responses476
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter460(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200477(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201154(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses477(BaseModel):
    field_200: Field200477 = Field(..., alias='200')
    field_201: Field201154 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put61(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter460]
    produces: List[str]
    responses: Responses477
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAutoscalingV2NamespacesNamespaceHorizontalpodautoscalersName(BaseModel):
    delete: Delete68
    get: Get220
    parameters: List[Parameter458]
    patch: Patch60
    put: Put61


class Field200478(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses478(BaseModel):
    field_200: Field200478 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get221(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses478
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter461(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter462(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200479(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201155(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses479(BaseModel):
    field_200: Field200479 = Field(..., alias='200')
    field_201: Field201155 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch61(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter462]
    produces: List[str]
    responses: Responses479
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter463(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200480(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201156(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses480(BaseModel):
    field_200: Field200480 = Field(..., alias='200')
    field_201: Field201156 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put62(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter463]
    produces: List[str]
    responses: Responses480
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAutoscalingV2NamespacesNamespaceHorizontalpodautoscalersNameStatus(
    BaseModel
):
    get: Get221
    parameters: List[Parameter461]
    patch: Patch61
    put: Put62


class Field200481(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses481(BaseModel):
    field_200: Field200481 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get222(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses481
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter464(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisAutoscalingV2WatchHorizontalpodautoscalers(BaseModel):
    get: Get222
    parameters: List[Parameter464]


class Field200482(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses482(BaseModel):
    field_200: Field200482 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get223(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses482
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisAutoscalingV2WatchNamespacesNamespaceHorizontalpodautoscalers(BaseModel):
    get: Get223
    parameters: List[Parameter464]


class Field200483(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses483(BaseModel):
    field_200: Field200483 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get224(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses483
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter466(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisAutoscalingV2WatchNamespacesNamespaceHorizontalpodautoscalersName(
    BaseModel
):
    get: Get224
    parameters: List[Parameter466]


class Field200484(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses484(BaseModel):
    field_200: Field200484 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get225(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses484
    schemes: List[str]
    tags: List[str]


class FieldApisBatch(BaseModel):
    get: Get225


class Field200485(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses485(BaseModel):
    field_200: Field200485 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get226(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses485
    schemes: List[str]
    tags: List[str]


class FieldApisBatchV1(BaseModel):
    get: Get226


class Field200486(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses486(BaseModel):
    field_200: Field200486 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get227(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses486
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter467(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisBatchV1Cronjobs(BaseModel):
    get: Get227
    parameters: List[Parameter467]


class Field200487(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses487(BaseModel):
    field_200: Field200487 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get228(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses487
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisBatchV1Jobs(BaseModel):
    get: Get228
    parameters: List[Parameter467]


class Parameter469(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200488(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses488(BaseModel):
    field_200: Field200488 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete69(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter469]
    produces: List[str]
    responses: Responses488
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter470(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200489(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses489(BaseModel):
    field_200: Field200489 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get229(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter470]
    produces: List[str]
    responses: Responses489
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter472(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200490(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201157(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20276(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses490(BaseModel):
    field_200: Field200490 = Field(..., alias='200')
    field_201: Field201157 = Field(..., alias='201')
    field_202: Field20276 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post53(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter472]
    produces: List[str]
    responses: Responses490
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisBatchV1NamespacesNamespaceCronjobs(BaseModel):
    delete: Delete69
    get: Get229
    parameters: List[Parameter470]
    post: Post53


class Parameter473(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200491(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20277(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses491(BaseModel):
    field_200: Field200491 = Field(..., alias='200')
    field_202: Field20277 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete70(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter473]
    produces: List[str]
    responses: Responses491
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200492(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses492(BaseModel):
    field_200: Field200492 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get230(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses492
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter474(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter475(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200493(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201158(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses493(BaseModel):
    field_200: Field200493 = Field(..., alias='200')
    field_201: Field201158 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch62(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter475]
    produces: List[str]
    responses: Responses493
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter476(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200494(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201159(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses494(BaseModel):
    field_200: Field200494 = Field(..., alias='200')
    field_201: Field201159 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put63(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter476]
    produces: List[str]
    responses: Responses494
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisBatchV1NamespacesNamespaceCronjobsName(BaseModel):
    delete: Delete70
    get: Get230
    parameters: List[Parameter474]
    patch: Patch62
    put: Put63


class Field200495(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses495(BaseModel):
    field_200: Field200495 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get231(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses495
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter477(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter478(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200496(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201160(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses496(BaseModel):
    field_200: Field200496 = Field(..., alias='200')
    field_201: Field201160 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch63(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter478]
    produces: List[str]
    responses: Responses496
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter479(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200497(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201161(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses497(BaseModel):
    field_200: Field200497 = Field(..., alias='200')
    field_201: Field201161 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put64(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter479]
    produces: List[str]
    responses: Responses497
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisBatchV1NamespacesNamespaceCronjobsNameStatus(BaseModel):
    get: Get231
    parameters: List[Parameter477]
    patch: Patch63
    put: Put64


class Parameter480(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200498(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses498(BaseModel):
    field_200: Field200498 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete71(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter480]
    produces: List[str]
    responses: Responses498
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter481(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200499(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses499(BaseModel):
    field_200: Field200499 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get232(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter481]
    produces: List[str]
    responses: Responses499
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter483(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200500(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201162(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20278(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses500(BaseModel):
    field_200: Field200500 = Field(..., alias='200')
    field_201: Field201162 = Field(..., alias='201')
    field_202: Field20278 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post54(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter483]
    produces: List[str]
    responses: Responses500
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisBatchV1NamespacesNamespaceJobs(BaseModel):
    delete: Delete71
    get: Get232
    parameters: List[Parameter481]
    post: Post54


class Parameter484(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200501(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20279(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses501(BaseModel):
    field_200: Field200501 = Field(..., alias='200')
    field_202: Field20279 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete72(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter484]
    produces: List[str]
    responses: Responses501
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200502(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses502(BaseModel):
    field_200: Field200502 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get233(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses502
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter485(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter486(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200503(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201163(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses503(BaseModel):
    field_200: Field200503 = Field(..., alias='200')
    field_201: Field201163 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch64(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter486]
    produces: List[str]
    responses: Responses503
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter487(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200504(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201164(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses504(BaseModel):
    field_200: Field200504 = Field(..., alias='200')
    field_201: Field201164 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put65(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter487]
    produces: List[str]
    responses: Responses504
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisBatchV1NamespacesNamespaceJobsName(BaseModel):
    delete: Delete72
    get: Get233
    parameters: List[Parameter485]
    patch: Patch64
    put: Put65


class Field200505(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses505(BaseModel):
    field_200: Field200505 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get234(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses505
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter488(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter489(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200506(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201165(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses506(BaseModel):
    field_200: Field200506 = Field(..., alias='200')
    field_201: Field201165 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch65(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter489]
    produces: List[str]
    responses: Responses506
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter490(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200507(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201166(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses507(BaseModel):
    field_200: Field200507 = Field(..., alias='200')
    field_201: Field201166 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put66(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter490]
    produces: List[str]
    responses: Responses507
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisBatchV1NamespacesNamespaceJobsNameStatus(BaseModel):
    get: Get234
    parameters: List[Parameter488]
    patch: Patch65
    put: Put66


class Field200508(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses508(BaseModel):
    field_200: Field200508 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get235(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses508
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter491(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisBatchV1WatchCronjobs(BaseModel):
    get: Get235
    parameters: List[Parameter491]


class Field200509(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses509(BaseModel):
    field_200: Field200509 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get236(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses509
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisBatchV1WatchJobs(BaseModel):
    get: Get236
    parameters: List[Parameter491]


class Field200510(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses510(BaseModel):
    field_200: Field200510 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get237(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses510
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisBatchV1WatchNamespacesNamespaceCronjobs(BaseModel):
    get: Get237
    parameters: List[Parameter491]


class Field200511(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses511(BaseModel):
    field_200: Field200511 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get238(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses511
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter494(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisBatchV1WatchNamespacesNamespaceCronjobsName(BaseModel):
    get: Get238
    parameters: List[Parameter494]


class Field200512(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses512(BaseModel):
    field_200: Field200512 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get239(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses512
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter495(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisBatchV1WatchNamespacesNamespaceJobs(BaseModel):
    get: Get239
    parameters: List[Parameter495]


class Field200513(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses513(BaseModel):
    field_200: Field200513 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get240(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses513
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter496(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisBatchV1WatchNamespacesNamespaceJobsName(BaseModel):
    get: Get240
    parameters: List[Parameter496]


class Field200514(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses514(BaseModel):
    field_200: Field200514 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get241(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses514
    schemes: List[str]
    tags: List[str]


class FieldApisCertificatesK8sIo(BaseModel):
    get: Get241


class Field200515(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses515(BaseModel):
    field_200: Field200515 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get242(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses515
    schemes: List[str]
    tags: List[str]


class FieldApisCertificatesK8sIoV1(BaseModel):
    get: Get242


class Parameter497(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200516(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses516(BaseModel):
    field_200: Field200516 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete73(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter497]
    produces: List[str]
    responses: Responses516
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter498(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200517(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses517(BaseModel):
    field_200: Field200517 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get243(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter498]
    produces: List[str]
    responses: Responses517
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter500(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200518(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201167(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20280(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses518(BaseModel):
    field_200: Field200518 = Field(..., alias='200')
    field_201: Field201167 = Field(..., alias='201')
    field_202: Field20280 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post55(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter500]
    produces: List[str]
    responses: Responses518
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCertificatesK8sIoV1Certificatesigningrequests(BaseModel):
    delete: Delete73
    get: Get243
    parameters: List[Parameter498]
    post: Post55


class Parameter501(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200519(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20281(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses519(BaseModel):
    field_200: Field200519 = Field(..., alias='200')
    field_202: Field20281 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete74(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter501]
    produces: List[str]
    responses: Responses519
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200520(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses520(BaseModel):
    field_200: Field200520 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get244(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses520
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter502(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter503(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200521(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201168(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses521(BaseModel):
    field_200: Field200521 = Field(..., alias='200')
    field_201: Field201168 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch66(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter503]
    produces: List[str]
    responses: Responses521
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter504(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200522(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201169(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses522(BaseModel):
    field_200: Field200522 = Field(..., alias='200')
    field_201: Field201169 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put67(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter504]
    produces: List[str]
    responses: Responses522
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCertificatesK8sIoV1CertificatesigningrequestsName(BaseModel):
    delete: Delete74
    get: Get244
    parameters: List[Parameter502]
    patch: Patch66
    put: Put67


class Field200523(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses523(BaseModel):
    field_200: Field200523 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get245(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses523
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter505(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter506(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200524(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201170(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses524(BaseModel):
    field_200: Field200524 = Field(..., alias='200')
    field_201: Field201170 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch67(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter506]
    produces: List[str]
    responses: Responses524
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter507(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200525(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201171(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses525(BaseModel):
    field_200: Field200525 = Field(..., alias='200')
    field_201: Field201171 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put68(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter507]
    produces: List[str]
    responses: Responses525
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCertificatesK8sIoV1CertificatesigningrequestsNameApproval(BaseModel):
    get: Get245
    parameters: List[Parameter505]
    patch: Patch67
    put: Put68


class Field200526(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses526(BaseModel):
    field_200: Field200526 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get246(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses526
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter508(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter509(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200527(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201172(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses527(BaseModel):
    field_200: Field200527 = Field(..., alias='200')
    field_201: Field201172 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch68(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter509]
    produces: List[str]
    responses: Responses527
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter510(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200528(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201173(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses528(BaseModel):
    field_200: Field200528 = Field(..., alias='200')
    field_201: Field201173 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put69(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter510]
    produces: List[str]
    responses: Responses528
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCertificatesK8sIoV1CertificatesigningrequestsNameStatus(BaseModel):
    get: Get246
    parameters: List[Parameter508]
    patch: Patch68
    put: Put69


class Field200529(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses529(BaseModel):
    field_200: Field200529 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get247(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses529
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter511(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisCertificatesK8sIoV1WatchCertificatesigningrequests(BaseModel):
    get: Get247
    parameters: List[Parameter511]


class Field200530(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses530(BaseModel):
    field_200: Field200530 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get248(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses530
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter512(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisCertificatesK8sIoV1WatchCertificatesigningrequestsName(BaseModel):
    get: Get248
    parameters: List[Parameter512]


class Field200531(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses531(BaseModel):
    field_200: Field200531 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get249(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses531
    schemes: List[str]
    tags: List[str]


class FieldApisCertificatesK8sIoV1alpha1(BaseModel):
    get: Get249


class Parameter513(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200532(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses532(BaseModel):
    field_200: Field200532 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete75(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter513]
    produces: List[str]
    responses: Responses532
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter514(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200533(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses533(BaseModel):
    field_200: Field200533 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get250(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter514]
    produces: List[str]
    responses: Responses533
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter516(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200534(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201174(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20282(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses534(BaseModel):
    field_200: Field200534 = Field(..., alias='200')
    field_201: Field201174 = Field(..., alias='201')
    field_202: Field20282 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post56(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter516]
    produces: List[str]
    responses: Responses534
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCertificatesK8sIoV1alpha1Clustertrustbundles(BaseModel):
    delete: Delete75
    get: Get250
    parameters: List[Parameter514]
    post: Post56


class Parameter517(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200535(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20283(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses535(BaseModel):
    field_200: Field200535 = Field(..., alias='200')
    field_202: Field20283 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete76(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter517]
    produces: List[str]
    responses: Responses535
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200536(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses536(BaseModel):
    field_200: Field200536 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get251(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses536
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter518(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter519(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200537(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201175(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses537(BaseModel):
    field_200: Field200537 = Field(..., alias='200')
    field_201: Field201175 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch69(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter519]
    produces: List[str]
    responses: Responses537
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter520(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200538(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201176(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses538(BaseModel):
    field_200: Field200538 = Field(..., alias='200')
    field_201: Field201176 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put70(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter520]
    produces: List[str]
    responses: Responses538
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCertificatesK8sIoV1alpha1ClustertrustbundlesName(BaseModel):
    delete: Delete76
    get: Get251
    parameters: List[Parameter518]
    patch: Patch69
    put: Put70


class Field200539(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses539(BaseModel):
    field_200: Field200539 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get252(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses539
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter521(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisCertificatesK8sIoV1alpha1WatchClustertrustbundles(BaseModel):
    get: Get252
    parameters: List[Parameter521]


class Field200540(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses540(BaseModel):
    field_200: Field200540 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get253(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses540
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter522(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisCertificatesK8sIoV1alpha1WatchClustertrustbundlesName(BaseModel):
    get: Get253
    parameters: List[Parameter522]


class Field200541(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses541(BaseModel):
    field_200: Field200541 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get254(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses541
    schemes: List[str]
    tags: List[str]


class FieldApisCoordinationK8sIo(BaseModel):
    get: Get254


class Field200542(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses542(BaseModel):
    field_200: Field200542 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get255(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses542
    schemes: List[str]
    tags: List[str]


class FieldApisCoordinationK8sIoV1(BaseModel):
    get: Get255


class Field200543(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses543(BaseModel):
    field_200: Field200543 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get256(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses543
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter523(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisCoordinationK8sIoV1Leases(BaseModel):
    get: Get256
    parameters: List[Parameter523]


class Parameter524(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200544(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses544(BaseModel):
    field_200: Field200544 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete77(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter524]
    produces: List[str]
    responses: Responses544
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter525(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200545(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses545(BaseModel):
    field_200: Field200545 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get257(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter525]
    produces: List[str]
    responses: Responses545
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter527(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200546(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201177(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20284(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses546(BaseModel):
    field_200: Field200546 = Field(..., alias='200')
    field_201: Field201177 = Field(..., alias='201')
    field_202: Field20284 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post57(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter527]
    produces: List[str]
    responses: Responses546
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCoordinationK8sIoV1NamespacesNamespaceLeases(BaseModel):
    delete: Delete77
    get: Get257
    parameters: List[Parameter525]
    post: Post57


class Parameter528(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200547(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20285(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses547(BaseModel):
    field_200: Field200547 = Field(..., alias='200')
    field_202: Field20285 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete78(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter528]
    produces: List[str]
    responses: Responses547
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200548(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses548(BaseModel):
    field_200: Field200548 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get258(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses548
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter529(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter530(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200549(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201178(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses549(BaseModel):
    field_200: Field200549 = Field(..., alias='200')
    field_201: Field201178 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch70(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter530]
    produces: List[str]
    responses: Responses549
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter531(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200550(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201179(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses550(BaseModel):
    field_200: Field200550 = Field(..., alias='200')
    field_201: Field201179 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put71(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter531]
    produces: List[str]
    responses: Responses550
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCoordinationK8sIoV1NamespacesNamespaceLeasesName(BaseModel):
    delete: Delete78
    get: Get258
    parameters: List[Parameter529]
    patch: Patch70
    put: Put71


class Field200551(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses551(BaseModel):
    field_200: Field200551 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get259(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses551
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter532(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisCoordinationK8sIoV1WatchLeases(BaseModel):
    get: Get259
    parameters: List[Parameter532]


class Field200552(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses552(BaseModel):
    field_200: Field200552 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get260(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses552
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCoordinationK8sIoV1WatchNamespacesNamespaceLeases(BaseModel):
    get: Get260
    parameters: List[Parameter532]


class Field200553(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses553(BaseModel):
    field_200: Field200553 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get261(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses553
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter534(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisCoordinationK8sIoV1WatchNamespacesNamespaceLeasesName(BaseModel):
    get: Get261
    parameters: List[Parameter534]


class Field200554(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses554(BaseModel):
    field_200: Field200554 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get262(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses554
    schemes: List[str]
    tags: List[str]


class FieldApisCoordinationK8sIoV1alpha1(BaseModel):
    get: Get262


class Field200555(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses555(BaseModel):
    field_200: Field200555 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get263(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses555
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter535(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisCoordinationK8sIoV1alpha1Leasecandidates(BaseModel):
    get: Get263
    parameters: List[Parameter535]


class Parameter536(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200556(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses556(BaseModel):
    field_200: Field200556 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete79(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter536]
    produces: List[str]
    responses: Responses556
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter537(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200557(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses557(BaseModel):
    field_200: Field200557 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get264(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter537]
    produces: List[str]
    responses: Responses557
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter539(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200558(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201180(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20286(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses558(BaseModel):
    field_200: Field200558 = Field(..., alias='200')
    field_201: Field201180 = Field(..., alias='201')
    field_202: Field20286 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post58(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter539]
    produces: List[str]
    responses: Responses558
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCoordinationK8sIoV1alpha1NamespacesNamespaceLeasecandidates(BaseModel):
    delete: Delete79
    get: Get264
    parameters: List[Parameter537]
    post: Post58


class Parameter540(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200559(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20287(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses559(BaseModel):
    field_200: Field200559 = Field(..., alias='200')
    field_202: Field20287 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete80(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter540]
    produces: List[str]
    responses: Responses559
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200560(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses560(BaseModel):
    field_200: Field200560 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get265(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses560
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter541(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter542(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200561(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201181(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses561(BaseModel):
    field_200: Field200561 = Field(..., alias='200')
    field_201: Field201181 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch71(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter542]
    produces: List[str]
    responses: Responses561
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter543(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200562(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201182(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses562(BaseModel):
    field_200: Field200562 = Field(..., alias='200')
    field_201: Field201182 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put72(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter543]
    produces: List[str]
    responses: Responses562
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCoordinationK8sIoV1alpha1NamespacesNamespaceLeasecandidatesName(
    BaseModel
):
    delete: Delete80
    get: Get265
    parameters: List[Parameter541]
    patch: Patch71
    put: Put72


class Field200563(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses563(BaseModel):
    field_200: Field200563 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get266(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses563
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter544(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisCoordinationK8sIoV1alpha1WatchLeasecandidates(BaseModel):
    get: Get266
    parameters: List[Parameter544]


class Field200564(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses564(BaseModel):
    field_200: Field200564 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get267(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses564
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisCoordinationK8sIoV1alpha1WatchNamespacesNamespaceLeasecandidates(
    BaseModel
):
    get: Get267
    parameters: List[Parameter544]


class Field200565(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses565(BaseModel):
    field_200: Field200565 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get268(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses565
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter546(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisCoordinationK8sIoV1alpha1WatchNamespacesNamespaceLeasecandidatesName(
    BaseModel
):
    get: Get268
    parameters: List[Parameter546]


class Field200566(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses566(BaseModel):
    field_200: Field200566 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get269(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses566
    schemes: List[str]
    tags: List[str]


class FieldApisDiscoveryK8sIo(BaseModel):
    get: Get269


class Field200567(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses567(BaseModel):
    field_200: Field200567 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get270(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses567
    schemes: List[str]
    tags: List[str]


class FieldApisDiscoveryK8sIoV1(BaseModel):
    get: Get270


class Field200568(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses568(BaseModel):
    field_200: Field200568 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get271(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses568
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter547(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisDiscoveryK8sIoV1Endpointslices(BaseModel):
    get: Get271
    parameters: List[Parameter547]


class Parameter548(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200569(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses569(BaseModel):
    field_200: Field200569 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete81(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter548]
    produces: List[str]
    responses: Responses569
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter549(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200570(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses570(BaseModel):
    field_200: Field200570 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get272(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter549]
    produces: List[str]
    responses: Responses570
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter551(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200571(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201183(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20288(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses571(BaseModel):
    field_200: Field200571 = Field(..., alias='200')
    field_201: Field201183 = Field(..., alias='201')
    field_202: Field20288 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post59(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter551]
    produces: List[str]
    responses: Responses571
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisDiscoveryK8sIoV1NamespacesNamespaceEndpointslices(BaseModel):
    delete: Delete81
    get: Get272
    parameters: List[Parameter549]
    post: Post59


class Parameter552(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200572(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20289(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses572(BaseModel):
    field_200: Field200572 = Field(..., alias='200')
    field_202: Field20289 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete82(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter552]
    produces: List[str]
    responses: Responses572
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200573(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses573(BaseModel):
    field_200: Field200573 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get273(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses573
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter553(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter554(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200574(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201184(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses574(BaseModel):
    field_200: Field200574 = Field(..., alias='200')
    field_201: Field201184 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch72(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter554]
    produces: List[str]
    responses: Responses574
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter555(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200575(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201185(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses575(BaseModel):
    field_200: Field200575 = Field(..., alias='200')
    field_201: Field201185 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put73(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter555]
    produces: List[str]
    responses: Responses575
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisDiscoveryK8sIoV1NamespacesNamespaceEndpointslicesName(BaseModel):
    delete: Delete82
    get: Get273
    parameters: List[Parameter553]
    patch: Patch72
    put: Put73


class Field200576(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses576(BaseModel):
    field_200: Field200576 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get274(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses576
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter556(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisDiscoveryK8sIoV1WatchEndpointslices(BaseModel):
    get: Get274
    parameters: List[Parameter556]


class Field200577(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses577(BaseModel):
    field_200: Field200577 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get275(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses577
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisDiscoveryK8sIoV1WatchNamespacesNamespaceEndpointslices(BaseModel):
    get: Get275
    parameters: List[Parameter556]


class Field200578(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses578(BaseModel):
    field_200: Field200578 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get276(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses578
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter558(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisDiscoveryK8sIoV1WatchNamespacesNamespaceEndpointslicesName(BaseModel):
    get: Get276
    parameters: List[Parameter558]


class Field200579(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses579(BaseModel):
    field_200: Field200579 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get277(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses579
    schemes: List[str]
    tags: List[str]


class FieldApisEventsK8sIo(BaseModel):
    get: Get277


class Field200580(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses580(BaseModel):
    field_200: Field200580 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get278(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses580
    schemes: List[str]
    tags: List[str]


class FieldApisEventsK8sIoV1(BaseModel):
    get: Get278


class Field200581(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses581(BaseModel):
    field_200: Field200581 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get279(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses581
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter559(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisEventsK8sIoV1Events(BaseModel):
    get: Get279
    parameters: List[Parameter559]


class Parameter560(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200582(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses582(BaseModel):
    field_200: Field200582 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete83(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter560]
    produces: List[str]
    responses: Responses582
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter561(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200583(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses583(BaseModel):
    field_200: Field200583 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get280(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter561]
    produces: List[str]
    responses: Responses583
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter563(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200584(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201186(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20290(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses584(BaseModel):
    field_200: Field200584 = Field(..., alias='200')
    field_201: Field201186 = Field(..., alias='201')
    field_202: Field20290 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post60(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter563]
    produces: List[str]
    responses: Responses584
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisEventsK8sIoV1NamespacesNamespaceEvents(BaseModel):
    delete: Delete83
    get: Get280
    parameters: List[Parameter561]
    post: Post60


class Parameter564(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200585(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20291(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses585(BaseModel):
    field_200: Field200585 = Field(..., alias='200')
    field_202: Field20291 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete84(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter564]
    produces: List[str]
    responses: Responses585
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200586(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses586(BaseModel):
    field_200: Field200586 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get281(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses586
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter565(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter566(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200587(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201187(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses587(BaseModel):
    field_200: Field200587 = Field(..., alias='200')
    field_201: Field201187 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch73(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter566]
    produces: List[str]
    responses: Responses587
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter567(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200588(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201188(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses588(BaseModel):
    field_200: Field200588 = Field(..., alias='200')
    field_201: Field201188 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put74(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter567]
    produces: List[str]
    responses: Responses588
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisEventsK8sIoV1NamespacesNamespaceEventsName(BaseModel):
    delete: Delete84
    get: Get281
    parameters: List[Parameter565]
    patch: Patch73
    put: Put74


class Field200589(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses589(BaseModel):
    field_200: Field200589 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get282(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses589
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter568(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisEventsK8sIoV1WatchEvents(BaseModel):
    get: Get282
    parameters: List[Parameter568]


class Field200590(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses590(BaseModel):
    field_200: Field200590 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get283(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses590
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisEventsK8sIoV1WatchNamespacesNamespaceEvents(BaseModel):
    get: Get283
    parameters: List[Parameter568]


class Field200591(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses591(BaseModel):
    field_200: Field200591 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get284(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses591
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter570(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisEventsK8sIoV1WatchNamespacesNamespaceEventsName(BaseModel):
    get: Get284
    parameters: List[Parameter570]


class Field200592(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses592(BaseModel):
    field_200: Field200592 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get285(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses592
    schemes: List[str]
    tags: List[str]


class FieldApisFlowcontrolApiserverK8sIo(BaseModel):
    get: Get285


class Field200593(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses593(BaseModel):
    field_200: Field200593 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get286(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses593
    schemes: List[str]
    tags: List[str]


class FieldApisFlowcontrolApiserverK8sIoV1(BaseModel):
    get: Get286


class Parameter571(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200594(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses594(BaseModel):
    field_200: Field200594 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete85(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter571]
    produces: List[str]
    responses: Responses594
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter572(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200595(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses595(BaseModel):
    field_200: Field200595 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get287(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter572]
    produces: List[str]
    responses: Responses595
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter574(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200596(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201189(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20292(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses596(BaseModel):
    field_200: Field200596 = Field(..., alias='200')
    field_201: Field201189 = Field(..., alias='201')
    field_202: Field20292 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post61(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter574]
    produces: List[str]
    responses: Responses596
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1Flowschemas(BaseModel):
    delete: Delete85
    get: Get287
    parameters: List[Parameter572]
    post: Post61


class Parameter575(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200597(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20293(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses597(BaseModel):
    field_200: Field200597 = Field(..., alias='200')
    field_202: Field20293 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete86(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter575]
    produces: List[str]
    responses: Responses597
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200598(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses598(BaseModel):
    field_200: Field200598 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get288(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses598
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter576(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter577(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200599(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201190(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses599(BaseModel):
    field_200: Field200599 = Field(..., alias='200')
    field_201: Field201190 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch74(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter577]
    produces: List[str]
    responses: Responses599
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter578(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200600(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201191(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses600(BaseModel):
    field_200: Field200600 = Field(..., alias='200')
    field_201: Field201191 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put75(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter578]
    produces: List[str]
    responses: Responses600
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1FlowschemasName(BaseModel):
    delete: Delete86
    get: Get288
    parameters: List[Parameter576]
    patch: Patch74
    put: Put75


class Field200601(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses601(BaseModel):
    field_200: Field200601 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get289(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses601
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter579(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter580(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200602(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201192(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses602(BaseModel):
    field_200: Field200602 = Field(..., alias='200')
    field_201: Field201192 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch75(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter580]
    produces: List[str]
    responses: Responses602
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter581(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200603(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201193(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses603(BaseModel):
    field_200: Field200603 = Field(..., alias='200')
    field_201: Field201193 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put76(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter581]
    produces: List[str]
    responses: Responses603
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1FlowschemasNameStatus(BaseModel):
    get: Get289
    parameters: List[Parameter579]
    patch: Patch75
    put: Put76


class Parameter582(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200604(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses604(BaseModel):
    field_200: Field200604 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete87(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter582]
    produces: List[str]
    responses: Responses604
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter583(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200605(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses605(BaseModel):
    field_200: Field200605 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get290(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter583]
    produces: List[str]
    responses: Responses605
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter585(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200606(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201194(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20294(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses606(BaseModel):
    field_200: Field200606 = Field(..., alias='200')
    field_201: Field201194 = Field(..., alias='201')
    field_202: Field20294 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post62(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter585]
    produces: List[str]
    responses: Responses606
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1Prioritylevelconfigurations(BaseModel):
    delete: Delete87
    get: Get290
    parameters: List[Parameter583]
    post: Post62


class Parameter586(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200607(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20295(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses607(BaseModel):
    field_200: Field200607 = Field(..., alias='200')
    field_202: Field20295 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete88(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter586]
    produces: List[str]
    responses: Responses607
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200608(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses608(BaseModel):
    field_200: Field200608 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get291(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses608
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter587(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter588(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200609(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201195(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses609(BaseModel):
    field_200: Field200609 = Field(..., alias='200')
    field_201: Field201195 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch76(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter588]
    produces: List[str]
    responses: Responses609
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter589(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200610(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201196(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses610(BaseModel):
    field_200: Field200610 = Field(..., alias='200')
    field_201: Field201196 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put77(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter589]
    produces: List[str]
    responses: Responses610
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1PrioritylevelconfigurationsName(BaseModel):
    delete: Delete88
    get: Get291
    parameters: List[Parameter587]
    patch: Patch76
    put: Put77


class Field200611(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses611(BaseModel):
    field_200: Field200611 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get292(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses611
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter590(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter591(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200612(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201197(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses612(BaseModel):
    field_200: Field200612 = Field(..., alias='200')
    field_201: Field201197 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch77(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter591]
    produces: List[str]
    responses: Responses612
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter592(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200613(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201198(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses613(BaseModel):
    field_200: Field200613 = Field(..., alias='200')
    field_201: Field201198 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put78(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter592]
    produces: List[str]
    responses: Responses613
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1PrioritylevelconfigurationsNameStatus(
    BaseModel
):
    get: Get292
    parameters: List[Parameter590]
    patch: Patch77
    put: Put78


class Field200614(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses614(BaseModel):
    field_200: Field200614 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get293(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses614
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter593(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisFlowcontrolApiserverK8sIoV1WatchFlowschemas(BaseModel):
    get: Get293
    parameters: List[Parameter593]


class Field200615(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses615(BaseModel):
    field_200: Field200615 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get294(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses615
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter594(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisFlowcontrolApiserverK8sIoV1WatchFlowschemasName(BaseModel):
    get: Get294
    parameters: List[Parameter594]


class Field200616(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses616(BaseModel):
    field_200: Field200616 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get295(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses616
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter595(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisFlowcontrolApiserverK8sIoV1WatchPrioritylevelconfigurations(BaseModel):
    get: Get295
    parameters: List[Parameter595]


class Field200617(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses617(BaseModel):
    field_200: Field200617 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get296(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses617
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter596(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisFlowcontrolApiserverK8sIoV1WatchPrioritylevelconfigurationsName(
    BaseModel
):
    get: Get296
    parameters: List[Parameter596]


class Field200618(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses618(BaseModel):
    field_200: Field200618 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get297(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses618
    schemes: List[str]
    tags: List[str]


class FieldApisFlowcontrolApiserverK8sIoV1beta3(BaseModel):
    get: Get297


class Parameter597(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200619(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses619(BaseModel):
    field_200: Field200619 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete89(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter597]
    produces: List[str]
    responses: Responses619
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter598(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200620(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses620(BaseModel):
    field_200: Field200620 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get298(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter598]
    produces: List[str]
    responses: Responses620
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter600(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200621(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201199(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20296(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses621(BaseModel):
    field_200: Field200621 = Field(..., alias='200')
    field_201: Field201199 = Field(..., alias='201')
    field_202: Field20296 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post63(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter600]
    produces: List[str]
    responses: Responses621
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1beta3Flowschemas(BaseModel):
    delete: Delete89
    get: Get298
    parameters: List[Parameter598]
    post: Post63


class Parameter601(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200622(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20297(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses622(BaseModel):
    field_200: Field200622 = Field(..., alias='200')
    field_202: Field20297 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete90(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter601]
    produces: List[str]
    responses: Responses622
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200623(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses623(BaseModel):
    field_200: Field200623 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get299(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses623
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter602(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter603(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200624(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201200(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses624(BaseModel):
    field_200: Field200624 = Field(..., alias='200')
    field_201: Field201200 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch78(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter603]
    produces: List[str]
    responses: Responses624
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter604(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200625(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201201(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses625(BaseModel):
    field_200: Field200625 = Field(..., alias='200')
    field_201: Field201201 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put79(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter604]
    produces: List[str]
    responses: Responses625
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1beta3FlowschemasName(BaseModel):
    delete: Delete90
    get: Get299
    parameters: List[Parameter602]
    patch: Patch78
    put: Put79


class Field200626(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses626(BaseModel):
    field_200: Field200626 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get300(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses626
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter605(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter606(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200627(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201202(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses627(BaseModel):
    field_200: Field200627 = Field(..., alias='200')
    field_201: Field201202 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch79(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter606]
    produces: List[str]
    responses: Responses627
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter607(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200628(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201203(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses628(BaseModel):
    field_200: Field200628 = Field(..., alias='200')
    field_201: Field201203 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put80(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter607]
    produces: List[str]
    responses: Responses628
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1beta3FlowschemasNameStatus(BaseModel):
    get: Get300
    parameters: List[Parameter605]
    patch: Patch79
    put: Put80


class Parameter608(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200629(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses629(BaseModel):
    field_200: Field200629 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete91(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter608]
    produces: List[str]
    responses: Responses629
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter609(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200630(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses630(BaseModel):
    field_200: Field200630 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get301(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter609]
    produces: List[str]
    responses: Responses630
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter611(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200631(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201204(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20298(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses631(BaseModel):
    field_200: Field200631 = Field(..., alias='200')
    field_201: Field201204 = Field(..., alias='201')
    field_202: Field20298 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post64(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter611]
    produces: List[str]
    responses: Responses631
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1beta3Prioritylevelconfigurations(BaseModel):
    delete: Delete91
    get: Get301
    parameters: List[Parameter609]
    post: Post64


class Parameter612(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200632(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field20299(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses632(BaseModel):
    field_200: Field200632 = Field(..., alias='200')
    field_202: Field20299 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete92(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter612]
    produces: List[str]
    responses: Responses632
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200633(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses633(BaseModel):
    field_200: Field200633 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get302(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses633
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter613(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter614(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200634(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201205(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses634(BaseModel):
    field_200: Field200634 = Field(..., alias='200')
    field_201: Field201205 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch80(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter614]
    produces: List[str]
    responses: Responses634
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter615(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200635(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201206(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses635(BaseModel):
    field_200: Field200635 = Field(..., alias='200')
    field_201: Field201206 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put81(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter615]
    produces: List[str]
    responses: Responses635
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1beta3PrioritylevelconfigurationsName(
    BaseModel
):
    delete: Delete92
    get: Get302
    parameters: List[Parameter613]
    patch: Patch80
    put: Put81


class Field200636(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses636(BaseModel):
    field_200: Field200636 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get303(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses636
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter616(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter617(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200637(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201207(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses637(BaseModel):
    field_200: Field200637 = Field(..., alias='200')
    field_201: Field201207 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch81(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter617]
    produces: List[str]
    responses: Responses637
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter618(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200638(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201208(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses638(BaseModel):
    field_200: Field200638 = Field(..., alias='200')
    field_201: Field201208 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put82(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter618]
    produces: List[str]
    responses: Responses638
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisFlowcontrolApiserverK8sIoV1beta3PrioritylevelconfigurationsNameStatus(
    BaseModel
):
    get: Get303
    parameters: List[Parameter616]
    patch: Patch81
    put: Put82


class Field200639(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses639(BaseModel):
    field_200: Field200639 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get304(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses639
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter619(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisFlowcontrolApiserverK8sIoV1beta3WatchFlowschemas(BaseModel):
    get: Get304
    parameters: List[Parameter619]


class Field200640(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses640(BaseModel):
    field_200: Field200640 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get305(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses640
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter620(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisFlowcontrolApiserverK8sIoV1beta3WatchFlowschemasName(BaseModel):
    get: Get305
    parameters: List[Parameter620]


class Field200641(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses641(BaseModel):
    field_200: Field200641 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get306(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses641
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter621(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisFlowcontrolApiserverK8sIoV1beta3WatchPrioritylevelconfigurations(
    BaseModel
):
    get: Get306
    parameters: List[Parameter621]


class Field200642(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses642(BaseModel):
    field_200: Field200642 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get307(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses642
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter622(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisFlowcontrolApiserverK8sIoV1beta3WatchPrioritylevelconfigurationsName(
    BaseModel
):
    get: Get307
    parameters: List[Parameter622]


class Field200643(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses643(BaseModel):
    field_200: Field200643 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get308(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses643
    schemes: List[str]
    tags: List[str]


class FieldApisInternalApiserverK8sIo(BaseModel):
    get: Get308


class Field200644(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses644(BaseModel):
    field_200: Field200644 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get309(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses644
    schemes: List[str]
    tags: List[str]


class FieldApisInternalApiserverK8sIoV1alpha1(BaseModel):
    get: Get309


class Parameter623(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200645(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses645(BaseModel):
    field_200: Field200645 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete93(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter623]
    produces: List[str]
    responses: Responses645
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter624(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200646(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses646(BaseModel):
    field_200: Field200646 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get310(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter624]
    produces: List[str]
    responses: Responses646
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter626(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200647(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201209(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202100(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses647(BaseModel):
    field_200: Field200647 = Field(..., alias='200')
    field_201: Field201209 = Field(..., alias='201')
    field_202: Field202100 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post65(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter626]
    produces: List[str]
    responses: Responses647
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisInternalApiserverK8sIoV1alpha1Storageversions(BaseModel):
    delete: Delete93
    get: Get310
    parameters: List[Parameter624]
    post: Post65


class Parameter627(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200648(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202101(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses648(BaseModel):
    field_200: Field200648 = Field(..., alias='200')
    field_202: Field202101 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete94(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter627]
    produces: List[str]
    responses: Responses648
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200649(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses649(BaseModel):
    field_200: Field200649 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get311(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses649
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter628(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter629(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200650(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201210(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses650(BaseModel):
    field_200: Field200650 = Field(..., alias='200')
    field_201: Field201210 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch82(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter629]
    produces: List[str]
    responses: Responses650
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter630(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200651(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201211(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses651(BaseModel):
    field_200: Field200651 = Field(..., alias='200')
    field_201: Field201211 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put83(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter630]
    produces: List[str]
    responses: Responses651
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisInternalApiserverK8sIoV1alpha1StorageversionsName(BaseModel):
    delete: Delete94
    get: Get311
    parameters: List[Parameter628]
    patch: Patch82
    put: Put83


class Field200652(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses652(BaseModel):
    field_200: Field200652 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get312(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses652
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter631(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter632(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200653(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201212(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses653(BaseModel):
    field_200: Field200653 = Field(..., alias='200')
    field_201: Field201212 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch83(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter632]
    produces: List[str]
    responses: Responses653
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter633(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200654(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201213(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses654(BaseModel):
    field_200: Field200654 = Field(..., alias='200')
    field_201: Field201213 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put84(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter633]
    produces: List[str]
    responses: Responses654
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisInternalApiserverK8sIoV1alpha1StorageversionsNameStatus(BaseModel):
    get: Get312
    parameters: List[Parameter631]
    patch: Patch83
    put: Put84


class Field200655(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses655(BaseModel):
    field_200: Field200655 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get313(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses655
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter634(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisInternalApiserverK8sIoV1alpha1WatchStorageversions(BaseModel):
    get: Get313
    parameters: List[Parameter634]


class Field200656(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses656(BaseModel):
    field_200: Field200656 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get314(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses656
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter635(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisInternalApiserverK8sIoV1alpha1WatchStorageversionsName(BaseModel):
    get: Get314
    parameters: List[Parameter635]


class Field200657(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses657(BaseModel):
    field_200: Field200657 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get315(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses657
    schemes: List[str]
    tags: List[str]


class FieldApisNetworkingK8sIo(BaseModel):
    get: Get315


class Field200658(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses658(BaseModel):
    field_200: Field200658 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get316(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses658
    schemes: List[str]
    tags: List[str]


class FieldApisNetworkingK8sIoV1(BaseModel):
    get: Get316


class Parameter636(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200659(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses659(BaseModel):
    field_200: Field200659 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete95(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter636]
    produces: List[str]
    responses: Responses659
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter637(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200660(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses660(BaseModel):
    field_200: Field200660 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get317(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter637]
    produces: List[str]
    responses: Responses660
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter639(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200661(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201214(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202102(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses661(BaseModel):
    field_200: Field200661 = Field(..., alias='200')
    field_201: Field201214 = Field(..., alias='201')
    field_202: Field202102 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post66(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter639]
    produces: List[str]
    responses: Responses661
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1Ingressclasses(BaseModel):
    delete: Delete95
    get: Get317
    parameters: List[Parameter637]
    post: Post66


class Parameter640(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200662(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202103(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses662(BaseModel):
    field_200: Field200662 = Field(..., alias='200')
    field_202: Field202103 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete96(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter640]
    produces: List[str]
    responses: Responses662
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200663(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses663(BaseModel):
    field_200: Field200663 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get318(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses663
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter641(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter642(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200664(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201215(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses664(BaseModel):
    field_200: Field200664 = Field(..., alias='200')
    field_201: Field201215 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch84(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter642]
    produces: List[str]
    responses: Responses664
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter643(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200665(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201216(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses665(BaseModel):
    field_200: Field200665 = Field(..., alias='200')
    field_201: Field201216 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put85(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter643]
    produces: List[str]
    responses: Responses665
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1IngressclassesName(BaseModel):
    delete: Delete96
    get: Get318
    parameters: List[Parameter641]
    patch: Patch84
    put: Put85


class Field200666(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses666(BaseModel):
    field_200: Field200666 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get319(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses666
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter644(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisNetworkingK8sIoV1Ingresses(BaseModel):
    get: Get319
    parameters: List[Parameter644]


class Parameter645(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200667(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses667(BaseModel):
    field_200: Field200667 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete97(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter645]
    produces: List[str]
    responses: Responses667
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter646(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200668(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses668(BaseModel):
    field_200: Field200668 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get320(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter646]
    produces: List[str]
    responses: Responses668
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter648(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200669(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201217(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202104(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses669(BaseModel):
    field_200: Field200669 = Field(..., alias='200')
    field_201: Field201217 = Field(..., alias='201')
    field_202: Field202104 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post67(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter648]
    produces: List[str]
    responses: Responses669
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1NamespacesNamespaceIngresses(BaseModel):
    delete: Delete97
    get: Get320
    parameters: List[Parameter646]
    post: Post67


class Parameter649(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200670(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202105(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses670(BaseModel):
    field_200: Field200670 = Field(..., alias='200')
    field_202: Field202105 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete98(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter649]
    produces: List[str]
    responses: Responses670
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200671(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses671(BaseModel):
    field_200: Field200671 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get321(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses671
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter650(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter651(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200672(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201218(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses672(BaseModel):
    field_200: Field200672 = Field(..., alias='200')
    field_201: Field201218 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch85(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter651]
    produces: List[str]
    responses: Responses672
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter652(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200673(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201219(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses673(BaseModel):
    field_200: Field200673 = Field(..., alias='200')
    field_201: Field201219 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put86(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter652]
    produces: List[str]
    responses: Responses673
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1NamespacesNamespaceIngressesName(BaseModel):
    delete: Delete98
    get: Get321
    parameters: List[Parameter650]
    patch: Patch85
    put: Put86


class Field200674(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses674(BaseModel):
    field_200: Field200674 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get322(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses674
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter653(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter654(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200675(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201220(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses675(BaseModel):
    field_200: Field200675 = Field(..., alias='200')
    field_201: Field201220 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch86(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter654]
    produces: List[str]
    responses: Responses675
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter655(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200676(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201221(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses676(BaseModel):
    field_200: Field200676 = Field(..., alias='200')
    field_201: Field201221 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put87(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter655]
    produces: List[str]
    responses: Responses676
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1NamespacesNamespaceIngressesNameStatus(BaseModel):
    get: Get322
    parameters: List[Parameter653]
    patch: Patch86
    put: Put87


class Parameter656(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200677(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses677(BaseModel):
    field_200: Field200677 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete99(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter656]
    produces: List[str]
    responses: Responses677
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter657(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200678(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses678(BaseModel):
    field_200: Field200678 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get323(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter657]
    produces: List[str]
    responses: Responses678
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter659(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200679(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201222(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202106(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses679(BaseModel):
    field_200: Field200679 = Field(..., alias='200')
    field_201: Field201222 = Field(..., alias='201')
    field_202: Field202106 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post68(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter659]
    produces: List[str]
    responses: Responses679
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1NamespacesNamespaceNetworkpolicies(BaseModel):
    delete: Delete99
    get: Get323
    parameters: List[Parameter657]
    post: Post68


class Parameter660(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200680(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202107(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses680(BaseModel):
    field_200: Field200680 = Field(..., alias='200')
    field_202: Field202107 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete100(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter660]
    produces: List[str]
    responses: Responses680
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200681(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses681(BaseModel):
    field_200: Field200681 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get324(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses681
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter661(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter662(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200682(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201223(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses682(BaseModel):
    field_200: Field200682 = Field(..., alias='200')
    field_201: Field201223 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch87(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter662]
    produces: List[str]
    responses: Responses682
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter663(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200683(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201224(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses683(BaseModel):
    field_200: Field200683 = Field(..., alias='200')
    field_201: Field201224 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put88(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter663]
    produces: List[str]
    responses: Responses683
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1NamespacesNamespaceNetworkpoliciesName(BaseModel):
    delete: Delete100
    get: Get324
    parameters: List[Parameter661]
    patch: Patch87
    put: Put88


class Field200684(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses684(BaseModel):
    field_200: Field200684 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get325(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses684
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter664(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisNetworkingK8sIoV1Networkpolicies(BaseModel):
    get: Get325
    parameters: List[Parameter664]


class Field200685(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses685(BaseModel):
    field_200: Field200685 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get326(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses685
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1WatchIngressclasses(BaseModel):
    get: Get326
    parameters: List[Parameter664]


class Field200686(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses686(BaseModel):
    field_200: Field200686 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get327(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses686
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter666(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisNetworkingK8sIoV1WatchIngressclassesName(BaseModel):
    get: Get327
    parameters: List[Parameter666]


class Field200687(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses687(BaseModel):
    field_200: Field200687 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get328(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses687
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter667(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisNetworkingK8sIoV1WatchIngresses(BaseModel):
    get: Get328
    parameters: List[Parameter667]


class Field200688(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses688(BaseModel):
    field_200: Field200688 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get329(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses688
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1WatchNamespacesNamespaceIngresses(BaseModel):
    get: Get329
    parameters: List[Parameter667]


class Field200689(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses689(BaseModel):
    field_200: Field200689 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get330(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses689
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter669(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisNetworkingK8sIoV1WatchNamespacesNamespaceIngressesName(BaseModel):
    get: Get330
    parameters: List[Parameter669]


class Field200690(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses690(BaseModel):
    field_200: Field200690 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get331(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses690
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter670(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisNetworkingK8sIoV1WatchNamespacesNamespaceNetworkpolicies(BaseModel):
    get: Get331
    parameters: List[Parameter670]


class Field200691(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses691(BaseModel):
    field_200: Field200691 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get332(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses691
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter671(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisNetworkingK8sIoV1WatchNamespacesNamespaceNetworkpoliciesName(BaseModel):
    get: Get332
    parameters: List[Parameter671]


class Field200692(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses692(BaseModel):
    field_200: Field200692 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get333(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses692
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter672(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisNetworkingK8sIoV1WatchNetworkpolicies(BaseModel):
    get: Get333
    parameters: List[Parameter672]


class Field200693(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses693(BaseModel):
    field_200: Field200693 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get334(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses693
    schemes: List[str]
    tags: List[str]


class FieldApisNetworkingK8sIoV1beta1(BaseModel):
    get: Get334


class Parameter673(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200694(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses694(BaseModel):
    field_200: Field200694 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete101(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter673]
    produces: List[str]
    responses: Responses694
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter674(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200695(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses695(BaseModel):
    field_200: Field200695 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get335(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter674]
    produces: List[str]
    responses: Responses695
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter676(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200696(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201225(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202108(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses696(BaseModel):
    field_200: Field200696 = Field(..., alias='200')
    field_201: Field201225 = Field(..., alias='201')
    field_202: Field202108 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post69(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter676]
    produces: List[str]
    responses: Responses696
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1beta1Ipaddresses(BaseModel):
    delete: Delete101
    get: Get335
    parameters: List[Parameter674]
    post: Post69


class Parameter677(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200697(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202109(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses697(BaseModel):
    field_200: Field200697 = Field(..., alias='200')
    field_202: Field202109 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete102(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter677]
    produces: List[str]
    responses: Responses697
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200698(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses698(BaseModel):
    field_200: Field200698 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get336(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses698
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter678(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter679(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200699(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201226(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses699(BaseModel):
    field_200: Field200699 = Field(..., alias='200')
    field_201: Field201226 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch88(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter679]
    produces: List[str]
    responses: Responses699
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter680(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200700(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201227(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses700(BaseModel):
    field_200: Field200700 = Field(..., alias='200')
    field_201: Field201227 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put89(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter680]
    produces: List[str]
    responses: Responses700
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1beta1IpaddressesName(BaseModel):
    delete: Delete102
    get: Get336
    parameters: List[Parameter678]
    patch: Patch88
    put: Put89


class Parameter681(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200701(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses701(BaseModel):
    field_200: Field200701 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete103(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter681]
    produces: List[str]
    responses: Responses701
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter682(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200702(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses702(BaseModel):
    field_200: Field200702 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get337(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter682]
    produces: List[str]
    responses: Responses702
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter684(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200703(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201228(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202110(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses703(BaseModel):
    field_200: Field200703 = Field(..., alias='200')
    field_201: Field201228 = Field(..., alias='201')
    field_202: Field202110 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post70(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter684]
    produces: List[str]
    responses: Responses703
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1beta1Servicecidrs(BaseModel):
    delete: Delete103
    get: Get337
    parameters: List[Parameter682]
    post: Post70


class Parameter685(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200704(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202111(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses704(BaseModel):
    field_200: Field200704 = Field(..., alias='200')
    field_202: Field202111 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete104(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter685]
    produces: List[str]
    responses: Responses704
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200705(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses705(BaseModel):
    field_200: Field200705 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get338(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses705
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter686(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter687(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200706(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201229(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses706(BaseModel):
    field_200: Field200706 = Field(..., alias='200')
    field_201: Field201229 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch89(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter687]
    produces: List[str]
    responses: Responses706
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter688(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200707(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201230(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses707(BaseModel):
    field_200: Field200707 = Field(..., alias='200')
    field_201: Field201230 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put90(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter688]
    produces: List[str]
    responses: Responses707
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1beta1ServicecidrsName(BaseModel):
    delete: Delete104
    get: Get338
    parameters: List[Parameter686]
    patch: Patch89
    put: Put90


class Field200708(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses708(BaseModel):
    field_200: Field200708 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get339(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses708
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter689(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter690(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200709(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201231(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses709(BaseModel):
    field_200: Field200709 = Field(..., alias='200')
    field_201: Field201231 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch90(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter690]
    produces: List[str]
    responses: Responses709
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter691(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200710(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201232(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses710(BaseModel):
    field_200: Field200710 = Field(..., alias='200')
    field_201: Field201232 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put91(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter691]
    produces: List[str]
    responses: Responses710
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNetworkingK8sIoV1beta1ServicecidrsNameStatus(BaseModel):
    get: Get339
    parameters: List[Parameter689]
    patch: Patch90
    put: Put91


class Field200711(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses711(BaseModel):
    field_200: Field200711 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get340(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses711
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter692(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisNetworkingK8sIoV1beta1WatchIpaddresses(BaseModel):
    get: Get340
    parameters: List[Parameter692]


class Field200712(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses712(BaseModel):
    field_200: Field200712 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get341(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses712
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter693(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisNetworkingK8sIoV1beta1WatchIpaddressesName(BaseModel):
    get: Get341
    parameters: List[Parameter693]


class Field200713(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses713(BaseModel):
    field_200: Field200713 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get342(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses713
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter694(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisNetworkingK8sIoV1beta1WatchServicecidrs(BaseModel):
    get: Get342
    parameters: List[Parameter694]


class Field200714(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses714(BaseModel):
    field_200: Field200714 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get343(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses714
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter695(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisNetworkingK8sIoV1beta1WatchServicecidrsName(BaseModel):
    get: Get343
    parameters: List[Parameter695]


class Field200715(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses715(BaseModel):
    field_200: Field200715 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get344(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses715
    schemes: List[str]
    tags: List[str]


class FieldApisNodeK8sIo(BaseModel):
    get: Get344


class Field200716(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses716(BaseModel):
    field_200: Field200716 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get345(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses716
    schemes: List[str]
    tags: List[str]


class FieldApisNodeK8sIoV1(BaseModel):
    get: Get345


class Parameter696(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200717(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses717(BaseModel):
    field_200: Field200717 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete105(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter696]
    produces: List[str]
    responses: Responses717
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter697(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200718(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses718(BaseModel):
    field_200: Field200718 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get346(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter697]
    produces: List[str]
    responses: Responses718
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter699(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200719(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201233(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202112(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses719(BaseModel):
    field_200: Field200719 = Field(..., alias='200')
    field_201: Field201233 = Field(..., alias='201')
    field_202: Field202112 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post71(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter699]
    produces: List[str]
    responses: Responses719
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNodeK8sIoV1Runtimeclasses(BaseModel):
    delete: Delete105
    get: Get346
    parameters: List[Parameter697]
    post: Post71


class Parameter700(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200720(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202113(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses720(BaseModel):
    field_200: Field200720 = Field(..., alias='200')
    field_202: Field202113 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete106(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter700]
    produces: List[str]
    responses: Responses720
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200721(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses721(BaseModel):
    field_200: Field200721 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get347(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses721
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter701(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter702(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200722(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201234(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses722(BaseModel):
    field_200: Field200722 = Field(..., alias='200')
    field_201: Field201234 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch91(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter702]
    produces: List[str]
    responses: Responses722
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter703(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200723(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201235(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses723(BaseModel):
    field_200: Field200723 = Field(..., alias='200')
    field_201: Field201235 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put92(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter703]
    produces: List[str]
    responses: Responses723
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisNodeK8sIoV1RuntimeclassesName(BaseModel):
    delete: Delete106
    get: Get347
    parameters: List[Parameter701]
    patch: Patch91
    put: Put92


class Field200724(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses724(BaseModel):
    field_200: Field200724 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get348(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses724
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter704(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisNodeK8sIoV1WatchRuntimeclasses(BaseModel):
    get: Get348
    parameters: List[Parameter704]


class Field200725(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses725(BaseModel):
    field_200: Field200725 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get349(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses725
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter705(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisNodeK8sIoV1WatchRuntimeclassesName(BaseModel):
    get: Get349
    parameters: List[Parameter705]


class Field200726(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses726(BaseModel):
    field_200: Field200726 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get350(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses726
    schemes: List[str]
    tags: List[str]


class FieldApisPolicy(BaseModel):
    get: Get350


class Field200727(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses727(BaseModel):
    field_200: Field200727 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get351(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses727
    schemes: List[str]
    tags: List[str]


class FieldApisPolicyV1(BaseModel):
    get: Get351


class Parameter706(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200728(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses728(BaseModel):
    field_200: Field200728 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete107(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter706]
    produces: List[str]
    responses: Responses728
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter707(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200729(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses729(BaseModel):
    field_200: Field200729 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get352(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter707]
    produces: List[str]
    responses: Responses729
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter709(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200730(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201236(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202114(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses730(BaseModel):
    field_200: Field200730 = Field(..., alias='200')
    field_201: Field201236 = Field(..., alias='201')
    field_202: Field202114 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post72(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter709]
    produces: List[str]
    responses: Responses730
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisPolicyV1NamespacesNamespacePoddisruptionbudgets(BaseModel):
    delete: Delete107
    get: Get352
    parameters: List[Parameter707]
    post: Post72


class Parameter710(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200731(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202115(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses731(BaseModel):
    field_200: Field200731 = Field(..., alias='200')
    field_202: Field202115 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete108(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter710]
    produces: List[str]
    responses: Responses731
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200732(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses732(BaseModel):
    field_200: Field200732 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get353(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses732
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter711(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter712(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200733(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201237(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses733(BaseModel):
    field_200: Field200733 = Field(..., alias='200')
    field_201: Field201237 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch92(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter712]
    produces: List[str]
    responses: Responses733
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter713(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200734(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201238(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses734(BaseModel):
    field_200: Field200734 = Field(..., alias='200')
    field_201: Field201238 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put93(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter713]
    produces: List[str]
    responses: Responses734
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisPolicyV1NamespacesNamespacePoddisruptionbudgetsName(BaseModel):
    delete: Delete108
    get: Get353
    parameters: List[Parameter711]
    patch: Patch92
    put: Put93


class Field200735(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses735(BaseModel):
    field_200: Field200735 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get354(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses735
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter714(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter715(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200736(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201239(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses736(BaseModel):
    field_200: Field200736 = Field(..., alias='200')
    field_201: Field201239 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch93(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter715]
    produces: List[str]
    responses: Responses736
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter716(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200737(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201240(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses737(BaseModel):
    field_200: Field200737 = Field(..., alias='200')
    field_201: Field201240 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put94(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter716]
    produces: List[str]
    responses: Responses737
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisPolicyV1NamespacesNamespacePoddisruptionbudgetsNameStatus(BaseModel):
    get: Get354
    parameters: List[Parameter714]
    patch: Patch93
    put: Put94


class Field200738(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses738(BaseModel):
    field_200: Field200738 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get355(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses738
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter717(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisPolicyV1Poddisruptionbudgets(BaseModel):
    get: Get355
    parameters: List[Parameter717]


class Field200739(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses739(BaseModel):
    field_200: Field200739 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get356(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses739
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisPolicyV1WatchNamespacesNamespacePoddisruptionbudgets(BaseModel):
    get: Get356
    parameters: List[Parameter717]


class Field200740(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses740(BaseModel):
    field_200: Field200740 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get357(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses740
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter719(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisPolicyV1WatchNamespacesNamespacePoddisruptionbudgetsName(BaseModel):
    get: Get357
    parameters: List[Parameter719]


class Field200741(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses741(BaseModel):
    field_200: Field200741 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get358(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses741
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter720(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisPolicyV1WatchPoddisruptionbudgets(BaseModel):
    get: Get358
    parameters: List[Parameter720]


class Field200742(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses742(BaseModel):
    field_200: Field200742 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get359(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses742
    schemes: List[str]
    tags: List[str]


class FieldApisRbacAuthorizationK8sIo(BaseModel):
    get: Get359


class Field200743(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses743(BaseModel):
    field_200: Field200743 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get360(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses743
    schemes: List[str]
    tags: List[str]


class FieldApisRbacAuthorizationK8sIoV1(BaseModel):
    get: Get360


class Parameter721(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200744(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses744(BaseModel):
    field_200: Field200744 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete109(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter721]
    produces: List[str]
    responses: Responses744
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter722(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200745(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses745(BaseModel):
    field_200: Field200745 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get361(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter722]
    produces: List[str]
    responses: Responses745
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter724(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200746(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201241(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202116(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses746(BaseModel):
    field_200: Field200746 = Field(..., alias='200')
    field_201: Field201241 = Field(..., alias='201')
    field_202: Field202116 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post73(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter724]
    produces: List[str]
    responses: Responses746
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1Clusterrolebindings(BaseModel):
    delete: Delete109
    get: Get361
    parameters: List[Parameter722]
    post: Post73


class Parameter725(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200747(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202117(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses747(BaseModel):
    field_200: Field200747 = Field(..., alias='200')
    field_202: Field202117 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete110(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter725]
    produces: List[str]
    responses: Responses747
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200748(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses748(BaseModel):
    field_200: Field200748 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get362(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses748
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter726(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter727(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200749(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201242(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses749(BaseModel):
    field_200: Field200749 = Field(..., alias='200')
    field_201: Field201242 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch94(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter727]
    produces: List[str]
    responses: Responses749
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter728(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200750(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201243(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses750(BaseModel):
    field_200: Field200750 = Field(..., alias='200')
    field_201: Field201243 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put95(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter728]
    produces: List[str]
    responses: Responses750
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1ClusterrolebindingsName(BaseModel):
    delete: Delete110
    get: Get362
    parameters: List[Parameter726]
    patch: Patch94
    put: Put95


class Parameter729(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200751(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses751(BaseModel):
    field_200: Field200751 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete111(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter729]
    produces: List[str]
    responses: Responses751
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter730(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200752(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses752(BaseModel):
    field_200: Field200752 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get363(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter730]
    produces: List[str]
    responses: Responses752
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter732(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200753(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201244(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202118(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses753(BaseModel):
    field_200: Field200753 = Field(..., alias='200')
    field_201: Field201244 = Field(..., alias='201')
    field_202: Field202118 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post74(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter732]
    produces: List[str]
    responses: Responses753
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1Clusterroles(BaseModel):
    delete: Delete111
    get: Get363
    parameters: List[Parameter730]
    post: Post74


class Parameter733(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200754(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202119(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses754(BaseModel):
    field_200: Field200754 = Field(..., alias='200')
    field_202: Field202119 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete112(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter733]
    produces: List[str]
    responses: Responses754
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200755(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses755(BaseModel):
    field_200: Field200755 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get364(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses755
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter734(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter735(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200756(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201245(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses756(BaseModel):
    field_200: Field200756 = Field(..., alias='200')
    field_201: Field201245 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch95(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter735]
    produces: List[str]
    responses: Responses756
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter736(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200757(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201246(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses757(BaseModel):
    field_200: Field200757 = Field(..., alias='200')
    field_201: Field201246 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put96(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter736]
    produces: List[str]
    responses: Responses757
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1ClusterrolesName(BaseModel):
    delete: Delete112
    get: Get364
    parameters: List[Parameter734]
    patch: Patch95
    put: Put96


class Parameter737(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200758(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses758(BaseModel):
    field_200: Field200758 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete113(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter737]
    produces: List[str]
    responses: Responses758
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter738(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200759(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses759(BaseModel):
    field_200: Field200759 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get365(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter738]
    produces: List[str]
    responses: Responses759
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter740(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200760(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201247(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202120(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses760(BaseModel):
    field_200: Field200760 = Field(..., alias='200')
    field_201: Field201247 = Field(..., alias='201')
    field_202: Field202120 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post75(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter740]
    produces: List[str]
    responses: Responses760
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1NamespacesNamespaceRolebindings(BaseModel):
    delete: Delete113
    get: Get365
    parameters: List[Parameter738]
    post: Post75


class Parameter741(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200761(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202121(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses761(BaseModel):
    field_200: Field200761 = Field(..., alias='200')
    field_202: Field202121 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete114(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter741]
    produces: List[str]
    responses: Responses761
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200762(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses762(BaseModel):
    field_200: Field200762 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get366(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses762
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter742(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter743(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200763(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201248(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses763(BaseModel):
    field_200: Field200763 = Field(..., alias='200')
    field_201: Field201248 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch96(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter743]
    produces: List[str]
    responses: Responses763
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter744(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200764(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201249(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses764(BaseModel):
    field_200: Field200764 = Field(..., alias='200')
    field_201: Field201249 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put97(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter744]
    produces: List[str]
    responses: Responses764
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1NamespacesNamespaceRolebindingsName(BaseModel):
    delete: Delete114
    get: Get366
    parameters: List[Parameter742]
    patch: Patch96
    put: Put97


class Parameter745(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200765(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses765(BaseModel):
    field_200: Field200765 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete115(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter745]
    produces: List[str]
    responses: Responses765
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter746(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200766(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses766(BaseModel):
    field_200: Field200766 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get367(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter746]
    produces: List[str]
    responses: Responses766
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter748(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200767(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201250(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202122(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses767(BaseModel):
    field_200: Field200767 = Field(..., alias='200')
    field_201: Field201250 = Field(..., alias='201')
    field_202: Field202122 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post76(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter748]
    produces: List[str]
    responses: Responses767
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1NamespacesNamespaceRoles(BaseModel):
    delete: Delete115
    get: Get367
    parameters: List[Parameter746]
    post: Post76


class Parameter749(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200768(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202123(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses768(BaseModel):
    field_200: Field200768 = Field(..., alias='200')
    field_202: Field202123 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete116(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter749]
    produces: List[str]
    responses: Responses768
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200769(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses769(BaseModel):
    field_200: Field200769 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get368(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses769
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter750(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter751(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200770(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201251(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses770(BaseModel):
    field_200: Field200770 = Field(..., alias='200')
    field_201: Field201251 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch97(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter751]
    produces: List[str]
    responses: Responses770
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter752(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200771(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201252(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses771(BaseModel):
    field_200: Field200771 = Field(..., alias='200')
    field_201: Field201252 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put98(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter752]
    produces: List[str]
    responses: Responses771
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1NamespacesNamespaceRolesName(BaseModel):
    delete: Delete116
    get: Get368
    parameters: List[Parameter750]
    patch: Patch97
    put: Put98


class Field200772(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses772(BaseModel):
    field_200: Field200772 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get369(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses772
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter753(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisRbacAuthorizationK8sIoV1Rolebindings(BaseModel):
    get: Get369
    parameters: List[Parameter753]


class Field200773(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses773(BaseModel):
    field_200: Field200773 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get370(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses773
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1Roles(BaseModel):
    get: Get370
    parameters: List[Parameter753]


class Field200774(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses774(BaseModel):
    field_200: Field200774 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get371(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses774
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1WatchClusterrolebindings(BaseModel):
    get: Get371
    parameters: List[Parameter753]


class Field200775(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses775(BaseModel):
    field_200: Field200775 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get372(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses775
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter756(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisRbacAuthorizationK8sIoV1WatchClusterrolebindingsName(BaseModel):
    get: Get372
    parameters: List[Parameter756]


class Field200776(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses776(BaseModel):
    field_200: Field200776 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get373(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses776
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter757(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisRbacAuthorizationK8sIoV1WatchClusterroles(BaseModel):
    get: Get373
    parameters: List[Parameter757]


class Field200777(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses777(BaseModel):
    field_200: Field200777 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get374(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses777
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter758(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisRbacAuthorizationK8sIoV1WatchClusterrolesName(BaseModel):
    get: Get374
    parameters: List[Parameter758]


class Field200778(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses778(BaseModel):
    field_200: Field200778 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get375(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses778
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter759(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisRbacAuthorizationK8sIoV1WatchNamespacesNamespaceRolebindings(BaseModel):
    get: Get375
    parameters: List[Parameter759]


class Field200779(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses779(BaseModel):
    field_200: Field200779 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get376(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses779
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter760(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisRbacAuthorizationK8sIoV1WatchNamespacesNamespaceRolebindingsName(
    BaseModel
):
    get: Get376
    parameters: List[Parameter760]


class Field200780(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses780(BaseModel):
    field_200: Field200780 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get377(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses780
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter761(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisRbacAuthorizationK8sIoV1WatchNamespacesNamespaceRoles(BaseModel):
    get: Get377
    parameters: List[Parameter761]


class Field200781(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses781(BaseModel):
    field_200: Field200781 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get378(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses781
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter762(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisRbacAuthorizationK8sIoV1WatchNamespacesNamespaceRolesName(BaseModel):
    get: Get378
    parameters: List[Parameter762]


class Field200782(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses782(BaseModel):
    field_200: Field200782 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get379(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses782
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter763(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisRbacAuthorizationK8sIoV1WatchRolebindings(BaseModel):
    get: Get379
    parameters: List[Parameter763]


class Field200783(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses783(BaseModel):
    field_200: Field200783 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get380(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses783
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisRbacAuthorizationK8sIoV1WatchRoles(BaseModel):
    get: Get380
    parameters: List[Parameter763]


class Field200784(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses784(BaseModel):
    field_200: Field200784 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get381(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses784
    schemes: List[str]
    tags: List[str]


class FieldApisResourceK8sIo(BaseModel):
    get: Get381


class Field200785(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses785(BaseModel):
    field_200: Field200785 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get382(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses785
    schemes: List[str]
    tags: List[str]


class FieldApisResourceK8sIoV1alpha3(BaseModel):
    get: Get382


class Parameter765(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200786(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses786(BaseModel):
    field_200: Field200786 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete117(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter765]
    produces: List[str]
    responses: Responses786
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter766(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200787(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses787(BaseModel):
    field_200: Field200787 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get383(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter766]
    produces: List[str]
    responses: Responses787
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter768(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200788(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201253(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202124(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses788(BaseModel):
    field_200: Field200788 = Field(..., alias='200')
    field_201: Field201253 = Field(..., alias='201')
    field_202: Field202124 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post77(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter768]
    produces: List[str]
    responses: Responses788
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3Deviceclasses(BaseModel):
    delete: Delete117
    get: Get383
    parameters: List[Parameter766]
    post: Post77


class Parameter769(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200789(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202125(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses789(BaseModel):
    field_200: Field200789 = Field(..., alias='200')
    field_202: Field202125 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete118(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter769]
    produces: List[str]
    responses: Responses789
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200790(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses790(BaseModel):
    field_200: Field200790 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get384(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses790
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter770(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter771(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200791(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201254(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses791(BaseModel):
    field_200: Field200791 = Field(..., alias='200')
    field_201: Field201254 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch98(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter771]
    produces: List[str]
    responses: Responses791
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter772(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200792(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201255(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses792(BaseModel):
    field_200: Field200792 = Field(..., alias='200')
    field_201: Field201255 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put99(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter772]
    produces: List[str]
    responses: Responses792
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3DeviceclassesName(BaseModel):
    delete: Delete118
    get: Get384
    parameters: List[Parameter770]
    patch: Patch98
    put: Put99


class Parameter773(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200793(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses793(BaseModel):
    field_200: Field200793 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete119(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter773]
    produces: List[str]
    responses: Responses793
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter774(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200794(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses794(BaseModel):
    field_200: Field200794 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get385(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter774]
    produces: List[str]
    responses: Responses794
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter776(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200795(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201256(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202126(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses795(BaseModel):
    field_200: Field200795 = Field(..., alias='200')
    field_201: Field201256 = Field(..., alias='201')
    field_202: Field202126 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post78(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter776]
    produces: List[str]
    responses: Responses795
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3NamespacesNamespacePodschedulingcontexts(BaseModel):
    delete: Delete119
    get: Get385
    parameters: List[Parameter774]
    post: Post78


class Parameter777(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200796(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202127(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses796(BaseModel):
    field_200: Field200796 = Field(..., alias='200')
    field_202: Field202127 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete120(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter777]
    produces: List[str]
    responses: Responses796
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200797(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses797(BaseModel):
    field_200: Field200797 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get386(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses797
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter778(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter779(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200798(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201257(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses798(BaseModel):
    field_200: Field200798 = Field(..., alias='200')
    field_201: Field201257 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch99(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter779]
    produces: List[str]
    responses: Responses798
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter780(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200799(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201258(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses799(BaseModel):
    field_200: Field200799 = Field(..., alias='200')
    field_201: Field201258 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put100(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter780]
    produces: List[str]
    responses: Responses799
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3NamespacesNamespacePodschedulingcontextsName(
    BaseModel
):
    delete: Delete120
    get: Get386
    parameters: List[Parameter778]
    patch: Patch99
    put: Put100


class Field200800(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses800(BaseModel):
    field_200: Field200800 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get387(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses800
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter781(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter782(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200801(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201259(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses801(BaseModel):
    field_200: Field200801 = Field(..., alias='200')
    field_201: Field201259 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch100(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter782]
    produces: List[str]
    responses: Responses801
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter783(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200802(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201260(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses802(BaseModel):
    field_200: Field200802 = Field(..., alias='200')
    field_201: Field201260 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put101(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter783]
    produces: List[str]
    responses: Responses802
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3NamespacesNamespacePodschedulingcontextsNameStatus(
    BaseModel
):
    get: Get387
    parameters: List[Parameter781]
    patch: Patch100
    put: Put101


class Parameter784(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200803(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses803(BaseModel):
    field_200: Field200803 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete121(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter784]
    produces: List[str]
    responses: Responses803
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter785(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200804(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses804(BaseModel):
    field_200: Field200804 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get388(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter785]
    produces: List[str]
    responses: Responses804
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter787(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200805(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201261(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202128(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses805(BaseModel):
    field_200: Field200805 = Field(..., alias='200')
    field_201: Field201261 = Field(..., alias='201')
    field_202: Field202128 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post79(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter787]
    produces: List[str]
    responses: Responses805
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaims(BaseModel):
    delete: Delete121
    get: Get388
    parameters: List[Parameter785]
    post: Post79


class Parameter788(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200806(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202129(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses806(BaseModel):
    field_200: Field200806 = Field(..., alias='200')
    field_202: Field202129 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete122(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter788]
    produces: List[str]
    responses: Responses806
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200807(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses807(BaseModel):
    field_200: Field200807 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get389(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses807
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter789(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter790(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200808(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201262(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses808(BaseModel):
    field_200: Field200808 = Field(..., alias='200')
    field_201: Field201262 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch101(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter790]
    produces: List[str]
    responses: Responses808
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter791(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200809(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201263(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses809(BaseModel):
    field_200: Field200809 = Field(..., alias='200')
    field_201: Field201263 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put102(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter791]
    produces: List[str]
    responses: Responses809
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaimsName(BaseModel):
    delete: Delete122
    get: Get389
    parameters: List[Parameter789]
    patch: Patch101
    put: Put102


class Field200810(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses810(BaseModel):
    field_200: Field200810 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get390(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses810
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter792(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter793(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200811(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201264(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses811(BaseModel):
    field_200: Field200811 = Field(..., alias='200')
    field_201: Field201264 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch102(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter793]
    produces: List[str]
    responses: Responses811
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter794(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200812(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201265(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses812(BaseModel):
    field_200: Field200812 = Field(..., alias='200')
    field_201: Field201265 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put103(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter794]
    produces: List[str]
    responses: Responses812
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaimsNameStatus(
    BaseModel
):
    get: Get390
    parameters: List[Parameter792]
    patch: Patch102
    put: Put103


class Parameter795(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200813(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses813(BaseModel):
    field_200: Field200813 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete123(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter795]
    produces: List[str]
    responses: Responses813
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter796(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200814(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses814(BaseModel):
    field_200: Field200814 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get391(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter796]
    produces: List[str]
    responses: Responses814
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter798(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200815(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201266(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202130(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses815(BaseModel):
    field_200: Field200815 = Field(..., alias='200')
    field_201: Field201266 = Field(..., alias='201')
    field_202: Field202130 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post80(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter798]
    produces: List[str]
    responses: Responses815
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaimtemplates(
    BaseModel
):
    delete: Delete123
    get: Get391
    parameters: List[Parameter796]
    post: Post80


class Parameter799(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200816(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202131(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses816(BaseModel):
    field_200: Field200816 = Field(..., alias='200')
    field_202: Field202131 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete124(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter799]
    produces: List[str]
    responses: Responses816
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200817(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses817(BaseModel):
    field_200: Field200817 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get392(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses817
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter800(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter801(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200818(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201267(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses818(BaseModel):
    field_200: Field200818 = Field(..., alias='200')
    field_201: Field201267 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch103(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter801]
    produces: List[str]
    responses: Responses818
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter802(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200819(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201268(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses819(BaseModel):
    field_200: Field200819 = Field(..., alias='200')
    field_201: Field201268 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put104(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter802]
    produces: List[str]
    responses: Responses819
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaimtemplatesName(
    BaseModel
):
    delete: Delete124
    get: Get392
    parameters: List[Parameter800]
    patch: Patch103
    put: Put104


class Field200820(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses820(BaseModel):
    field_200: Field200820 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get393(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses820
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter803(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisResourceK8sIoV1alpha3Podschedulingcontexts(BaseModel):
    get: Get393
    parameters: List[Parameter803]


class Field200821(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses821(BaseModel):
    field_200: Field200821 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get394(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses821
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3Resourceclaims(BaseModel):
    get: Get394
    parameters: List[Parameter803]


class Field200822(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses822(BaseModel):
    field_200: Field200822 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get395(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses822
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3Resourceclaimtemplates(BaseModel):
    get: Get395
    parameters: List[Parameter803]


class Parameter806(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200823(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses823(BaseModel):
    field_200: Field200823 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete125(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter806]
    produces: List[str]
    responses: Responses823
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter807(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200824(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses824(BaseModel):
    field_200: Field200824 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get396(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter807]
    produces: List[str]
    responses: Responses824
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter809(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200825(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201269(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202132(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses825(BaseModel):
    field_200: Field200825 = Field(..., alias='200')
    field_201: Field201269 = Field(..., alias='201')
    field_202: Field202132 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post81(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter809]
    produces: List[str]
    responses: Responses825
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3Resourceslices(BaseModel):
    delete: Delete125
    get: Get396
    parameters: List[Parameter807]
    post: Post81


class Parameter810(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200826(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202133(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses826(BaseModel):
    field_200: Field200826 = Field(..., alias='200')
    field_202: Field202133 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete126(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter810]
    produces: List[str]
    responses: Responses826
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200827(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses827(BaseModel):
    field_200: Field200827 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get397(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses827
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter811(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter812(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200828(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201270(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses828(BaseModel):
    field_200: Field200828 = Field(..., alias='200')
    field_201: Field201270 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch104(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter812]
    produces: List[str]
    responses: Responses828
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter813(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200829(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201271(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses829(BaseModel):
    field_200: Field200829 = Field(..., alias='200')
    field_201: Field201271 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put105(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter813]
    produces: List[str]
    responses: Responses829
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3ResourceslicesName(BaseModel):
    delete: Delete126
    get: Get397
    parameters: List[Parameter811]
    patch: Patch104
    put: Put105


class Field200830(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses830(BaseModel):
    field_200: Field200830 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get398(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses830
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter814(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisResourceK8sIoV1alpha3WatchDeviceclasses(BaseModel):
    get: Get398
    parameters: List[Parameter814]


class Field200831(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses831(BaseModel):
    field_200: Field200831 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get399(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses831
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter815(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisResourceK8sIoV1alpha3WatchDeviceclassesName(BaseModel):
    get: Get399
    parameters: List[Parameter815]


class Field200832(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses832(BaseModel):
    field_200: Field200832 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get400(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses832
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter816(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespacePodschedulingcontexts(
    BaseModel
):
    get: Get400
    parameters: List[Parameter816]


class Field200833(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses833(BaseModel):
    field_200: Field200833 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get401(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses833
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter817(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespacePodschedulingcontextsName(
    BaseModel
):
    get: Get401
    parameters: List[Parameter817]


class Field200834(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses834(BaseModel):
    field_200: Field200834 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get402(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses834
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter818(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespaceResourceclaims(BaseModel):
    get: Get402
    parameters: List[Parameter818]


class Field200835(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses835(BaseModel):
    field_200: Field200835 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get403(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses835
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter819(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespaceResourceclaimsName(
    BaseModel
):
    get: Get403
    parameters: List[Parameter819]


class Field200836(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses836(BaseModel):
    field_200: Field200836 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get404(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses836
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter820(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespaceResourceclaimtemplates(
    BaseModel
):
    get: Get404
    parameters: List[Parameter820]


class Field200837(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses837(BaseModel):
    field_200: Field200837 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get405(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses837
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter821(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespaceResourceclaimtemplatesName(
    BaseModel
):
    get: Get405
    parameters: List[Parameter821]


class Field200838(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses838(BaseModel):
    field_200: Field200838 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get406(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses838
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter822(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisResourceK8sIoV1alpha3WatchPodschedulingcontexts(BaseModel):
    get: Get406
    parameters: List[Parameter822]


class Field200839(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses839(BaseModel):
    field_200: Field200839 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get407(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses839
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3WatchResourceclaims(BaseModel):
    get: Get407
    parameters: List[Parameter822]


class Field200840(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses840(BaseModel):
    field_200: Field200840 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get408(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses840
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3WatchResourceclaimtemplates(BaseModel):
    get: Get408
    parameters: List[Parameter822]


class Field200841(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses841(BaseModel):
    field_200: Field200841 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get409(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses841
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisResourceK8sIoV1alpha3WatchResourceslices(BaseModel):
    get: Get409
    parameters: List[Parameter822]


class Field200842(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses842(BaseModel):
    field_200: Field200842 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get410(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses842
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter826(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisResourceK8sIoV1alpha3WatchResourceslicesName(BaseModel):
    get: Get410
    parameters: List[Parameter826]


class Field200843(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses843(BaseModel):
    field_200: Field200843 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get411(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses843
    schemes: List[str]
    tags: List[str]


class FieldApisSchedulingK8sIo(BaseModel):
    get: Get411


class Field200844(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses844(BaseModel):
    field_200: Field200844 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get412(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses844
    schemes: List[str]
    tags: List[str]


class FieldApisSchedulingK8sIoV1(BaseModel):
    get: Get412


class Parameter827(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200845(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses845(BaseModel):
    field_200: Field200845 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete127(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter827]
    produces: List[str]
    responses: Responses845
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter828(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200846(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses846(BaseModel):
    field_200: Field200846 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get413(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter828]
    produces: List[str]
    responses: Responses846
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter830(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200847(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201272(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202134(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses847(BaseModel):
    field_200: Field200847 = Field(..., alias='200')
    field_201: Field201272 = Field(..., alias='201')
    field_202: Field202134 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post82(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter830]
    produces: List[str]
    responses: Responses847
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisSchedulingK8sIoV1Priorityclasses(BaseModel):
    delete: Delete127
    get: Get413
    parameters: List[Parameter828]
    post: Post82


class Parameter831(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200848(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202135(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses848(BaseModel):
    field_200: Field200848 = Field(..., alias='200')
    field_202: Field202135 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete128(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter831]
    produces: List[str]
    responses: Responses848
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200849(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses849(BaseModel):
    field_200: Field200849 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get414(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses849
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter832(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter833(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200850(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201273(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses850(BaseModel):
    field_200: Field200850 = Field(..., alias='200')
    field_201: Field201273 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch105(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter833]
    produces: List[str]
    responses: Responses850
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter834(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200851(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201274(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses851(BaseModel):
    field_200: Field200851 = Field(..., alias='200')
    field_201: Field201274 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put106(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter834]
    produces: List[str]
    responses: Responses851
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisSchedulingK8sIoV1PriorityclassesName(BaseModel):
    delete: Delete128
    get: Get414
    parameters: List[Parameter832]
    patch: Patch105
    put: Put106


class Field200852(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses852(BaseModel):
    field_200: Field200852 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get415(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses852
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter835(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisSchedulingK8sIoV1WatchPriorityclasses(BaseModel):
    get: Get415
    parameters: List[Parameter835]


class Field200853(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses853(BaseModel):
    field_200: Field200853 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get416(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses853
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter836(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisSchedulingK8sIoV1WatchPriorityclassesName(BaseModel):
    get: Get416
    parameters: List[Parameter836]


class Field200854(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses854(BaseModel):
    field_200: Field200854 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get417(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses854
    schemes: List[str]
    tags: List[str]


class FieldApisStorageK8sIo(BaseModel):
    get: Get417


class Field200855(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses855(BaseModel):
    field_200: Field200855 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get418(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses855
    schemes: List[str]
    tags: List[str]


class FieldApisStorageK8sIoV1(BaseModel):
    get: Get418


class Parameter837(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200856(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses856(BaseModel):
    field_200: Field200856 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete129(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter837]
    produces: List[str]
    responses: Responses856
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter838(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200857(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses857(BaseModel):
    field_200: Field200857 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get419(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter838]
    produces: List[str]
    responses: Responses857
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter840(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200858(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201275(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202136(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses858(BaseModel):
    field_200: Field200858 = Field(..., alias='200')
    field_201: Field201275 = Field(..., alias='201')
    field_202: Field202136 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post83(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter840]
    produces: List[str]
    responses: Responses858
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1Csidrivers(BaseModel):
    delete: Delete129
    get: Get419
    parameters: List[Parameter838]
    post: Post83


class Parameter841(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200859(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202137(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses859(BaseModel):
    field_200: Field200859 = Field(..., alias='200')
    field_202: Field202137 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete130(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter841]
    produces: List[str]
    responses: Responses859
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200860(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses860(BaseModel):
    field_200: Field200860 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get420(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses860
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter842(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter843(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200861(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201276(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses861(BaseModel):
    field_200: Field200861 = Field(..., alias='200')
    field_201: Field201276 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch106(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter843]
    produces: List[str]
    responses: Responses861
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter844(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200862(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201277(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses862(BaseModel):
    field_200: Field200862 = Field(..., alias='200')
    field_201: Field201277 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put107(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter844]
    produces: List[str]
    responses: Responses862
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1CsidriversName(BaseModel):
    delete: Delete130
    get: Get420
    parameters: List[Parameter842]
    patch: Patch106
    put: Put107


class Parameter845(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200863(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses863(BaseModel):
    field_200: Field200863 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete131(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter845]
    produces: List[str]
    responses: Responses863
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter846(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200864(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses864(BaseModel):
    field_200: Field200864 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get421(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter846]
    produces: List[str]
    responses: Responses864
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter848(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200865(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201278(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202138(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses865(BaseModel):
    field_200: Field200865 = Field(..., alias='200')
    field_201: Field201278 = Field(..., alias='201')
    field_202: Field202138 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post84(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter848]
    produces: List[str]
    responses: Responses865
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1Csinodes(BaseModel):
    delete: Delete131
    get: Get421
    parameters: List[Parameter846]
    post: Post84


class Parameter849(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200866(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202139(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses866(BaseModel):
    field_200: Field200866 = Field(..., alias='200')
    field_202: Field202139 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete132(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter849]
    produces: List[str]
    responses: Responses866
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200867(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses867(BaseModel):
    field_200: Field200867 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get422(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses867
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter850(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter851(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200868(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201279(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses868(BaseModel):
    field_200: Field200868 = Field(..., alias='200')
    field_201: Field201279 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch107(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter851]
    produces: List[str]
    responses: Responses868
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter852(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200869(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201280(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses869(BaseModel):
    field_200: Field200869 = Field(..., alias='200')
    field_201: Field201280 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put108(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter852]
    produces: List[str]
    responses: Responses869
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1CsinodesName(BaseModel):
    delete: Delete132
    get: Get422
    parameters: List[Parameter850]
    patch: Patch107
    put: Put108


class Field200870(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses870(BaseModel):
    field_200: Field200870 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get423(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses870
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter853(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisStorageK8sIoV1Csistoragecapacities(BaseModel):
    get: Get423
    parameters: List[Parameter853]


class Parameter854(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200871(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses871(BaseModel):
    field_200: Field200871 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete133(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter854]
    produces: List[str]
    responses: Responses871
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter855(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200872(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses872(BaseModel):
    field_200: Field200872 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get424(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter855]
    produces: List[str]
    responses: Responses872
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter857(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200873(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201281(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202140(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses873(BaseModel):
    field_200: Field200873 = Field(..., alias='200')
    field_201: Field201281 = Field(..., alias='201')
    field_202: Field202140 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post85(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter857]
    produces: List[str]
    responses: Responses873
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1NamespacesNamespaceCsistoragecapacities(BaseModel):
    delete: Delete133
    get: Get424
    parameters: List[Parameter855]
    post: Post85


class Parameter858(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200874(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202141(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses874(BaseModel):
    field_200: Field200874 = Field(..., alias='200')
    field_202: Field202141 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete134(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter858]
    produces: List[str]
    responses: Responses874
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200875(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses875(BaseModel):
    field_200: Field200875 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get425(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses875
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter859(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter860(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200876(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201282(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses876(BaseModel):
    field_200: Field200876 = Field(..., alias='200')
    field_201: Field201282 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch108(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter860]
    produces: List[str]
    responses: Responses876
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter861(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200877(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201283(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses877(BaseModel):
    field_200: Field200877 = Field(..., alias='200')
    field_201: Field201283 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put109(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter861]
    produces: List[str]
    responses: Responses877
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1NamespacesNamespaceCsistoragecapacitiesName(BaseModel):
    delete: Delete134
    get: Get425
    parameters: List[Parameter859]
    patch: Patch108
    put: Put109


class Parameter862(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200878(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses878(BaseModel):
    field_200: Field200878 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete135(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter862]
    produces: List[str]
    responses: Responses878
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter863(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200879(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses879(BaseModel):
    field_200: Field200879 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get426(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter863]
    produces: List[str]
    responses: Responses879
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter865(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200880(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201284(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202142(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses880(BaseModel):
    field_200: Field200880 = Field(..., alias='200')
    field_201: Field201284 = Field(..., alias='201')
    field_202: Field202142 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post86(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter865]
    produces: List[str]
    responses: Responses880
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1Storageclasses(BaseModel):
    delete: Delete135
    get: Get426
    parameters: List[Parameter863]
    post: Post86


class Parameter866(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200881(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202143(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses881(BaseModel):
    field_200: Field200881 = Field(..., alias='200')
    field_202: Field202143 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete136(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter866]
    produces: List[str]
    responses: Responses881
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200882(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses882(BaseModel):
    field_200: Field200882 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get427(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses882
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter867(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter868(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200883(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201285(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses883(BaseModel):
    field_200: Field200883 = Field(..., alias='200')
    field_201: Field201285 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch109(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter868]
    produces: List[str]
    responses: Responses883
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter869(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200884(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201286(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses884(BaseModel):
    field_200: Field200884 = Field(..., alias='200')
    field_201: Field201286 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put110(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter869]
    produces: List[str]
    responses: Responses884
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1StorageclassesName(BaseModel):
    delete: Delete136
    get: Get427
    parameters: List[Parameter867]
    patch: Patch109
    put: Put110


class Parameter870(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200885(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses885(BaseModel):
    field_200: Field200885 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete137(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter870]
    produces: List[str]
    responses: Responses885
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter871(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200886(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses886(BaseModel):
    field_200: Field200886 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get428(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter871]
    produces: List[str]
    responses: Responses886
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter873(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200887(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201287(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202144(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses887(BaseModel):
    field_200: Field200887 = Field(..., alias='200')
    field_201: Field201287 = Field(..., alias='201')
    field_202: Field202144 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post87(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter873]
    produces: List[str]
    responses: Responses887
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1Volumeattachments(BaseModel):
    delete: Delete137
    get: Get428
    parameters: List[Parameter871]
    post: Post87


class Parameter874(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200888(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202145(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses888(BaseModel):
    field_200: Field200888 = Field(..., alias='200')
    field_202: Field202145 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete138(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter874]
    produces: List[str]
    responses: Responses888
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200889(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses889(BaseModel):
    field_200: Field200889 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get429(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses889
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter875(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter876(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200890(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201288(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses890(BaseModel):
    field_200: Field200890 = Field(..., alias='200')
    field_201: Field201288 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch110(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter876]
    produces: List[str]
    responses: Responses890
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter877(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200891(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201289(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses891(BaseModel):
    field_200: Field200891 = Field(..., alias='200')
    field_201: Field201289 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put111(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter877]
    produces: List[str]
    responses: Responses891
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1VolumeattachmentsName(BaseModel):
    delete: Delete138
    get: Get429
    parameters: List[Parameter875]
    patch: Patch110
    put: Put111


class Field200892(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses892(BaseModel):
    field_200: Field200892 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get430(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses892
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter878(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter879(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200893(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201290(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses893(BaseModel):
    field_200: Field200893 = Field(..., alias='200')
    field_201: Field201290 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch111(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter879]
    produces: List[str]
    responses: Responses893
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter880(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200894(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201291(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses894(BaseModel):
    field_200: Field200894 = Field(..., alias='200')
    field_201: Field201291 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put112(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter880]
    produces: List[str]
    responses: Responses894
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1VolumeattachmentsNameStatus(BaseModel):
    get: Get430
    parameters: List[Parameter878]
    patch: Patch111
    put: Put112


class Field200895(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses895(BaseModel):
    field_200: Field200895 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get431(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses895
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter881(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisStorageK8sIoV1WatchCsidrivers(BaseModel):
    get: Get431
    parameters: List[Parameter881]


class Field200896(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses896(BaseModel):
    field_200: Field200896 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get432(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses896
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter882(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisStorageK8sIoV1WatchCsidriversName(BaseModel):
    get: Get432
    parameters: List[Parameter882]


class Field200897(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses897(BaseModel):
    field_200: Field200897 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get433(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses897
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter883(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisStorageK8sIoV1WatchCsinodes(BaseModel):
    get: Get433
    parameters: List[Parameter883]


class Field200898(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses898(BaseModel):
    field_200: Field200898 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get434(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses898
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter884(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisStorageK8sIoV1WatchCsinodesName(BaseModel):
    get: Get434
    parameters: List[Parameter884]


class Field200899(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses899(BaseModel):
    field_200: Field200899 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get435(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses899
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter885(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisStorageK8sIoV1WatchCsistoragecapacities(BaseModel):
    get: Get435
    parameters: List[Parameter885]


class Field200900(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses900(BaseModel):
    field_200: Field200900 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get436(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses900
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1WatchNamespacesNamespaceCsistoragecapacities(BaseModel):
    get: Get436
    parameters: List[Parameter885]


class Field200901(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses901(BaseModel):
    field_200: Field200901 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get437(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses901
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter887(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisStorageK8sIoV1WatchNamespacesNamespaceCsistoragecapacitiesName(
    BaseModel
):
    get: Get437
    parameters: List[Parameter887]


class Field200902(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses902(BaseModel):
    field_200: Field200902 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get438(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses902
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter888(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisStorageK8sIoV1WatchStorageclasses(BaseModel):
    get: Get438
    parameters: List[Parameter888]


class Field200903(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses903(BaseModel):
    field_200: Field200903 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get439(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses903
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter889(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisStorageK8sIoV1WatchStorageclassesName(BaseModel):
    get: Get439
    parameters: List[Parameter889]


class Field200904(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses904(BaseModel):
    field_200: Field200904 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get440(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses904
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter890(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisStorageK8sIoV1WatchVolumeattachments(BaseModel):
    get: Get440
    parameters: List[Parameter890]


class Field200905(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses905(BaseModel):
    field_200: Field200905 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get441(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses905
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter891(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisStorageK8sIoV1WatchVolumeattachmentsName(BaseModel):
    get: Get441
    parameters: List[Parameter891]


class Field200906(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses906(BaseModel):
    field_200: Field200906 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get442(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses906
    schemes: List[str]
    tags: List[str]


class FieldApisStorageK8sIoV1alpha1(BaseModel):
    get: Get442


class Parameter892(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200907(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses907(BaseModel):
    field_200: Field200907 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete139(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter892]
    produces: List[str]
    responses: Responses907
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter893(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200908(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses908(BaseModel):
    field_200: Field200908 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get443(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter893]
    produces: List[str]
    responses: Responses908
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter895(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200909(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201292(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202146(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses909(BaseModel):
    field_200: Field200909 = Field(..., alias='200')
    field_201: Field201292 = Field(..., alias='201')
    field_202: Field202146 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post88(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter895]
    produces: List[str]
    responses: Responses909
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1alpha1Volumeattributesclasses(BaseModel):
    delete: Delete139
    get: Get443
    parameters: List[Parameter893]
    post: Post88


class Parameter896(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200910(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202147(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses910(BaseModel):
    field_200: Field200910 = Field(..., alias='200')
    field_202: Field202147 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete140(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter896]
    produces: List[str]
    responses: Responses910
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200911(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses911(BaseModel):
    field_200: Field200911 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get444(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses911
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter897(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter898(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200912(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201293(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses912(BaseModel):
    field_200: Field200912 = Field(..., alias='200')
    field_201: Field201293 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch112(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter898]
    produces: List[str]
    responses: Responses912
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter899(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200913(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201294(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses913(BaseModel):
    field_200: Field200913 = Field(..., alias='200')
    field_201: Field201294 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put113(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter899]
    produces: List[str]
    responses: Responses913
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1alpha1VolumeattributesclassesName(BaseModel):
    delete: Delete140
    get: Get444
    parameters: List[Parameter897]
    patch: Patch112
    put: Put113


class Field200914(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses914(BaseModel):
    field_200: Field200914 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get445(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses914
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter900(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisStorageK8sIoV1alpha1WatchVolumeattributesclasses(BaseModel):
    get: Get445
    parameters: List[Parameter900]


class Field200915(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses915(BaseModel):
    field_200: Field200915 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get446(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses915
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter901(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisStorageK8sIoV1alpha1WatchVolumeattributesclassesName(BaseModel):
    get: Get446
    parameters: List[Parameter901]


class Field200916(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses916(BaseModel):
    field_200: Field200916 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get447(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses916
    schemes: List[str]
    tags: List[str]


class FieldApisStorageK8sIoV1beta1(BaseModel):
    get: Get447


class Parameter902(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200917(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses917(BaseModel):
    field_200: Field200917 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete141(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter902]
    produces: List[str]
    responses: Responses917
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter903(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200918(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses918(BaseModel):
    field_200: Field200918 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get448(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter903]
    produces: List[str]
    responses: Responses918
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter905(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200919(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201295(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202148(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses919(BaseModel):
    field_200: Field200919 = Field(..., alias='200')
    field_201: Field201295 = Field(..., alias='201')
    field_202: Field202148 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post89(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter905]
    produces: List[str]
    responses: Responses919
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1beta1Volumeattributesclasses(BaseModel):
    delete: Delete141
    get: Get448
    parameters: List[Parameter903]
    post: Post89


class Parameter906(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200920(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202149(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses920(BaseModel):
    field_200: Field200920 = Field(..., alias='200')
    field_202: Field202149 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete142(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter906]
    produces: List[str]
    responses: Responses920
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200921(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses921(BaseModel):
    field_200: Field200921 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get449(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses921
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter907(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter908(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200922(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201296(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses922(BaseModel):
    field_200: Field200922 = Field(..., alias='200')
    field_201: Field201296 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch113(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter908]
    produces: List[str]
    responses: Responses922
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter909(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200923(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201297(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses923(BaseModel):
    field_200: Field200923 = Field(..., alias='200')
    field_201: Field201297 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put114(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter909]
    produces: List[str]
    responses: Responses923
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStorageK8sIoV1beta1VolumeattributesclassesName(BaseModel):
    delete: Delete142
    get: Get449
    parameters: List[Parameter907]
    patch: Patch113
    put: Put114


class Field200924(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses924(BaseModel):
    field_200: Field200924 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get450(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses924
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter910(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisStorageK8sIoV1beta1WatchVolumeattributesclasses(BaseModel):
    get: Get450
    parameters: List[Parameter910]


class Field200925(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses925(BaseModel):
    field_200: Field200925 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get451(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses925
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter911(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisStorageK8sIoV1beta1WatchVolumeattributesclassesName(BaseModel):
    get: Get451
    parameters: List[Parameter911]


class Field200926(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses926(BaseModel):
    field_200: Field200926 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get452(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses926
    schemes: List[str]
    tags: List[str]


class FieldApisStoragemigrationK8sIo(BaseModel):
    get: Get452


class Field200927(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses927(BaseModel):
    field_200: Field200927 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get453(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses927
    schemes: List[str]
    tags: List[str]


class FieldApisStoragemigrationK8sIoV1alpha1(BaseModel):
    get: Get453


class Parameter912(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200928(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses928(BaseModel):
    field_200: Field200928 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Delete143(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter912]
    produces: List[str]
    responses: Responses928
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter913(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200929(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses929(BaseModel):
    field_200: Field200929 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get454(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter913]
    produces: List[str]
    responses: Responses929
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter915(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200930(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201298(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202150(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses930(BaseModel):
    field_200: Field200930 = Field(..., alias='200')
    field_201: Field201298 = Field(..., alias='201')
    field_202: Field202150 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Post90(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter915]
    produces: List[str]
    responses: Responses930
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStoragemigrationK8sIoV1alpha1Storageversionmigrations(BaseModel):
    delete: Delete143
    get: Get454
    parameters: List[Parameter913]
    post: Post90


class Parameter916(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200931(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field202151(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses931(BaseModel):
    field_200: Field200931 = Field(..., alias='200')
    field_202: Field202151 = Field(..., alias='202')
    field_401: Field401 = Field(..., alias='401')


class Delete144(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter916]
    produces: List[str]
    responses: Responses931
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Field200932(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses932(BaseModel):
    field_200: Field200932 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get455(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses932
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter917(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter918(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200933(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201299(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses933(BaseModel):
    field_200: Field200933 = Field(..., alias='200')
    field_201: Field201299 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch114(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter918]
    produces: List[str]
    responses: Responses933
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter919(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200934(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201300(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses934(BaseModel):
    field_200: Field200934 = Field(..., alias='200')
    field_201: Field201300 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put115(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter919]
    produces: List[str]
    responses: Responses934
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStoragemigrationK8sIoV1alpha1StorageversionmigrationsName(BaseModel):
    delete: Delete144
    get: Get455
    parameters: List[Parameter917]
    patch: Patch114
    put: Put115


class Field200935(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses935(BaseModel):
    field_200: Field200935 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get456(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses935
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter920(BaseModel):
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Parameter921(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class Field200936(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201301(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses936(BaseModel):
    field_200: Field200936 = Field(..., alias='200')
    field_201: Field201301 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Patch115(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter921]
    produces: List[str]
    responses: Responses936
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter922(BaseModel):
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    schema_: Optional[Schema323] = Field(None, alias='schema')
    description: Optional[str] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Field200937(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Field201302(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses937(BaseModel):
    field_200: Field200937 = Field(..., alias='200')
    field_201: Field201302 = Field(..., alias='201')
    field_401: Field401 = Field(..., alias='401')


class Put116(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    parameters: List[Parameter922]
    produces: List[str]
    responses: Responses937
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class FieldApisStoragemigrationK8sIoV1alpha1StorageversionmigrationsNameStatus(
    BaseModel
):
    get: Get456
    parameters: List[Parameter920]
    patch: Patch115
    put: Put116


class Field200938(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses938(BaseModel):
    field_200: Field200938 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get457(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses938
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter923(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldApisStoragemigrationK8sIoV1alpha1WatchStorageversionmigrations(BaseModel):
    get: Get457
    parameters: List[Parameter923]


class Field200939(BaseModel):
    description: str
    schema_: Schema323 = Field(..., alias='schema')


class Responses939(BaseModel):
    field_200: Field200939 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get458(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses939
    schemes: List[str]
    tags: List[str]
    x_kubernetes_action: str = Field(..., alias='x-kubernetes-action')
    x_kubernetes_group_version_kind: XKubernetesGroupVersionKind = Field(
        ..., alias='x-kubernetes-group-version-kind'
    )


class Parameter924(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    description: Optional[str] = None
    in_: Optional[str] = Field(None, alias='in')
    name: Optional[str] = None
    required: Optional[bool] = None
    type: Optional[str] = None
    uniqueItems: Optional[bool] = None


class FieldApisStoragemigrationK8sIoV1alpha1WatchStorageversionmigrationsName(
    BaseModel
):
    get: Get458
    parameters: List[Parameter924]


class Responses940(BaseModel):
    field_401: Field401 = Field(..., alias='401')


class Get459(BaseModel):
    operationId: str
    responses: Responses940
    schemes: List[str]
    tags: List[str]


class FieldLogs(BaseModel):
    get: Get459


class Responses941(BaseModel):
    field_401: Field401 = Field(..., alias='401')


class Get460(BaseModel):
    operationId: str
    responses: Responses941
    schemes: List[str]
    tags: List[str]


class Parameter925(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class FieldLogsLogpath(BaseModel):
    get: Get460
    parameters: List[Parameter925]


class Schema1591(BaseModel):
    type: str


class Field200940(BaseModel):
    description: str
    schema_: Schema1591 = Field(..., alias='schema')


class Responses942(BaseModel):
    field_200: Field200940 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get461(BaseModel):
    description: str
    operationId: str
    produces: List[str]
    responses: Responses942
    schemes: List[str]
    tags: List[str]


class FieldOpenidV1Jwks(BaseModel):
    get: Get461


class Schema1592(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Field200941(BaseModel):
    description: str
    schema_: Schema1592 = Field(..., alias='schema')


class Responses943(BaseModel):
    field_200: Field200941 = Field(..., alias='200')
    field_401: Field401 = Field(..., alias='401')


class Get462(BaseModel):
    consumes: List[str]
    description: str
    operationId: str
    produces: List[str]
    responses: Responses943
    schemes: List[str]
    tags: List[str]


class FieldVersion(BaseModel):
    get: Get462


class Paths1(BaseModel):
    field__well_known_openid_configuration_: FieldWellKnownOpenidConfiguration = Field(
        ..., alias='/.well-known/openid-configuration/'
    )
    field_api_: FieldApi = Field(..., alias='/api/')
    field_api_v1_: FieldApiV1 = Field(..., alias='/api/v1/')
    field_api_v1_componentstatuses: FieldApiV1Componentstatuses = Field(
        ..., alias='/api/v1/componentstatuses'
    )
    field_api_v1_componentstatuses__name_: FieldApiV1ComponentstatusesName = Field(
        ..., alias='/api/v1/componentstatuses/{name}'
    )
    field_api_v1_configmaps: FieldApiV1Configmaps = Field(
        ..., alias='/api/v1/configmaps'
    )
    field_api_v1_endpoints: FieldApiV1Endpoints = Field(..., alias='/api/v1/endpoints')
    field_api_v1_events: FieldApiV1Events = Field(..., alias='/api/v1/events')
    field_api_v1_limitranges: FieldApiV1Limitranges = Field(
        ..., alias='/api/v1/limitranges'
    )
    field_api_v1_namespaces: FieldApiV1Namespaces = Field(
        ..., alias='/api/v1/namespaces'
    )
    field_api_v1_namespaces__namespace__bindings: (
        FieldApiV1NamespacesNamespaceBindings
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/bindings')
    field_api_v1_namespaces__namespace__configmaps: (
        FieldApiV1NamespacesNamespaceConfigmaps
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/configmaps')
    field_api_v1_namespaces__namespace__configmaps__name_: (
        FieldApiV1NamespacesNamespaceConfigmapsName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/configmaps/{name}')
    field_api_v1_namespaces__namespace__endpoints: (
        FieldApiV1NamespacesNamespaceEndpoints
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/endpoints')
    field_api_v1_namespaces__namespace__endpoints__name_: (
        FieldApiV1NamespacesNamespaceEndpointsName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/endpoints/{name}')
    field_api_v1_namespaces__namespace__events: FieldApiV1NamespacesNamespaceEvents = (
        Field(..., alias='/api/v1/namespaces/{namespace}/events')
    )
    field_api_v1_namespaces__namespace__events__name_: (
        FieldApiV1NamespacesNamespaceEventsName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/events/{name}')
    field_api_v1_namespaces__namespace__limitranges: (
        FieldApiV1NamespacesNamespaceLimitranges
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/limitranges')
    field_api_v1_namespaces__namespace__limitranges__name_: (
        FieldApiV1NamespacesNamespaceLimitrangesName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/limitranges/{name}')
    field_api_v1_namespaces__namespace__persistentvolumeclaims: (
        FieldApiV1NamespacesNamespacePersistentvolumeclaims
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/persistentvolumeclaims')
    field_api_v1_namespaces__namespace__persistentvolumeclaims__name_: (
        FieldApiV1NamespacesNamespacePersistentvolumeclaimsName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}')
    field_api_v1_namespaces__namespace__persistentvolumeclaims__name__status: (
        FieldApiV1NamespacesNamespacePersistentvolumeclaimsNameStatus
    ) = Field(
        ..., alias='/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}/status'
    )
    field_api_v1_namespaces__namespace__pods: FieldApiV1NamespacesNamespacePods = Field(
        ..., alias='/api/v1/namespaces/{namespace}/pods'
    )
    field_api_v1_namespaces__namespace__pods__name_: (
        FieldApiV1NamespacesNamespacePodsName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}')
    field_api_v1_namespaces__namespace__pods__name__attach: (
        FieldApiV1NamespacesNamespacePodsNameAttach
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}/attach')
    field_api_v1_namespaces__namespace__pods__name__binding: (
        FieldApiV1NamespacesNamespacePodsNameBinding
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}/binding')
    field_api_v1_namespaces__namespace__pods__name__ephemeralcontainers: (
        FieldApiV1NamespacesNamespacePodsNameEphemeralcontainers
    ) = Field(
        ..., alias='/api/v1/namespaces/{namespace}/pods/{name}/ephemeralcontainers'
    )
    field_api_v1_namespaces__namespace__pods__name__eviction: (
        FieldApiV1NamespacesNamespacePodsNameEviction
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}/eviction')
    field_api_v1_namespaces__namespace__pods__name__exec: (
        FieldApiV1NamespacesNamespacePodsNameExec
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}/exec')
    field_api_v1_namespaces__namespace__pods__name__log: (
        FieldApiV1NamespacesNamespacePodsNameLog
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}/log')
    field_api_v1_namespaces__namespace__pods__name__portforward: (
        FieldApiV1NamespacesNamespacePodsNamePortforward
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}/portforward')
    field_api_v1_namespaces__namespace__pods__name__proxy: (
        FieldApiV1NamespacesNamespacePodsNameProxy
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}/proxy')
    field_api_v1_namespaces__namespace__pods__name__proxy__path_: (
        FieldApiV1NamespacesNamespacePodsNameProxyPath
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}')
    field_api_v1_namespaces__namespace__pods__name__status: (
        FieldApiV1NamespacesNamespacePodsNameStatus
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/pods/{name}/status')
    field_api_v1_namespaces__namespace__podtemplates: (
        FieldApiV1NamespacesNamespacePodtemplates
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/podtemplates')
    field_api_v1_namespaces__namespace__podtemplates__name_: (
        FieldApiV1NamespacesNamespacePodtemplatesName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/podtemplates/{name}')
    field_api_v1_namespaces__namespace__replicationcontrollers: (
        FieldApiV1NamespacesNamespaceReplicationcontrollers
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/replicationcontrollers')
    field_api_v1_namespaces__namespace__replicationcontrollers__name_: (
        FieldApiV1NamespacesNamespaceReplicationcontrollersName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/replicationcontrollers/{name}')
    field_api_v1_namespaces__namespace__replicationcontrollers__name__scale: (
        FieldApiV1NamespacesNamespaceReplicationcontrollersNameScale
    ) = Field(
        ..., alias='/api/v1/namespaces/{namespace}/replicationcontrollers/{name}/scale'
    )
    field_api_v1_namespaces__namespace__replicationcontrollers__name__status: (
        FieldApiV1NamespacesNamespaceReplicationcontrollersNameStatus
    ) = Field(
        ..., alias='/api/v1/namespaces/{namespace}/replicationcontrollers/{name}/status'
    )
    field_api_v1_namespaces__namespace__resourcequotas: (
        FieldApiV1NamespacesNamespaceResourcequotas
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/resourcequotas')
    field_api_v1_namespaces__namespace__resourcequotas__name_: (
        FieldApiV1NamespacesNamespaceResourcequotasName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/resourcequotas/{name}')
    field_api_v1_namespaces__namespace__resourcequotas__name__status: (
        FieldApiV1NamespacesNamespaceResourcequotasNameStatus
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/resourcequotas/{name}/status')
    field_api_v1_namespaces__namespace__secrets: (
        FieldApiV1NamespacesNamespaceSecrets
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/secrets')
    field_api_v1_namespaces__namespace__secrets__name_: (
        FieldApiV1NamespacesNamespaceSecretsName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/secrets/{name}')
    field_api_v1_namespaces__namespace__serviceaccounts: (
        FieldApiV1NamespacesNamespaceServiceaccounts
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/serviceaccounts')
    field_api_v1_namespaces__namespace__serviceaccounts__name_: (
        FieldApiV1NamespacesNamespaceServiceaccountsName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/serviceaccounts/{name}')
    field_api_v1_namespaces__namespace__serviceaccounts__name__token: (
        FieldApiV1NamespacesNamespaceServiceaccountsNameToken
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/serviceaccounts/{name}/token')
    field_api_v1_namespaces__namespace__services: (
        FieldApiV1NamespacesNamespaceServices
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/services')
    field_api_v1_namespaces__namespace__services__name_: (
        FieldApiV1NamespacesNamespaceServicesName
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/services/{name}')
    field_api_v1_namespaces__namespace__services__name__proxy: (
        FieldApiV1NamespacesNamespaceServicesNameProxy
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/services/{name}/proxy')
    field_api_v1_namespaces__namespace__services__name__proxy__path_: (
        FieldApiV1NamespacesNamespaceServicesNameProxyPath
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/services/{name}/proxy/{path}')
    field_api_v1_namespaces__namespace__services__name__status: (
        FieldApiV1NamespacesNamespaceServicesNameStatus
    ) = Field(..., alias='/api/v1/namespaces/{namespace}/services/{name}/status')
    field_api_v1_namespaces__name_: FieldApiV1NamespacesName = Field(
        ..., alias='/api/v1/namespaces/{name}'
    )
    field_api_v1_namespaces__name__finalize: FieldApiV1NamespacesNameFinalize = Field(
        ..., alias='/api/v1/namespaces/{name}/finalize'
    )
    field_api_v1_namespaces__name__status: FieldApiV1NamespacesNameStatus = Field(
        ..., alias='/api/v1/namespaces/{name}/status'
    )
    field_api_v1_nodes: FieldApiV1Nodes = Field(..., alias='/api/v1/nodes')
    field_api_v1_nodes__name_: FieldApiV1NodesName = Field(
        ..., alias='/api/v1/nodes/{name}'
    )
    field_api_v1_nodes__name__proxy: FieldApiV1NodesNameProxy = Field(
        ..., alias='/api/v1/nodes/{name}/proxy'
    )
    field_api_v1_nodes__name__proxy__path_: FieldApiV1NodesNameProxyPath = Field(
        ..., alias='/api/v1/nodes/{name}/proxy/{path}'
    )
    field_api_v1_nodes__name__status: FieldApiV1NodesNameStatus = Field(
        ..., alias='/api/v1/nodes/{name}/status'
    )
    field_api_v1_persistentvolumeclaims: FieldApiV1Persistentvolumeclaims = Field(
        ..., alias='/api/v1/persistentvolumeclaims'
    )
    field_api_v1_persistentvolumes: FieldApiV1Persistentvolumes = Field(
        ..., alias='/api/v1/persistentvolumes'
    )
    field_api_v1_persistentvolumes__name_: FieldApiV1PersistentvolumesName = Field(
        ..., alias='/api/v1/persistentvolumes/{name}'
    )
    field_api_v1_persistentvolumes__name__status: (
        FieldApiV1PersistentvolumesNameStatus
    ) = Field(..., alias='/api/v1/persistentvolumes/{name}/status')
    field_api_v1_pods: FieldApiV1Pods = Field(..., alias='/api/v1/pods')
    field_api_v1_podtemplates: FieldApiV1Podtemplates = Field(
        ..., alias='/api/v1/podtemplates'
    )
    field_api_v1_replicationcontrollers: FieldApiV1Replicationcontrollers = Field(
        ..., alias='/api/v1/replicationcontrollers'
    )
    field_api_v1_resourcequotas: FieldApiV1Resourcequotas = Field(
        ..., alias='/api/v1/resourcequotas'
    )
    field_api_v1_secrets: FieldApiV1Secrets = Field(..., alias='/api/v1/secrets')
    field_api_v1_serviceaccounts: FieldApiV1Serviceaccounts = Field(
        ..., alias='/api/v1/serviceaccounts'
    )
    field_api_v1_services: FieldApiV1Services = Field(..., alias='/api/v1/services')
    field_api_v1_watch_configmaps: FieldApiV1WatchConfigmaps = Field(
        ..., alias='/api/v1/watch/configmaps'
    )
    field_api_v1_watch_endpoints: FieldApiV1WatchEndpoints = Field(
        ..., alias='/api/v1/watch/endpoints'
    )
    field_api_v1_watch_events: FieldApiV1WatchEvents = Field(
        ..., alias='/api/v1/watch/events'
    )
    field_api_v1_watch_limitranges: FieldApiV1WatchLimitranges = Field(
        ..., alias='/api/v1/watch/limitranges'
    )
    field_api_v1_watch_namespaces: FieldApiV1WatchNamespaces = Field(
        ..., alias='/api/v1/watch/namespaces'
    )
    field_api_v1_watch_namespaces__namespace__configmaps: (
        FieldApiV1WatchNamespacesNamespaceConfigmaps
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/configmaps')
    field_api_v1_watch_namespaces__namespace__configmaps__name_: (
        FieldApiV1WatchNamespacesNamespaceConfigmapsName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/configmaps/{name}')
    field_api_v1_watch_namespaces__namespace__endpoints: (
        FieldApiV1WatchNamespacesNamespaceEndpoints
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/endpoints')
    field_api_v1_watch_namespaces__namespace__endpoints__name_: (
        FieldApiV1WatchNamespacesNamespaceEndpointsName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/endpoints/{name}')
    field_api_v1_watch_namespaces__namespace__events: (
        FieldApiV1WatchNamespacesNamespaceEvents
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/events')
    field_api_v1_watch_namespaces__namespace__events__name_: (
        FieldApiV1WatchNamespacesNamespaceEventsName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/events/{name}')
    field_api_v1_watch_namespaces__namespace__limitranges: (
        FieldApiV1WatchNamespacesNamespaceLimitranges
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/limitranges')
    field_api_v1_watch_namespaces__namespace__limitranges__name_: (
        FieldApiV1WatchNamespacesNamespaceLimitrangesName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/limitranges/{name}')
    field_api_v1_watch_namespaces__namespace__persistentvolumeclaims: (
        FieldApiV1WatchNamespacesNamespacePersistentvolumeclaims
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims')
    field_api_v1_watch_namespaces__namespace__persistentvolumeclaims__name_: (
        FieldApiV1WatchNamespacesNamespacePersistentvolumeclaimsName
    ) = Field(
        ..., alias='/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims/{name}'
    )
    field_api_v1_watch_namespaces__namespace__pods: (
        FieldApiV1WatchNamespacesNamespacePods
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/pods')
    field_api_v1_watch_namespaces__namespace__pods__name_: (
        FieldApiV1WatchNamespacesNamespacePodsName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/pods/{name}')
    field_api_v1_watch_namespaces__namespace__podtemplates: (
        FieldApiV1WatchNamespacesNamespacePodtemplates
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/podtemplates')
    field_api_v1_watch_namespaces__namespace__podtemplates__name_: (
        FieldApiV1WatchNamespacesNamespacePodtemplatesName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/podtemplates/{name}')
    field_api_v1_watch_namespaces__namespace__replicationcontrollers: (
        FieldApiV1WatchNamespacesNamespaceReplicationcontrollers
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/replicationcontrollers')
    field_api_v1_watch_namespaces__namespace__replicationcontrollers__name_: (
        FieldApiV1WatchNamespacesNamespaceReplicationcontrollersName
    ) = Field(
        ..., alias='/api/v1/watch/namespaces/{namespace}/replicationcontrollers/{name}'
    )
    field_api_v1_watch_namespaces__namespace__resourcequotas: (
        FieldApiV1WatchNamespacesNamespaceResourcequotas
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/resourcequotas')
    field_api_v1_watch_namespaces__namespace__resourcequotas__name_: (
        FieldApiV1WatchNamespacesNamespaceResourcequotasName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/resourcequotas/{name}')
    field_api_v1_watch_namespaces__namespace__secrets: (
        FieldApiV1WatchNamespacesNamespaceSecrets
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/secrets')
    field_api_v1_watch_namespaces__namespace__secrets__name_: (
        FieldApiV1WatchNamespacesNamespaceSecretsName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/secrets/{name}')
    field_api_v1_watch_namespaces__namespace__serviceaccounts: (
        FieldApiV1WatchNamespacesNamespaceServiceaccounts
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/serviceaccounts')
    field_api_v1_watch_namespaces__namespace__serviceaccounts__name_: (
        FieldApiV1WatchNamespacesNamespaceServiceaccountsName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/serviceaccounts/{name}')
    field_api_v1_watch_namespaces__namespace__services: (
        FieldApiV1WatchNamespacesNamespaceServices
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/services')
    field_api_v1_watch_namespaces__namespace__services__name_: (
        FieldApiV1WatchNamespacesNamespaceServicesName
    ) = Field(..., alias='/api/v1/watch/namespaces/{namespace}/services/{name}')
    field_api_v1_watch_namespaces__name_: FieldApiV1WatchNamespacesName = Field(
        ..., alias='/api/v1/watch/namespaces/{name}'
    )
    field_api_v1_watch_nodes: FieldApiV1WatchNodes = Field(
        ..., alias='/api/v1/watch/nodes'
    )
    field_api_v1_watch_nodes__name_: FieldApiV1WatchNodesName = Field(
        ..., alias='/api/v1/watch/nodes/{name}'
    )
    field_api_v1_watch_persistentvolumeclaims: FieldApiV1WatchPersistentvolumeclaims = (
        Field(..., alias='/api/v1/watch/persistentvolumeclaims')
    )
    field_api_v1_watch_persistentvolumes: FieldApiV1WatchPersistentvolumes = Field(
        ..., alias='/api/v1/watch/persistentvolumes'
    )
    field_api_v1_watch_persistentvolumes__name_: (
        FieldApiV1WatchPersistentvolumesName
    ) = Field(..., alias='/api/v1/watch/persistentvolumes/{name}')
    field_api_v1_watch_pods: FieldApiV1WatchPods = Field(
        ..., alias='/api/v1/watch/pods'
    )
    field_api_v1_watch_podtemplates: FieldApiV1WatchPodtemplates = Field(
        ..., alias='/api/v1/watch/podtemplates'
    )
    field_api_v1_watch_replicationcontrollers: FieldApiV1WatchReplicationcontrollers = (
        Field(..., alias='/api/v1/watch/replicationcontrollers')
    )
    field_api_v1_watch_resourcequotas: FieldApiV1WatchResourcequotas = Field(
        ..., alias='/api/v1/watch/resourcequotas'
    )
    field_api_v1_watch_secrets: FieldApiV1WatchSecrets = Field(
        ..., alias='/api/v1/watch/secrets'
    )
    field_api_v1_watch_serviceaccounts: FieldApiV1WatchServiceaccounts = Field(
        ..., alias='/api/v1/watch/serviceaccounts'
    )
    field_api_v1_watch_services: FieldApiV1WatchServices = Field(
        ..., alias='/api/v1/watch/services'
    )
    field_apis_: FieldApis = Field(..., alias='/apis/')
    field_apis_admissionregistration_k8s_io_: FieldApisAdmissionregistrationK8sIo = (
        Field(..., alias='/apis/admissionregistration.k8s.io/')
    )
    field_apis_admissionregistration_k8s_io_v1_: (
        FieldApisAdmissionregistrationK8sIoV1
    ) = Field(..., alias='/apis/admissionregistration.k8s.io/v1/')
    field_apis_admissionregistration_k8s_io_v1_mutatingwebhookconfigurations: (
        FieldApisAdmissionregistrationK8sIoV1Mutatingwebhookconfigurations
    ) = Field(
        ..., alias='/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations'
    )
    field_apis_admissionregistration_k8s_io_v1_mutatingwebhookconfigurations__name_: (
        FieldApisAdmissionregistrationK8sIoV1MutatingwebhookconfigurationsName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1_validatingadmissionpolicies: (
        FieldApisAdmissionregistrationK8sIoV1Validatingadmissionpolicies
    ) = Field(
        ..., alias='/apis/admissionregistration.k8s.io/v1/validatingadmissionpolicies'
    )
    field_apis_admissionregistration_k8s_io_v1_validatingadmissionpolicies__name_: (
        FieldApisAdmissionregistrationK8sIoV1ValidatingadmissionpoliciesName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/validatingadmissionpolicies/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1_validatingadmissionpolicies__name__status: (
        FieldApisAdmissionregistrationK8sIoV1ValidatingadmissionpoliciesNameStatus
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/validatingadmissionpolicies/{name}/status',
    )
    field_apis_admissionregistration_k8s_io_v1_validatingadmissionpolicybindings: (
        FieldApisAdmissionregistrationK8sIoV1Validatingadmissionpolicybindings
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/validatingadmissionpolicybindings',
    )
    field_apis_admissionregistration_k8s_io_v1_validatingadmissionpolicybindings__name_: (
        FieldApisAdmissionregistrationK8sIoV1ValidatingadmissionpolicybindingsName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/validatingadmissionpolicybindings/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1_validatingwebhookconfigurations: (
        FieldApisAdmissionregistrationK8sIoV1Validatingwebhookconfigurations
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations',
    )
    field_apis_admissionregistration_k8s_io_v1_validatingwebhookconfigurations__name_: (
        FieldApisAdmissionregistrationK8sIoV1ValidatingwebhookconfigurationsName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1_watch_mutatingwebhookconfigurations: (
        FieldApisAdmissionregistrationK8sIoV1WatchMutatingwebhookconfigurations
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations',
    )
    field_apis_admissionregistration_k8s_io_v1_watch_mutatingwebhookconfigurations__name_: (
        FieldApisAdmissionregistrationK8sIoV1WatchMutatingwebhookconfigurationsName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1_watch_validatingadmissionpolicies: (
        FieldApisAdmissionregistrationK8sIoV1WatchValidatingadmissionpolicies
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/watch/validatingadmissionpolicies',
    )
    field_apis_admissionregistration_k8s_io_v1_watch_validatingadmissionpolicies__name_: (
        FieldApisAdmissionregistrationK8sIoV1WatchValidatingadmissionpoliciesName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/watch/validatingadmissionpolicies/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1_watch_validatingadmissionpolicybindings: (
        FieldApisAdmissionregistrationK8sIoV1WatchValidatingadmissionpolicybindings
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/watch/validatingadmissionpolicybindings',
    )
    field_apis_admissionregistration_k8s_io_v1_watch_validatingadmissionpolicybindings__name_: (
        FieldApisAdmissionregistrationK8sIoV1WatchValidatingadmissionpolicybindingsName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/watch/validatingadmissionpolicybindings/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1_watch_validatingwebhookconfigurations: (
        FieldApisAdmissionregistrationK8sIoV1WatchValidatingwebhookconfigurations
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations',
    )
    field_apis_admissionregistration_k8s_io_v1_watch_validatingwebhookconfigurations__name_: (
        FieldApisAdmissionregistrationK8sIoV1WatchValidatingwebhookconfigurationsName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1alpha1_: (
        FieldApisAdmissionregistrationK8sIoV1alpha1
    ) = Field(..., alias='/apis/admissionregistration.k8s.io/v1alpha1/')
    field_apis_admissionregistration_k8s_io_v1alpha1_validatingadmissionpolicies: (
        FieldApisAdmissionregistrationK8sIoV1alpha1Validatingadmissionpolicies
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1alpha1/validatingadmissionpolicies',
    )
    field_apis_admissionregistration_k8s_io_v1alpha1_validatingadmissionpolicies__name_: (
        FieldApisAdmissionregistrationK8sIoV1alpha1ValidatingadmissionpoliciesName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1alpha1/validatingadmissionpolicies/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1alpha1_validatingadmissionpolicies__name__status: (
        FieldApisAdmissionregistrationK8sIoV1alpha1ValidatingadmissionpoliciesNameStatus
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1alpha1/validatingadmissionpolicies/{name}/status',
    )
    field_apis_admissionregistration_k8s_io_v1alpha1_validatingadmissionpolicybindings: (
        FieldApisAdmissionregistrationK8sIoV1alpha1Validatingadmissionpolicybindings
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1alpha1/validatingadmissionpolicybindings',
    )
    field_apis_admissionregistration_k8s_io_v1alpha1_validatingadmissionpolicybindings__name_: (
        FieldApisAdmissionregistrationK8sIoV1alpha1ValidatingadmissionpolicybindingsName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1alpha1/validatingadmissionpolicybindings/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1alpha1_watch_validatingadmissionpolicies: (
        FieldApisAdmissionregistrationK8sIoV1alpha1WatchValidatingadmissionpolicies
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1alpha1/watch/validatingadmissionpolicies',
    )
    field_apis_admissionregistration_k8s_io_v1alpha1_watch_validatingadmissionpolicies__name_: (
        FieldApisAdmissionregistrationK8sIoV1alpha1WatchValidatingadmissionpoliciesName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1alpha1/watch/validatingadmissionpolicies/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1alpha1_watch_validatingadmissionpolicybindings: FieldApisAdmissionregistrationK8sIoV1alpha1WatchValidatingadmissionpolicybindings = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1alpha1/watch/validatingadmissionpolicybindings',
    )
    field_apis_admissionregistration_k8s_io_v1alpha1_watch_validatingadmissionpolicybindings__name_: FieldApisAdmissionregistrationK8sIoV1alpha1WatchValidatingadmissionpolicybindingsName = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1alpha1/watch/validatingadmissionpolicybindings/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1beta1_: (
        FieldApisAdmissionregistrationK8sIoV1beta1
    ) = Field(..., alias='/apis/admissionregistration.k8s.io/v1beta1/')
    field_apis_admissionregistration_k8s_io_v1beta1_validatingadmissionpolicies: (
        FieldApisAdmissionregistrationK8sIoV1beta1Validatingadmissionpolicies
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1beta1/validatingadmissionpolicies',
    )
    field_apis_admissionregistration_k8s_io_v1beta1_validatingadmissionpolicies__name_: (
        FieldApisAdmissionregistrationK8sIoV1beta1ValidatingadmissionpoliciesName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1beta1/validatingadmissionpolicies/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1beta1_validatingadmissionpolicies__name__status: (
        FieldApisAdmissionregistrationK8sIoV1beta1ValidatingadmissionpoliciesNameStatus
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1beta1/validatingadmissionpolicies/{name}/status',
    )
    field_apis_admissionregistration_k8s_io_v1beta1_validatingadmissionpolicybindings: (
        FieldApisAdmissionregistrationK8sIoV1beta1Validatingadmissionpolicybindings
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1beta1/validatingadmissionpolicybindings',
    )
    field_apis_admissionregistration_k8s_io_v1beta1_validatingadmissionpolicybindings__name_: (
        FieldApisAdmissionregistrationK8sIoV1beta1ValidatingadmissionpolicybindingsName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1beta1/validatingadmissionpolicybindings/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1beta1_watch_validatingadmissionpolicies: (
        FieldApisAdmissionregistrationK8sIoV1beta1WatchValidatingadmissionpolicies
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1beta1/watch/validatingadmissionpolicies',
    )
    field_apis_admissionregistration_k8s_io_v1beta1_watch_validatingadmissionpolicies__name_: (
        FieldApisAdmissionregistrationK8sIoV1beta1WatchValidatingadmissionpoliciesName
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1beta1/watch/validatingadmissionpolicies/{name}',
    )
    field_apis_admissionregistration_k8s_io_v1beta1_watch_validatingadmissionpolicybindings: (
        FieldApisAdmissionregistrationK8sIoV1beta1WatchValidatingadmissionpolicybindings
    ) = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1beta1/watch/validatingadmissionpolicybindings',
    )
    field_apis_admissionregistration_k8s_io_v1beta1_watch_validatingadmissionpolicybindings__name_: FieldApisAdmissionregistrationK8sIoV1beta1WatchValidatingadmissionpolicybindingsName = Field(
        ...,
        alias='/apis/admissionregistration.k8s.io/v1beta1/watch/validatingadmissionpolicybindings/{name}',
    )
    field_apis_apiextensions_k8s_io_: FieldApisApiextensionsK8sIo = Field(
        ..., alias='/apis/apiextensions.k8s.io/'
    )
    field_apis_apiextensions_k8s_io_v1_: FieldApisApiextensionsK8sIoV1 = Field(
        ..., alias='/apis/apiextensions.k8s.io/v1/'
    )
    field_apis_apiextensions_k8s_io_v1_customresourcedefinitions: (
        FieldApisApiextensionsK8sIoV1Customresourcedefinitions
    ) = Field(..., alias='/apis/apiextensions.k8s.io/v1/customresourcedefinitions')
    field_apis_apiextensions_k8s_io_v1_customresourcedefinitions__name_: (
        FieldApisApiextensionsK8sIoV1CustomresourcedefinitionsName
    ) = Field(
        ..., alias='/apis/apiextensions.k8s.io/v1/customresourcedefinitions/{name}'
    )
    field_apis_apiextensions_k8s_io_v1_customresourcedefinitions__name__status: (
        FieldApisApiextensionsK8sIoV1CustomresourcedefinitionsNameStatus
    ) = Field(
        ...,
        alias='/apis/apiextensions.k8s.io/v1/customresourcedefinitions/{name}/status',
    )
    field_apis_apiextensions_k8s_io_v1_watch_customresourcedefinitions: (
        FieldApisApiextensionsK8sIoV1WatchCustomresourcedefinitions
    ) = Field(
        ..., alias='/apis/apiextensions.k8s.io/v1/watch/customresourcedefinitions'
    )
    field_apis_apiextensions_k8s_io_v1_watch_customresourcedefinitions__name_: (
        FieldApisApiextensionsK8sIoV1WatchCustomresourcedefinitionsName
    ) = Field(
        ...,
        alias='/apis/apiextensions.k8s.io/v1/watch/customresourcedefinitions/{name}',
    )
    field_apis_apiregistration_k8s_io_: FieldApisApiregistrationK8sIo = Field(
        ..., alias='/apis/apiregistration.k8s.io/'
    )
    field_apis_apiregistration_k8s_io_v1_: FieldApisApiregistrationK8sIoV1 = Field(
        ..., alias='/apis/apiregistration.k8s.io/v1/'
    )
    field_apis_apiregistration_k8s_io_v1_apiservices: (
        FieldApisApiregistrationK8sIoV1Apiservices
    ) = Field(..., alias='/apis/apiregistration.k8s.io/v1/apiservices')
    field_apis_apiregistration_k8s_io_v1_apiservices__name_: (
        FieldApisApiregistrationK8sIoV1ApiservicesName
    ) = Field(..., alias='/apis/apiregistration.k8s.io/v1/apiservices/{name}')
    field_apis_apiregistration_k8s_io_v1_apiservices__name__status: (
        FieldApisApiregistrationK8sIoV1ApiservicesNameStatus
    ) = Field(..., alias='/apis/apiregistration.k8s.io/v1/apiservices/{name}/status')
    field_apis_apiregistration_k8s_io_v1_watch_apiservices: (
        FieldApisApiregistrationK8sIoV1WatchApiservices
    ) = Field(..., alias='/apis/apiregistration.k8s.io/v1/watch/apiservices')
    field_apis_apiregistration_k8s_io_v1_watch_apiservices__name_: (
        FieldApisApiregistrationK8sIoV1WatchApiservicesName
    ) = Field(..., alias='/apis/apiregistration.k8s.io/v1/watch/apiservices/{name}')
    field_apis_apps_: FieldApisApps = Field(..., alias='/apis/apps/')
    field_apis_apps_v1_: FieldApisAppsV1 = Field(..., alias='/apis/apps/v1/')
    field_apis_apps_v1_controllerrevisions: FieldApisAppsV1Controllerrevisions = Field(
        ..., alias='/apis/apps/v1/controllerrevisions'
    )
    field_apis_apps_v1_daemonsets: FieldApisAppsV1Daemonsets = Field(
        ..., alias='/apis/apps/v1/daemonsets'
    )
    field_apis_apps_v1_deployments: FieldApisAppsV1Deployments = Field(
        ..., alias='/apis/apps/v1/deployments'
    )
    field_apis_apps_v1_namespaces__namespace__controllerrevisions: (
        FieldApisAppsV1NamespacesNamespaceControllerrevisions
    ) = Field(..., alias='/apis/apps/v1/namespaces/{namespace}/controllerrevisions')
    field_apis_apps_v1_namespaces__namespace__controllerrevisions__name_: (
        FieldApisAppsV1NamespacesNamespaceControllerrevisionsName
    ) = Field(
        ..., alias='/apis/apps/v1/namespaces/{namespace}/controllerrevisions/{name}'
    )
    field_apis_apps_v1_namespaces__namespace__daemonsets: (
        FieldApisAppsV1NamespacesNamespaceDaemonsets
    ) = Field(..., alias='/apis/apps/v1/namespaces/{namespace}/daemonsets')
    field_apis_apps_v1_namespaces__namespace__daemonsets__name_: (
        FieldApisAppsV1NamespacesNamespaceDaemonsetsName
    ) = Field(..., alias='/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}')
    field_apis_apps_v1_namespaces__namespace__daemonsets__name__status: (
        FieldApisAppsV1NamespacesNamespaceDaemonsetsNameStatus
    ) = Field(
        ..., alias='/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}/status'
    )
    field_apis_apps_v1_namespaces__namespace__deployments: (
        FieldApisAppsV1NamespacesNamespaceDeployments
    ) = Field(..., alias='/apis/apps/v1/namespaces/{namespace}/deployments')
    field_apis_apps_v1_namespaces__namespace__deployments__name_: (
        FieldApisAppsV1NamespacesNamespaceDeploymentsName
    ) = Field(..., alias='/apis/apps/v1/namespaces/{namespace}/deployments/{name}')
    field_apis_apps_v1_namespaces__namespace__deployments__name__scale: (
        FieldApisAppsV1NamespacesNamespaceDeploymentsNameScale
    ) = Field(
        ..., alias='/apis/apps/v1/namespaces/{namespace}/deployments/{name}/scale'
    )
    field_apis_apps_v1_namespaces__namespace__deployments__name__status: (
        FieldApisAppsV1NamespacesNamespaceDeploymentsNameStatus
    ) = Field(
        ..., alias='/apis/apps/v1/namespaces/{namespace}/deployments/{name}/status'
    )
    field_apis_apps_v1_namespaces__namespace__replicasets: (
        FieldApisAppsV1NamespacesNamespaceReplicasets
    ) = Field(..., alias='/apis/apps/v1/namespaces/{namespace}/replicasets')
    field_apis_apps_v1_namespaces__namespace__replicasets__name_: (
        FieldApisAppsV1NamespacesNamespaceReplicasetsName
    ) = Field(..., alias='/apis/apps/v1/namespaces/{namespace}/replicasets/{name}')
    field_apis_apps_v1_namespaces__namespace__replicasets__name__scale: (
        FieldApisAppsV1NamespacesNamespaceReplicasetsNameScale
    ) = Field(
        ..., alias='/apis/apps/v1/namespaces/{namespace}/replicasets/{name}/scale'
    )
    field_apis_apps_v1_namespaces__namespace__replicasets__name__status: (
        FieldApisAppsV1NamespacesNamespaceReplicasetsNameStatus
    ) = Field(
        ..., alias='/apis/apps/v1/namespaces/{namespace}/replicasets/{name}/status'
    )
    field_apis_apps_v1_namespaces__namespace__statefulsets: (
        FieldApisAppsV1NamespacesNamespaceStatefulsets
    ) = Field(..., alias='/apis/apps/v1/namespaces/{namespace}/statefulsets')
    field_apis_apps_v1_namespaces__namespace__statefulsets__name_: (
        FieldApisAppsV1NamespacesNamespaceStatefulsetsName
    ) = Field(..., alias='/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}')
    field_apis_apps_v1_namespaces__namespace__statefulsets__name__scale: (
        FieldApisAppsV1NamespacesNamespaceStatefulsetsNameScale
    ) = Field(
        ..., alias='/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/scale'
    )
    field_apis_apps_v1_namespaces__namespace__statefulsets__name__status: (
        FieldApisAppsV1NamespacesNamespaceStatefulsetsNameStatus
    ) = Field(
        ..., alias='/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/status'
    )
    field_apis_apps_v1_replicasets: FieldApisAppsV1Replicasets = Field(
        ..., alias='/apis/apps/v1/replicasets'
    )
    field_apis_apps_v1_statefulsets: FieldApisAppsV1Statefulsets = Field(
        ..., alias='/apis/apps/v1/statefulsets'
    )
    field_apis_apps_v1_watch_controllerrevisions: (
        FieldApisAppsV1WatchControllerrevisions
    ) = Field(..., alias='/apis/apps/v1/watch/controllerrevisions')
    field_apis_apps_v1_watch_daemonsets: FieldApisAppsV1WatchDaemonsets = Field(
        ..., alias='/apis/apps/v1/watch/daemonsets'
    )
    field_apis_apps_v1_watch_deployments: FieldApisAppsV1WatchDeployments = Field(
        ..., alias='/apis/apps/v1/watch/deployments'
    )
    field_apis_apps_v1_watch_namespaces__namespace__controllerrevisions: (
        FieldApisAppsV1WatchNamespacesNamespaceControllerrevisions
    ) = Field(
        ..., alias='/apis/apps/v1/watch/namespaces/{namespace}/controllerrevisions'
    )
    field_apis_apps_v1_watch_namespaces__namespace__controllerrevisions__name_: (
        FieldApisAppsV1WatchNamespacesNamespaceControllerrevisionsName
    ) = Field(
        ...,
        alias='/apis/apps/v1/watch/namespaces/{namespace}/controllerrevisions/{name}',
    )
    field_apis_apps_v1_watch_namespaces__namespace__daemonsets: (
        FieldApisAppsV1WatchNamespacesNamespaceDaemonsets
    ) = Field(..., alias='/apis/apps/v1/watch/namespaces/{namespace}/daemonsets')
    field_apis_apps_v1_watch_namespaces__namespace__daemonsets__name_: (
        FieldApisAppsV1WatchNamespacesNamespaceDaemonsetsName
    ) = Field(..., alias='/apis/apps/v1/watch/namespaces/{namespace}/daemonsets/{name}')
    field_apis_apps_v1_watch_namespaces__namespace__deployments: (
        FieldApisAppsV1WatchNamespacesNamespaceDeployments
    ) = Field(..., alias='/apis/apps/v1/watch/namespaces/{namespace}/deployments')
    field_apis_apps_v1_watch_namespaces__namespace__deployments__name_: (
        FieldApisAppsV1WatchNamespacesNamespaceDeploymentsName
    ) = Field(
        ..., alias='/apis/apps/v1/watch/namespaces/{namespace}/deployments/{name}'
    )
    field_apis_apps_v1_watch_namespaces__namespace__replicasets: (
        FieldApisAppsV1WatchNamespacesNamespaceReplicasets
    ) = Field(..., alias='/apis/apps/v1/watch/namespaces/{namespace}/replicasets')
    field_apis_apps_v1_watch_namespaces__namespace__replicasets__name_: (
        FieldApisAppsV1WatchNamespacesNamespaceReplicasetsName
    ) = Field(
        ..., alias='/apis/apps/v1/watch/namespaces/{namespace}/replicasets/{name}'
    )
    field_apis_apps_v1_watch_namespaces__namespace__statefulsets: (
        FieldApisAppsV1WatchNamespacesNamespaceStatefulsets
    ) = Field(..., alias='/apis/apps/v1/watch/namespaces/{namespace}/statefulsets')
    field_apis_apps_v1_watch_namespaces__namespace__statefulsets__name_: (
        FieldApisAppsV1WatchNamespacesNamespaceStatefulsetsName
    ) = Field(
        ..., alias='/apis/apps/v1/watch/namespaces/{namespace}/statefulsets/{name}'
    )
    field_apis_apps_v1_watch_replicasets: FieldApisAppsV1WatchReplicasets = Field(
        ..., alias='/apis/apps/v1/watch/replicasets'
    )
    field_apis_apps_v1_watch_statefulsets: FieldApisAppsV1WatchStatefulsets = Field(
        ..., alias='/apis/apps/v1/watch/statefulsets'
    )
    field_apis_authentication_k8s_io_: FieldApisAuthenticationK8sIo = Field(
        ..., alias='/apis/authentication.k8s.io/'
    )
    field_apis_authentication_k8s_io_v1_: FieldApisAuthenticationK8sIoV1 = Field(
        ..., alias='/apis/authentication.k8s.io/v1/'
    )
    field_apis_authentication_k8s_io_v1_selfsubjectreviews: (
        FieldApisAuthenticationK8sIoV1Selfsubjectreviews
    ) = Field(..., alias='/apis/authentication.k8s.io/v1/selfsubjectreviews')
    field_apis_authentication_k8s_io_v1_tokenreviews: (
        FieldApisAuthenticationK8sIoV1Tokenreviews
    ) = Field(..., alias='/apis/authentication.k8s.io/v1/tokenreviews')
    field_apis_authentication_k8s_io_v1alpha1_: FieldApisAuthenticationK8sIoV1alpha1 = (
        Field(..., alias='/apis/authentication.k8s.io/v1alpha1/')
    )
    field_apis_authentication_k8s_io_v1alpha1_selfsubjectreviews: (
        FieldApisAuthenticationK8sIoV1alpha1Selfsubjectreviews
    ) = Field(..., alias='/apis/authentication.k8s.io/v1alpha1/selfsubjectreviews')
    field_apis_authentication_k8s_io_v1beta1_: FieldApisAuthenticationK8sIoV1beta1 = (
        Field(..., alias='/apis/authentication.k8s.io/v1beta1/')
    )
    field_apis_authentication_k8s_io_v1beta1_selfsubjectreviews: (
        FieldApisAuthenticationK8sIoV1beta1Selfsubjectreviews
    ) = Field(..., alias='/apis/authentication.k8s.io/v1beta1/selfsubjectreviews')
    field_apis_authorization_k8s_io_: FieldApisAuthorizationK8sIo = Field(
        ..., alias='/apis/authorization.k8s.io/'
    )
    field_apis_authorization_k8s_io_v1_: FieldApisAuthorizationK8sIoV1 = Field(
        ..., alias='/apis/authorization.k8s.io/v1/'
    )
    field_apis_authorization_k8s_io_v1_namespaces__namespace__localsubjectaccessreviews: (
        FieldApisAuthorizationK8sIoV1NamespacesNamespaceLocalsubjectaccessreviews
    ) = Field(
        ...,
        alias='/apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews',
    )
    field_apis_authorization_k8s_io_v1_selfsubjectaccessreviews: (
        FieldApisAuthorizationK8sIoV1Selfsubjectaccessreviews
    ) = Field(..., alias='/apis/authorization.k8s.io/v1/selfsubjectaccessreviews')
    field_apis_authorization_k8s_io_v1_selfsubjectrulesreviews: (
        FieldApisAuthorizationK8sIoV1Selfsubjectrulesreviews
    ) = Field(..., alias='/apis/authorization.k8s.io/v1/selfsubjectrulesreviews')
    field_apis_authorization_k8s_io_v1_subjectaccessreviews: (
        FieldApisAuthorizationK8sIoV1Subjectaccessreviews
    ) = Field(..., alias='/apis/authorization.k8s.io/v1/subjectaccessreviews')
    field_apis_autoscaling_: FieldApisAutoscaling = Field(
        ..., alias='/apis/autoscaling/'
    )
    field_apis_autoscaling_v1_: FieldApisAutoscalingV1 = Field(
        ..., alias='/apis/autoscaling/v1/'
    )
    field_apis_autoscaling_v1_horizontalpodautoscalers: (
        FieldApisAutoscalingV1Horizontalpodautoscalers
    ) = Field(..., alias='/apis/autoscaling/v1/horizontalpodautoscalers')
    field_apis_autoscaling_v1_namespaces__namespace__horizontalpodautoscalers: (
        FieldApisAutoscalingV1NamespacesNamespaceHorizontalpodautoscalers
    ) = Field(
        ...,
        alias='/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers',
    )
    field_apis_autoscaling_v1_namespaces__namespace__horizontalpodautoscalers__name_: (
        FieldApisAutoscalingV1NamespacesNamespaceHorizontalpodautoscalersName
    ) = Field(
        ...,
        alias='/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}',
    )
    field_apis_autoscaling_v1_namespaces__namespace__horizontalpodautoscalers__name__status: (
        FieldApisAutoscalingV1NamespacesNamespaceHorizontalpodautoscalersNameStatus
    ) = Field(
        ...,
        alias='/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status',
    )
    field_apis_autoscaling_v1_watch_horizontalpodautoscalers: (
        FieldApisAutoscalingV1WatchHorizontalpodautoscalers
    ) = Field(..., alias='/apis/autoscaling/v1/watch/horizontalpodautoscalers')
    field_apis_autoscaling_v1_watch_namespaces__namespace__horizontalpodautoscalers: (
        FieldApisAutoscalingV1WatchNamespacesNamespaceHorizontalpodautoscalers
    ) = Field(
        ...,
        alias='/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers',
    )
    field_apis_autoscaling_v1_watch_namespaces__namespace__horizontalpodautoscalers__name_: (
        FieldApisAutoscalingV1WatchNamespacesNamespaceHorizontalpodautoscalersName
    ) = Field(
        ...,
        alias='/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}',
    )
    field_apis_autoscaling_v2_: FieldApisAutoscalingV2 = Field(
        ..., alias='/apis/autoscaling/v2/'
    )
    field_apis_autoscaling_v2_horizontalpodautoscalers: (
        FieldApisAutoscalingV2Horizontalpodautoscalers
    ) = Field(..., alias='/apis/autoscaling/v2/horizontalpodautoscalers')
    field_apis_autoscaling_v2_namespaces__namespace__horizontalpodautoscalers: (
        FieldApisAutoscalingV2NamespacesNamespaceHorizontalpodautoscalers
    ) = Field(
        ...,
        alias='/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers',
    )
    field_apis_autoscaling_v2_namespaces__namespace__horizontalpodautoscalers__name_: (
        FieldApisAutoscalingV2NamespacesNamespaceHorizontalpodautoscalersName
    ) = Field(
        ...,
        alias='/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers/{name}',
    )
    field_apis_autoscaling_v2_namespaces__namespace__horizontalpodautoscalers__name__status: (
        FieldApisAutoscalingV2NamespacesNamespaceHorizontalpodautoscalersNameStatus
    ) = Field(
        ...,
        alias='/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers/{name}/status',
    )
    field_apis_autoscaling_v2_watch_horizontalpodautoscalers: (
        FieldApisAutoscalingV2WatchHorizontalpodautoscalers
    ) = Field(..., alias='/apis/autoscaling/v2/watch/horizontalpodautoscalers')
    field_apis_autoscaling_v2_watch_namespaces__namespace__horizontalpodautoscalers: (
        FieldApisAutoscalingV2WatchNamespacesNamespaceHorizontalpodautoscalers
    ) = Field(
        ...,
        alias='/apis/autoscaling/v2/watch/namespaces/{namespace}/horizontalpodautoscalers',
    )
    field_apis_autoscaling_v2_watch_namespaces__namespace__horizontalpodautoscalers__name_: (
        FieldApisAutoscalingV2WatchNamespacesNamespaceHorizontalpodautoscalersName
    ) = Field(
        ...,
        alias='/apis/autoscaling/v2/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}',
    )
    field_apis_batch_: FieldApisBatch = Field(..., alias='/apis/batch/')
    field_apis_batch_v1_: FieldApisBatchV1 = Field(..., alias='/apis/batch/v1/')
    field_apis_batch_v1_cronjobs: FieldApisBatchV1Cronjobs = Field(
        ..., alias='/apis/batch/v1/cronjobs'
    )
    field_apis_batch_v1_jobs: FieldApisBatchV1Jobs = Field(
        ..., alias='/apis/batch/v1/jobs'
    )
    field_apis_batch_v1_namespaces__namespace__cronjobs: (
        FieldApisBatchV1NamespacesNamespaceCronjobs
    ) = Field(..., alias='/apis/batch/v1/namespaces/{namespace}/cronjobs')
    field_apis_batch_v1_namespaces__namespace__cronjobs__name_: (
        FieldApisBatchV1NamespacesNamespaceCronjobsName
    ) = Field(..., alias='/apis/batch/v1/namespaces/{namespace}/cronjobs/{name}')
    field_apis_batch_v1_namespaces__namespace__cronjobs__name__status: (
        FieldApisBatchV1NamespacesNamespaceCronjobsNameStatus
    ) = Field(..., alias='/apis/batch/v1/namespaces/{namespace}/cronjobs/{name}/status')
    field_apis_batch_v1_namespaces__namespace__jobs: (
        FieldApisBatchV1NamespacesNamespaceJobs
    ) = Field(..., alias='/apis/batch/v1/namespaces/{namespace}/jobs')
    field_apis_batch_v1_namespaces__namespace__jobs__name_: (
        FieldApisBatchV1NamespacesNamespaceJobsName
    ) = Field(..., alias='/apis/batch/v1/namespaces/{namespace}/jobs/{name}')
    field_apis_batch_v1_namespaces__namespace__jobs__name__status: (
        FieldApisBatchV1NamespacesNamespaceJobsNameStatus
    ) = Field(..., alias='/apis/batch/v1/namespaces/{namespace}/jobs/{name}/status')
    field_apis_batch_v1_watch_cronjobs: FieldApisBatchV1WatchCronjobs = Field(
        ..., alias='/apis/batch/v1/watch/cronjobs'
    )
    field_apis_batch_v1_watch_jobs: FieldApisBatchV1WatchJobs = Field(
        ..., alias='/apis/batch/v1/watch/jobs'
    )
    field_apis_batch_v1_watch_namespaces__namespace__cronjobs: (
        FieldApisBatchV1WatchNamespacesNamespaceCronjobs
    ) = Field(..., alias='/apis/batch/v1/watch/namespaces/{namespace}/cronjobs')
    field_apis_batch_v1_watch_namespaces__namespace__cronjobs__name_: (
        FieldApisBatchV1WatchNamespacesNamespaceCronjobsName
    ) = Field(..., alias='/apis/batch/v1/watch/namespaces/{namespace}/cronjobs/{name}')
    field_apis_batch_v1_watch_namespaces__namespace__jobs: (
        FieldApisBatchV1WatchNamespacesNamespaceJobs
    ) = Field(..., alias='/apis/batch/v1/watch/namespaces/{namespace}/jobs')
    field_apis_batch_v1_watch_namespaces__namespace__jobs__name_: (
        FieldApisBatchV1WatchNamespacesNamespaceJobsName
    ) = Field(..., alias='/apis/batch/v1/watch/namespaces/{namespace}/jobs/{name}')
    field_apis_certificates_k8s_io_: FieldApisCertificatesK8sIo = Field(
        ..., alias='/apis/certificates.k8s.io/'
    )
    field_apis_certificates_k8s_io_v1_: FieldApisCertificatesK8sIoV1 = Field(
        ..., alias='/apis/certificates.k8s.io/v1/'
    )
    field_apis_certificates_k8s_io_v1_certificatesigningrequests: (
        FieldApisCertificatesK8sIoV1Certificatesigningrequests
    ) = Field(..., alias='/apis/certificates.k8s.io/v1/certificatesigningrequests')
    field_apis_certificates_k8s_io_v1_certificatesigningrequests__name_: (
        FieldApisCertificatesK8sIoV1CertificatesigningrequestsName
    ) = Field(
        ..., alias='/apis/certificates.k8s.io/v1/certificatesigningrequests/{name}'
    )
    field_apis_certificates_k8s_io_v1_certificatesigningrequests__name__approval: (
        FieldApisCertificatesK8sIoV1CertificatesigningrequestsNameApproval
    ) = Field(
        ...,
        alias='/apis/certificates.k8s.io/v1/certificatesigningrequests/{name}/approval',
    )
    field_apis_certificates_k8s_io_v1_certificatesigningrequests__name__status: (
        FieldApisCertificatesK8sIoV1CertificatesigningrequestsNameStatus
    ) = Field(
        ...,
        alias='/apis/certificates.k8s.io/v1/certificatesigningrequests/{name}/status',
    )
    field_apis_certificates_k8s_io_v1_watch_certificatesigningrequests: (
        FieldApisCertificatesK8sIoV1WatchCertificatesigningrequests
    ) = Field(
        ..., alias='/apis/certificates.k8s.io/v1/watch/certificatesigningrequests'
    )
    field_apis_certificates_k8s_io_v1_watch_certificatesigningrequests__name_: (
        FieldApisCertificatesK8sIoV1WatchCertificatesigningrequestsName
    ) = Field(
        ...,
        alias='/apis/certificates.k8s.io/v1/watch/certificatesigningrequests/{name}',
    )
    field_apis_certificates_k8s_io_v1alpha1_: FieldApisCertificatesK8sIoV1alpha1 = (
        Field(..., alias='/apis/certificates.k8s.io/v1alpha1/')
    )
    field_apis_certificates_k8s_io_v1alpha1_clustertrustbundles: (
        FieldApisCertificatesK8sIoV1alpha1Clustertrustbundles
    ) = Field(..., alias='/apis/certificates.k8s.io/v1alpha1/clustertrustbundles')
    field_apis_certificates_k8s_io_v1alpha1_clustertrustbundles__name_: (
        FieldApisCertificatesK8sIoV1alpha1ClustertrustbundlesName
    ) = Field(
        ..., alias='/apis/certificates.k8s.io/v1alpha1/clustertrustbundles/{name}'
    )
    field_apis_certificates_k8s_io_v1alpha1_watch_clustertrustbundles: (
        FieldApisCertificatesK8sIoV1alpha1WatchClustertrustbundles
    ) = Field(..., alias='/apis/certificates.k8s.io/v1alpha1/watch/clustertrustbundles')
    field_apis_certificates_k8s_io_v1alpha1_watch_clustertrustbundles__name_: (
        FieldApisCertificatesK8sIoV1alpha1WatchClustertrustbundlesName
    ) = Field(
        ..., alias='/apis/certificates.k8s.io/v1alpha1/watch/clustertrustbundles/{name}'
    )
    field_apis_coordination_k8s_io_: FieldApisCoordinationK8sIo = Field(
        ..., alias='/apis/coordination.k8s.io/'
    )
    field_apis_coordination_k8s_io_v1_: FieldApisCoordinationK8sIoV1 = Field(
        ..., alias='/apis/coordination.k8s.io/v1/'
    )
    field_apis_coordination_k8s_io_v1_leases: FieldApisCoordinationK8sIoV1Leases = (
        Field(..., alias='/apis/coordination.k8s.io/v1/leases')
    )
    field_apis_coordination_k8s_io_v1_namespaces__namespace__leases: (
        FieldApisCoordinationK8sIoV1NamespacesNamespaceLeases
    ) = Field(..., alias='/apis/coordination.k8s.io/v1/namespaces/{namespace}/leases')
    field_apis_coordination_k8s_io_v1_namespaces__namespace__leases__name_: (
        FieldApisCoordinationK8sIoV1NamespacesNamespaceLeasesName
    ) = Field(
        ..., alias='/apis/coordination.k8s.io/v1/namespaces/{namespace}/leases/{name}'
    )
    field_apis_coordination_k8s_io_v1_watch_leases: (
        FieldApisCoordinationK8sIoV1WatchLeases
    ) = Field(..., alias='/apis/coordination.k8s.io/v1/watch/leases')
    field_apis_coordination_k8s_io_v1_watch_namespaces__namespace__leases: (
        FieldApisCoordinationK8sIoV1WatchNamespacesNamespaceLeases
    ) = Field(
        ..., alias='/apis/coordination.k8s.io/v1/watch/namespaces/{namespace}/leases'
    )
    field_apis_coordination_k8s_io_v1_watch_namespaces__namespace__leases__name_: (
        FieldApisCoordinationK8sIoV1WatchNamespacesNamespaceLeasesName
    ) = Field(
        ...,
        alias='/apis/coordination.k8s.io/v1/watch/namespaces/{namespace}/leases/{name}',
    )
    field_apis_coordination_k8s_io_v1alpha1_: FieldApisCoordinationK8sIoV1alpha1 = (
        Field(..., alias='/apis/coordination.k8s.io/v1alpha1/')
    )
    field_apis_coordination_k8s_io_v1alpha1_leasecandidates: (
        FieldApisCoordinationK8sIoV1alpha1Leasecandidates
    ) = Field(..., alias='/apis/coordination.k8s.io/v1alpha1/leasecandidates')
    field_apis_coordination_k8s_io_v1alpha1_namespaces__namespace__leasecandidates: (
        FieldApisCoordinationK8sIoV1alpha1NamespacesNamespaceLeasecandidates
    ) = Field(
        ...,
        alias='/apis/coordination.k8s.io/v1alpha1/namespaces/{namespace}/leasecandidates',
    )
    field_apis_coordination_k8s_io_v1alpha1_namespaces__namespace__leasecandidates__name_: (
        FieldApisCoordinationK8sIoV1alpha1NamespacesNamespaceLeasecandidatesName
    ) = Field(
        ...,
        alias='/apis/coordination.k8s.io/v1alpha1/namespaces/{namespace}/leasecandidates/{name}',
    )
    field_apis_coordination_k8s_io_v1alpha1_watch_leasecandidates: (
        FieldApisCoordinationK8sIoV1alpha1WatchLeasecandidates
    ) = Field(..., alias='/apis/coordination.k8s.io/v1alpha1/watch/leasecandidates')
    field_apis_coordination_k8s_io_v1alpha1_watch_namespaces__namespace__leasecandidates: (
        FieldApisCoordinationK8sIoV1alpha1WatchNamespacesNamespaceLeasecandidates
    ) = Field(
        ...,
        alias='/apis/coordination.k8s.io/v1alpha1/watch/namespaces/{namespace}/leasecandidates',
    )
    field_apis_coordination_k8s_io_v1alpha1_watch_namespaces__namespace__leasecandidates__name_: (
        FieldApisCoordinationK8sIoV1alpha1WatchNamespacesNamespaceLeasecandidatesName
    ) = Field(
        ...,
        alias='/apis/coordination.k8s.io/v1alpha1/watch/namespaces/{namespace}/leasecandidates/{name}',
    )
    field_apis_discovery_k8s_io_: FieldApisDiscoveryK8sIo = Field(
        ..., alias='/apis/discovery.k8s.io/'
    )
    field_apis_discovery_k8s_io_v1_: FieldApisDiscoveryK8sIoV1 = Field(
        ..., alias='/apis/discovery.k8s.io/v1/'
    )
    field_apis_discovery_k8s_io_v1_endpointslices: (
        FieldApisDiscoveryK8sIoV1Endpointslices
    ) = Field(..., alias='/apis/discovery.k8s.io/v1/endpointslices')
    field_apis_discovery_k8s_io_v1_namespaces__namespace__endpointslices: (
        FieldApisDiscoveryK8sIoV1NamespacesNamespaceEndpointslices
    ) = Field(
        ..., alias='/apis/discovery.k8s.io/v1/namespaces/{namespace}/endpointslices'
    )
    field_apis_discovery_k8s_io_v1_namespaces__namespace__endpointslices__name_: (
        FieldApisDiscoveryK8sIoV1NamespacesNamespaceEndpointslicesName
    ) = Field(
        ...,
        alias='/apis/discovery.k8s.io/v1/namespaces/{namespace}/endpointslices/{name}',
    )
    field_apis_discovery_k8s_io_v1_watch_endpointslices: (
        FieldApisDiscoveryK8sIoV1WatchEndpointslices
    ) = Field(..., alias='/apis/discovery.k8s.io/v1/watch/endpointslices')
    field_apis_discovery_k8s_io_v1_watch_namespaces__namespace__endpointslices: (
        FieldApisDiscoveryK8sIoV1WatchNamespacesNamespaceEndpointslices
    ) = Field(
        ...,
        alias='/apis/discovery.k8s.io/v1/watch/namespaces/{namespace}/endpointslices',
    )
    field_apis_discovery_k8s_io_v1_watch_namespaces__namespace__endpointslices__name_: (
        FieldApisDiscoveryK8sIoV1WatchNamespacesNamespaceEndpointslicesName
    ) = Field(
        ...,
        alias='/apis/discovery.k8s.io/v1/watch/namespaces/{namespace}/endpointslices/{name}',
    )
    field_apis_events_k8s_io_: FieldApisEventsK8sIo = Field(
        ..., alias='/apis/events.k8s.io/'
    )
    field_apis_events_k8s_io_v1_: FieldApisEventsK8sIoV1 = Field(
        ..., alias='/apis/events.k8s.io/v1/'
    )
    field_apis_events_k8s_io_v1_events: FieldApisEventsK8sIoV1Events = Field(
        ..., alias='/apis/events.k8s.io/v1/events'
    )
    field_apis_events_k8s_io_v1_namespaces__namespace__events: (
        FieldApisEventsK8sIoV1NamespacesNamespaceEvents
    ) = Field(..., alias='/apis/events.k8s.io/v1/namespaces/{namespace}/events')
    field_apis_events_k8s_io_v1_namespaces__namespace__events__name_: (
        FieldApisEventsK8sIoV1NamespacesNamespaceEventsName
    ) = Field(..., alias='/apis/events.k8s.io/v1/namespaces/{namespace}/events/{name}')
    field_apis_events_k8s_io_v1_watch_events: FieldApisEventsK8sIoV1WatchEvents = Field(
        ..., alias='/apis/events.k8s.io/v1/watch/events'
    )
    field_apis_events_k8s_io_v1_watch_namespaces__namespace__events: (
        FieldApisEventsK8sIoV1WatchNamespacesNamespaceEvents
    ) = Field(..., alias='/apis/events.k8s.io/v1/watch/namespaces/{namespace}/events')
    field_apis_events_k8s_io_v1_watch_namespaces__namespace__events__name_: (
        FieldApisEventsK8sIoV1WatchNamespacesNamespaceEventsName
    ) = Field(
        ..., alias='/apis/events.k8s.io/v1/watch/namespaces/{namespace}/events/{name}'
    )
    field_apis_flowcontrol_apiserver_k8s_io_: FieldApisFlowcontrolApiserverK8sIo = (
        Field(..., alias='/apis/flowcontrol.apiserver.k8s.io/')
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1_: (
        FieldApisFlowcontrolApiserverK8sIoV1
    ) = Field(..., alias='/apis/flowcontrol.apiserver.k8s.io/v1/')
    field_apis_flowcontrol_apiserver_k8s_io_v1_flowschemas: (
        FieldApisFlowcontrolApiserverK8sIoV1Flowschemas
    ) = Field(..., alias='/apis/flowcontrol.apiserver.k8s.io/v1/flowschemas')
    field_apis_flowcontrol_apiserver_k8s_io_v1_flowschemas__name_: (
        FieldApisFlowcontrolApiserverK8sIoV1FlowschemasName
    ) = Field(..., alias='/apis/flowcontrol.apiserver.k8s.io/v1/flowschemas/{name}')
    field_apis_flowcontrol_apiserver_k8s_io_v1_flowschemas__name__status: (
        FieldApisFlowcontrolApiserverK8sIoV1FlowschemasNameStatus
    ) = Field(
        ..., alias='/apis/flowcontrol.apiserver.k8s.io/v1/flowschemas/{name}/status'
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1_prioritylevelconfigurations: (
        FieldApisFlowcontrolApiserverK8sIoV1Prioritylevelconfigurations
    ) = Field(
        ..., alias='/apis/flowcontrol.apiserver.k8s.io/v1/prioritylevelconfigurations'
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1_prioritylevelconfigurations__name_: (
        FieldApisFlowcontrolApiserverK8sIoV1PrioritylevelconfigurationsName
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1/prioritylevelconfigurations/{name}',
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1_prioritylevelconfigurations__name__status: (
        FieldApisFlowcontrolApiserverK8sIoV1PrioritylevelconfigurationsNameStatus
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1/prioritylevelconfigurations/{name}/status',
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1_watch_flowschemas: (
        FieldApisFlowcontrolApiserverK8sIoV1WatchFlowschemas
    ) = Field(..., alias='/apis/flowcontrol.apiserver.k8s.io/v1/watch/flowschemas')
    field_apis_flowcontrol_apiserver_k8s_io_v1_watch_flowschemas__name_: (
        FieldApisFlowcontrolApiserverK8sIoV1WatchFlowschemasName
    ) = Field(
        ..., alias='/apis/flowcontrol.apiserver.k8s.io/v1/watch/flowschemas/{name}'
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1_watch_prioritylevelconfigurations: (
        FieldApisFlowcontrolApiserverK8sIoV1WatchPrioritylevelconfigurations
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1/watch/prioritylevelconfigurations',
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1_watch_prioritylevelconfigurations__name_: (
        FieldApisFlowcontrolApiserverK8sIoV1WatchPrioritylevelconfigurationsName
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1/watch/prioritylevelconfigurations/{name}',
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3
    ) = Field(..., alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/')
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_flowschemas: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3Flowschemas
    ) = Field(..., alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/flowschemas')
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_flowschemas__name_: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3FlowschemasName
    ) = Field(
        ..., alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/flowschemas/{name}'
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_flowschemas__name__status: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3FlowschemasNameStatus
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/flowschemas/{name}/status',
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_prioritylevelconfigurations: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3Prioritylevelconfigurations
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/prioritylevelconfigurations',
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_prioritylevelconfigurations__name_: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3PrioritylevelconfigurationsName
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/prioritylevelconfigurations/{name}',
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_prioritylevelconfigurations__name__status: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3PrioritylevelconfigurationsNameStatus
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/prioritylevelconfigurations/{name}/status',
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_watch_flowschemas: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3WatchFlowschemas
    ) = Field(..., alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/watch/flowschemas')
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_watch_flowschemas__name_: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3WatchFlowschemasName
    ) = Field(
        ..., alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/watch/flowschemas/{name}'
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_watch_prioritylevelconfigurations: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3WatchPrioritylevelconfigurations
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/watch/prioritylevelconfigurations',
    )
    field_apis_flowcontrol_apiserver_k8s_io_v1beta3_watch_prioritylevelconfigurations__name_: (
        FieldApisFlowcontrolApiserverK8sIoV1beta3WatchPrioritylevelconfigurationsName
    ) = Field(
        ...,
        alias='/apis/flowcontrol.apiserver.k8s.io/v1beta3/watch/prioritylevelconfigurations/{name}',
    )
    field_apis_internal_apiserver_k8s_io_: FieldApisInternalApiserverK8sIo = Field(
        ..., alias='/apis/internal.apiserver.k8s.io/'
    )
    field_apis_internal_apiserver_k8s_io_v1alpha1_: (
        FieldApisInternalApiserverK8sIoV1alpha1
    ) = Field(..., alias='/apis/internal.apiserver.k8s.io/v1alpha1/')
    field_apis_internal_apiserver_k8s_io_v1alpha1_storageversions: (
        FieldApisInternalApiserverK8sIoV1alpha1Storageversions
    ) = Field(..., alias='/apis/internal.apiserver.k8s.io/v1alpha1/storageversions')
    field_apis_internal_apiserver_k8s_io_v1alpha1_storageversions__name_: (
        FieldApisInternalApiserverK8sIoV1alpha1StorageversionsName
    ) = Field(
        ..., alias='/apis/internal.apiserver.k8s.io/v1alpha1/storageversions/{name}'
    )
    field_apis_internal_apiserver_k8s_io_v1alpha1_storageversions__name__status: (
        FieldApisInternalApiserverK8sIoV1alpha1StorageversionsNameStatus
    ) = Field(
        ...,
        alias='/apis/internal.apiserver.k8s.io/v1alpha1/storageversions/{name}/status',
    )
    field_apis_internal_apiserver_k8s_io_v1alpha1_watch_storageversions: (
        FieldApisInternalApiserverK8sIoV1alpha1WatchStorageversions
    ) = Field(
        ..., alias='/apis/internal.apiserver.k8s.io/v1alpha1/watch/storageversions'
    )
    field_apis_internal_apiserver_k8s_io_v1alpha1_watch_storageversions__name_: (
        FieldApisInternalApiserverK8sIoV1alpha1WatchStorageversionsName
    ) = Field(
        ...,
        alias='/apis/internal.apiserver.k8s.io/v1alpha1/watch/storageversions/{name}',
    )
    field_apis_networking_k8s_io_: FieldApisNetworkingK8sIo = Field(
        ..., alias='/apis/networking.k8s.io/'
    )
    field_apis_networking_k8s_io_v1_: FieldApisNetworkingK8sIoV1 = Field(
        ..., alias='/apis/networking.k8s.io/v1/'
    )
    field_apis_networking_k8s_io_v1_ingressclasses: (
        FieldApisNetworkingK8sIoV1Ingressclasses
    ) = Field(..., alias='/apis/networking.k8s.io/v1/ingressclasses')
    field_apis_networking_k8s_io_v1_ingressclasses__name_: (
        FieldApisNetworkingK8sIoV1IngressclassesName
    ) = Field(..., alias='/apis/networking.k8s.io/v1/ingressclasses/{name}')
    field_apis_networking_k8s_io_v1_ingresses: FieldApisNetworkingK8sIoV1Ingresses = (
        Field(..., alias='/apis/networking.k8s.io/v1/ingresses')
    )
    field_apis_networking_k8s_io_v1_namespaces__namespace__ingresses: (
        FieldApisNetworkingK8sIoV1NamespacesNamespaceIngresses
    ) = Field(..., alias='/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses')
    field_apis_networking_k8s_io_v1_namespaces__namespace__ingresses__name_: (
        FieldApisNetworkingK8sIoV1NamespacesNamespaceIngressesName
    ) = Field(
        ..., alias='/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses/{name}'
    )
    field_apis_networking_k8s_io_v1_namespaces__namespace__ingresses__name__status: (
        FieldApisNetworkingK8sIoV1NamespacesNamespaceIngressesNameStatus
    ) = Field(
        ...,
        alias='/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses/{name}/status',
    )
    field_apis_networking_k8s_io_v1_namespaces__namespace__networkpolicies: (
        FieldApisNetworkingK8sIoV1NamespacesNamespaceNetworkpolicies
    ) = Field(
        ..., alias='/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies'
    )
    field_apis_networking_k8s_io_v1_namespaces__namespace__networkpolicies__name_: (
        FieldApisNetworkingK8sIoV1NamespacesNamespaceNetworkpoliciesName
    ) = Field(
        ...,
        alias='/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}',
    )
    field_apis_networking_k8s_io_v1_networkpolicies: (
        FieldApisNetworkingK8sIoV1Networkpolicies
    ) = Field(..., alias='/apis/networking.k8s.io/v1/networkpolicies')
    field_apis_networking_k8s_io_v1_watch_ingressclasses: (
        FieldApisNetworkingK8sIoV1WatchIngressclasses
    ) = Field(..., alias='/apis/networking.k8s.io/v1/watch/ingressclasses')
    field_apis_networking_k8s_io_v1_watch_ingressclasses__name_: (
        FieldApisNetworkingK8sIoV1WatchIngressclassesName
    ) = Field(..., alias='/apis/networking.k8s.io/v1/watch/ingressclasses/{name}')
    field_apis_networking_k8s_io_v1_watch_ingresses: (
        FieldApisNetworkingK8sIoV1WatchIngresses
    ) = Field(..., alias='/apis/networking.k8s.io/v1/watch/ingresses')
    field_apis_networking_k8s_io_v1_watch_namespaces__namespace__ingresses: (
        FieldApisNetworkingK8sIoV1WatchNamespacesNamespaceIngresses
    ) = Field(
        ..., alias='/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/ingresses'
    )
    field_apis_networking_k8s_io_v1_watch_namespaces__namespace__ingresses__name_: (
        FieldApisNetworkingK8sIoV1WatchNamespacesNamespaceIngressesName
    ) = Field(
        ...,
        alias='/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/ingresses/{name}',
    )
    field_apis_networking_k8s_io_v1_watch_namespaces__namespace__networkpolicies: (
        FieldApisNetworkingK8sIoV1WatchNamespacesNamespaceNetworkpolicies
    ) = Field(
        ...,
        alias='/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies',
    )
    field_apis_networking_k8s_io_v1_watch_namespaces__namespace__networkpolicies__name_: (
        FieldApisNetworkingK8sIoV1WatchNamespacesNamespaceNetworkpoliciesName
    ) = Field(
        ...,
        alias='/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies/{name}',
    )
    field_apis_networking_k8s_io_v1_watch_networkpolicies: (
        FieldApisNetworkingK8sIoV1WatchNetworkpolicies
    ) = Field(..., alias='/apis/networking.k8s.io/v1/watch/networkpolicies')
    field_apis_networking_k8s_io_v1beta1_: FieldApisNetworkingK8sIoV1beta1 = Field(
        ..., alias='/apis/networking.k8s.io/v1beta1/'
    )
    field_apis_networking_k8s_io_v1beta1_ipaddresses: (
        FieldApisNetworkingK8sIoV1beta1Ipaddresses
    ) = Field(..., alias='/apis/networking.k8s.io/v1beta1/ipaddresses')
    field_apis_networking_k8s_io_v1beta1_ipaddresses__name_: (
        FieldApisNetworkingK8sIoV1beta1IpaddressesName
    ) = Field(..., alias='/apis/networking.k8s.io/v1beta1/ipaddresses/{name}')
    field_apis_networking_k8s_io_v1beta1_servicecidrs: (
        FieldApisNetworkingK8sIoV1beta1Servicecidrs
    ) = Field(..., alias='/apis/networking.k8s.io/v1beta1/servicecidrs')
    field_apis_networking_k8s_io_v1beta1_servicecidrs__name_: (
        FieldApisNetworkingK8sIoV1beta1ServicecidrsName
    ) = Field(..., alias='/apis/networking.k8s.io/v1beta1/servicecidrs/{name}')
    field_apis_networking_k8s_io_v1beta1_servicecidrs__name__status: (
        FieldApisNetworkingK8sIoV1beta1ServicecidrsNameStatus
    ) = Field(..., alias='/apis/networking.k8s.io/v1beta1/servicecidrs/{name}/status')
    field_apis_networking_k8s_io_v1beta1_watch_ipaddresses: (
        FieldApisNetworkingK8sIoV1beta1WatchIpaddresses
    ) = Field(..., alias='/apis/networking.k8s.io/v1beta1/watch/ipaddresses')
    field_apis_networking_k8s_io_v1beta1_watch_ipaddresses__name_: (
        FieldApisNetworkingK8sIoV1beta1WatchIpaddressesName
    ) = Field(..., alias='/apis/networking.k8s.io/v1beta1/watch/ipaddresses/{name}')
    field_apis_networking_k8s_io_v1beta1_watch_servicecidrs: (
        FieldApisNetworkingK8sIoV1beta1WatchServicecidrs
    ) = Field(..., alias='/apis/networking.k8s.io/v1beta1/watch/servicecidrs')
    field_apis_networking_k8s_io_v1beta1_watch_servicecidrs__name_: (
        FieldApisNetworkingK8sIoV1beta1WatchServicecidrsName
    ) = Field(..., alias='/apis/networking.k8s.io/v1beta1/watch/servicecidrs/{name}')
    field_apis_node_k8s_io_: FieldApisNodeK8sIo = Field(..., alias='/apis/node.k8s.io/')
    field_apis_node_k8s_io_v1_: FieldApisNodeK8sIoV1 = Field(
        ..., alias='/apis/node.k8s.io/v1/'
    )
    field_apis_node_k8s_io_v1_runtimeclasses: FieldApisNodeK8sIoV1Runtimeclasses = (
        Field(..., alias='/apis/node.k8s.io/v1/runtimeclasses')
    )
    field_apis_node_k8s_io_v1_runtimeclasses__name_: (
        FieldApisNodeK8sIoV1RuntimeclassesName
    ) = Field(..., alias='/apis/node.k8s.io/v1/runtimeclasses/{name}')
    field_apis_node_k8s_io_v1_watch_runtimeclasses: (
        FieldApisNodeK8sIoV1WatchRuntimeclasses
    ) = Field(..., alias='/apis/node.k8s.io/v1/watch/runtimeclasses')
    field_apis_node_k8s_io_v1_watch_runtimeclasses__name_: (
        FieldApisNodeK8sIoV1WatchRuntimeclassesName
    ) = Field(..., alias='/apis/node.k8s.io/v1/watch/runtimeclasses/{name}')
    field_apis_policy_: FieldApisPolicy = Field(..., alias='/apis/policy/')
    field_apis_policy_v1_: FieldApisPolicyV1 = Field(..., alias='/apis/policy/v1/')
    field_apis_policy_v1_namespaces__namespace__poddisruptionbudgets: (
        FieldApisPolicyV1NamespacesNamespacePoddisruptionbudgets
    ) = Field(..., alias='/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets')
    field_apis_policy_v1_namespaces__namespace__poddisruptionbudgets__name_: (
        FieldApisPolicyV1NamespacesNamespacePoddisruptionbudgetsName
    ) = Field(
        ..., alias='/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets/{name}'
    )
    field_apis_policy_v1_namespaces__namespace__poddisruptionbudgets__name__status: (
        FieldApisPolicyV1NamespacesNamespacePoddisruptionbudgetsNameStatus
    ) = Field(
        ...,
        alias='/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets/{name}/status',
    )
    field_apis_policy_v1_poddisruptionbudgets: FieldApisPolicyV1Poddisruptionbudgets = (
        Field(..., alias='/apis/policy/v1/poddisruptionbudgets')
    )
    field_apis_policy_v1_watch_namespaces__namespace__poddisruptionbudgets: (
        FieldApisPolicyV1WatchNamespacesNamespacePoddisruptionbudgets
    ) = Field(
        ..., alias='/apis/policy/v1/watch/namespaces/{namespace}/poddisruptionbudgets'
    )
    field_apis_policy_v1_watch_namespaces__namespace__poddisruptionbudgets__name_: (
        FieldApisPolicyV1WatchNamespacesNamespacePoddisruptionbudgetsName
    ) = Field(
        ...,
        alias='/apis/policy/v1/watch/namespaces/{namespace}/poddisruptionbudgets/{name}',
    )
    field_apis_policy_v1_watch_poddisruptionbudgets: (
        FieldApisPolicyV1WatchPoddisruptionbudgets
    ) = Field(..., alias='/apis/policy/v1/watch/poddisruptionbudgets')
    field_apis_rbac_authorization_k8s_io_: FieldApisRbacAuthorizationK8sIo = Field(
        ..., alias='/apis/rbac.authorization.k8s.io/'
    )
    field_apis_rbac_authorization_k8s_io_v1_: FieldApisRbacAuthorizationK8sIoV1 = Field(
        ..., alias='/apis/rbac.authorization.k8s.io/v1/'
    )
    field_apis_rbac_authorization_k8s_io_v1_clusterrolebindings: (
        FieldApisRbacAuthorizationK8sIoV1Clusterrolebindings
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/clusterrolebindings')
    field_apis_rbac_authorization_k8s_io_v1_clusterrolebindings__name_: (
        FieldApisRbacAuthorizationK8sIoV1ClusterrolebindingsName
    ) = Field(
        ..., alias='/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}'
    )
    field_apis_rbac_authorization_k8s_io_v1_clusterroles: (
        FieldApisRbacAuthorizationK8sIoV1Clusterroles
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/clusterroles')
    field_apis_rbac_authorization_k8s_io_v1_clusterroles__name_: (
        FieldApisRbacAuthorizationK8sIoV1ClusterrolesName
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/clusterroles/{name}')
    field_apis_rbac_authorization_k8s_io_v1_namespaces__namespace__rolebindings: (
        FieldApisRbacAuthorizationK8sIoV1NamespacesNamespaceRolebindings
    ) = Field(
        ...,
        alias='/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings',
    )
    field_apis_rbac_authorization_k8s_io_v1_namespaces__namespace__rolebindings__name_: (
        FieldApisRbacAuthorizationK8sIoV1NamespacesNamespaceRolebindingsName
    ) = Field(
        ...,
        alias='/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}',
    )
    field_apis_rbac_authorization_k8s_io_v1_namespaces__namespace__roles: (
        FieldApisRbacAuthorizationK8sIoV1NamespacesNamespaceRoles
    ) = Field(
        ..., alias='/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles'
    )
    field_apis_rbac_authorization_k8s_io_v1_namespaces__namespace__roles__name_: (
        FieldApisRbacAuthorizationK8sIoV1NamespacesNamespaceRolesName
    ) = Field(
        ...,
        alias='/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}',
    )
    field_apis_rbac_authorization_k8s_io_v1_rolebindings: (
        FieldApisRbacAuthorizationK8sIoV1Rolebindings
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/rolebindings')
    field_apis_rbac_authorization_k8s_io_v1_roles: (
        FieldApisRbacAuthorizationK8sIoV1Roles
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/roles')
    field_apis_rbac_authorization_k8s_io_v1_watch_clusterrolebindings: (
        FieldApisRbacAuthorizationK8sIoV1WatchClusterrolebindings
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/watch/clusterrolebindings')
    field_apis_rbac_authorization_k8s_io_v1_watch_clusterrolebindings__name_: (
        FieldApisRbacAuthorizationK8sIoV1WatchClusterrolebindingsName
    ) = Field(
        ..., alias='/apis/rbac.authorization.k8s.io/v1/watch/clusterrolebindings/{name}'
    )
    field_apis_rbac_authorization_k8s_io_v1_watch_clusterroles: (
        FieldApisRbacAuthorizationK8sIoV1WatchClusterroles
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/watch/clusterroles')
    field_apis_rbac_authorization_k8s_io_v1_watch_clusterroles__name_: (
        FieldApisRbacAuthorizationK8sIoV1WatchClusterrolesName
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/watch/clusterroles/{name}')
    field_apis_rbac_authorization_k8s_io_v1_watch_namespaces__namespace__rolebindings: (
        FieldApisRbacAuthorizationK8sIoV1WatchNamespacesNamespaceRolebindings
    ) = Field(
        ...,
        alias='/apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/rolebindings',
    )
    field_apis_rbac_authorization_k8s_io_v1_watch_namespaces__namespace__rolebindings__name_: (
        FieldApisRbacAuthorizationK8sIoV1WatchNamespacesNamespaceRolebindingsName
    ) = Field(
        ...,
        alias='/apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/rolebindings/{name}',
    )
    field_apis_rbac_authorization_k8s_io_v1_watch_namespaces__namespace__roles: (
        FieldApisRbacAuthorizationK8sIoV1WatchNamespacesNamespaceRoles
    ) = Field(
        ...,
        alias='/apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/roles',
    )
    field_apis_rbac_authorization_k8s_io_v1_watch_namespaces__namespace__roles__name_: (
        FieldApisRbacAuthorizationK8sIoV1WatchNamespacesNamespaceRolesName
    ) = Field(
        ...,
        alias='/apis/rbac.authorization.k8s.io/v1/watch/namespaces/{namespace}/roles/{name}',
    )
    field_apis_rbac_authorization_k8s_io_v1_watch_rolebindings: (
        FieldApisRbacAuthorizationK8sIoV1WatchRolebindings
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/watch/rolebindings')
    field_apis_rbac_authorization_k8s_io_v1_watch_roles: (
        FieldApisRbacAuthorizationK8sIoV1WatchRoles
    ) = Field(..., alias='/apis/rbac.authorization.k8s.io/v1/watch/roles')
    field_apis_resource_k8s_io_: FieldApisResourceK8sIo = Field(
        ..., alias='/apis/resource.k8s.io/'
    )
    field_apis_resource_k8s_io_v1alpha3_: FieldApisResourceK8sIoV1alpha3 = Field(
        ..., alias='/apis/resource.k8s.io/v1alpha3/'
    )
    field_apis_resource_k8s_io_v1alpha3_deviceclasses: (
        FieldApisResourceK8sIoV1alpha3Deviceclasses
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/deviceclasses')
    field_apis_resource_k8s_io_v1alpha3_deviceclasses__name_: (
        FieldApisResourceK8sIoV1alpha3DeviceclassesName
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/deviceclasses/{name}')
    field_apis_resource_k8s_io_v1alpha3_namespaces__namespace__podschedulingcontexts: (
        FieldApisResourceK8sIoV1alpha3NamespacesNamespacePodschedulingcontexts
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/namespaces/{namespace}/podschedulingcontexts',
    )
    field_apis_resource_k8s_io_v1alpha3_namespaces__namespace__podschedulingcontexts__name_: (
        FieldApisResourceK8sIoV1alpha3NamespacesNamespacePodschedulingcontextsName
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/namespaces/{namespace}/podschedulingcontexts/{name}',
    )
    field_apis_resource_k8s_io_v1alpha3_namespaces__namespace__podschedulingcontexts__name__status: (
        FieldApisResourceK8sIoV1alpha3NamespacesNamespacePodschedulingcontextsNameStatus
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/namespaces/{namespace}/podschedulingcontexts/{name}/status',
    )
    field_apis_resource_k8s_io_v1alpha3_namespaces__namespace__resourceclaims: (
        FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaims
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/namespaces/{namespace}/resourceclaims',
    )
    field_apis_resource_k8s_io_v1alpha3_namespaces__namespace__resourceclaims__name_: (
        FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaimsName
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/namespaces/{namespace}/resourceclaims/{name}',
    )
    field_apis_resource_k8s_io_v1alpha3_namespaces__namespace__resourceclaims__name__status: (
        FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaimsNameStatus
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/namespaces/{namespace}/resourceclaims/{name}/status',
    )
    field_apis_resource_k8s_io_v1alpha3_namespaces__namespace__resourceclaimtemplates: (
        FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaimtemplates
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/namespaces/{namespace}/resourceclaimtemplates',
    )
    field_apis_resource_k8s_io_v1alpha3_namespaces__namespace__resourceclaimtemplates__name_: (
        FieldApisResourceK8sIoV1alpha3NamespacesNamespaceResourceclaimtemplatesName
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/namespaces/{namespace}/resourceclaimtemplates/{name}',
    )
    field_apis_resource_k8s_io_v1alpha3_podschedulingcontexts: (
        FieldApisResourceK8sIoV1alpha3Podschedulingcontexts
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/podschedulingcontexts')
    field_apis_resource_k8s_io_v1alpha3_resourceclaims: (
        FieldApisResourceK8sIoV1alpha3Resourceclaims
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/resourceclaims')
    field_apis_resource_k8s_io_v1alpha3_resourceclaimtemplates: (
        FieldApisResourceK8sIoV1alpha3Resourceclaimtemplates
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/resourceclaimtemplates')
    field_apis_resource_k8s_io_v1alpha3_resourceslices: (
        FieldApisResourceK8sIoV1alpha3Resourceslices
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/resourceslices')
    field_apis_resource_k8s_io_v1alpha3_resourceslices__name_: (
        FieldApisResourceK8sIoV1alpha3ResourceslicesName
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/resourceslices/{name}')
    field_apis_resource_k8s_io_v1alpha3_watch_deviceclasses: (
        FieldApisResourceK8sIoV1alpha3WatchDeviceclasses
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/watch/deviceclasses')
    field_apis_resource_k8s_io_v1alpha3_watch_deviceclasses__name_: (
        FieldApisResourceK8sIoV1alpha3WatchDeviceclassesName
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/watch/deviceclasses/{name}')
    field_apis_resource_k8s_io_v1alpha3_watch_namespaces__namespace__podschedulingcontexts: (
        FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespacePodschedulingcontexts
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/watch/namespaces/{namespace}/podschedulingcontexts',
    )
    field_apis_resource_k8s_io_v1alpha3_watch_namespaces__namespace__podschedulingcontexts__name_: (
        FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespacePodschedulingcontextsName
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/watch/namespaces/{namespace}/podschedulingcontexts/{name}',
    )
    field_apis_resource_k8s_io_v1alpha3_watch_namespaces__namespace__resourceclaims: (
        FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespaceResourceclaims
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/watch/namespaces/{namespace}/resourceclaims',
    )
    field_apis_resource_k8s_io_v1alpha3_watch_namespaces__namespace__resourceclaims__name_: (
        FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespaceResourceclaimsName
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/watch/namespaces/{namespace}/resourceclaims/{name}',
    )
    field_apis_resource_k8s_io_v1alpha3_watch_namespaces__namespace__resourceclaimtemplates: (
        FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespaceResourceclaimtemplates
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/watch/namespaces/{namespace}/resourceclaimtemplates',
    )
    field_apis_resource_k8s_io_v1alpha3_watch_namespaces__namespace__resourceclaimtemplates__name_: (
        FieldApisResourceK8sIoV1alpha3WatchNamespacesNamespaceResourceclaimtemplatesName
    ) = Field(
        ...,
        alias='/apis/resource.k8s.io/v1alpha3/watch/namespaces/{namespace}/resourceclaimtemplates/{name}',
    )
    field_apis_resource_k8s_io_v1alpha3_watch_podschedulingcontexts: (
        FieldApisResourceK8sIoV1alpha3WatchPodschedulingcontexts
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/watch/podschedulingcontexts')
    field_apis_resource_k8s_io_v1alpha3_watch_resourceclaims: (
        FieldApisResourceK8sIoV1alpha3WatchResourceclaims
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/watch/resourceclaims')
    field_apis_resource_k8s_io_v1alpha3_watch_resourceclaimtemplates: (
        FieldApisResourceK8sIoV1alpha3WatchResourceclaimtemplates
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/watch/resourceclaimtemplates')
    field_apis_resource_k8s_io_v1alpha3_watch_resourceslices: (
        FieldApisResourceK8sIoV1alpha3WatchResourceslices
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/watch/resourceslices')
    field_apis_resource_k8s_io_v1alpha3_watch_resourceslices__name_: (
        FieldApisResourceK8sIoV1alpha3WatchResourceslicesName
    ) = Field(..., alias='/apis/resource.k8s.io/v1alpha3/watch/resourceslices/{name}')
    field_apis_scheduling_k8s_io_: FieldApisSchedulingK8sIo = Field(
        ..., alias='/apis/scheduling.k8s.io/'
    )
    field_apis_scheduling_k8s_io_v1_: FieldApisSchedulingK8sIoV1 = Field(
        ..., alias='/apis/scheduling.k8s.io/v1/'
    )
    field_apis_scheduling_k8s_io_v1_priorityclasses: (
        FieldApisSchedulingK8sIoV1Priorityclasses
    ) = Field(..., alias='/apis/scheduling.k8s.io/v1/priorityclasses')
    field_apis_scheduling_k8s_io_v1_priorityclasses__name_: (
        FieldApisSchedulingK8sIoV1PriorityclassesName
    ) = Field(..., alias='/apis/scheduling.k8s.io/v1/priorityclasses/{name}')
    field_apis_scheduling_k8s_io_v1_watch_priorityclasses: (
        FieldApisSchedulingK8sIoV1WatchPriorityclasses
    ) = Field(..., alias='/apis/scheduling.k8s.io/v1/watch/priorityclasses')
    field_apis_scheduling_k8s_io_v1_watch_priorityclasses__name_: (
        FieldApisSchedulingK8sIoV1WatchPriorityclassesName
    ) = Field(..., alias='/apis/scheduling.k8s.io/v1/watch/priorityclasses/{name}')
    field_apis_storage_k8s_io_: FieldApisStorageK8sIo = Field(
        ..., alias='/apis/storage.k8s.io/'
    )
    field_apis_storage_k8s_io_v1_: FieldApisStorageK8sIoV1 = Field(
        ..., alias='/apis/storage.k8s.io/v1/'
    )
    field_apis_storage_k8s_io_v1_csidrivers: FieldApisStorageK8sIoV1Csidrivers = Field(
        ..., alias='/apis/storage.k8s.io/v1/csidrivers'
    )
    field_apis_storage_k8s_io_v1_csidrivers__name_: (
        FieldApisStorageK8sIoV1CsidriversName
    ) = Field(..., alias='/apis/storage.k8s.io/v1/csidrivers/{name}')
    field_apis_storage_k8s_io_v1_csinodes: FieldApisStorageK8sIoV1Csinodes = Field(
        ..., alias='/apis/storage.k8s.io/v1/csinodes'
    )
    field_apis_storage_k8s_io_v1_csinodes__name_: (
        FieldApisStorageK8sIoV1CsinodesName
    ) = Field(..., alias='/apis/storage.k8s.io/v1/csinodes/{name}')
    field_apis_storage_k8s_io_v1_csistoragecapacities: (
        FieldApisStorageK8sIoV1Csistoragecapacities
    ) = Field(..., alias='/apis/storage.k8s.io/v1/csistoragecapacities')
    field_apis_storage_k8s_io_v1_namespaces__namespace__csistoragecapacities: (
        FieldApisStorageK8sIoV1NamespacesNamespaceCsistoragecapacities
    ) = Field(
        ..., alias='/apis/storage.k8s.io/v1/namespaces/{namespace}/csistoragecapacities'
    )
    field_apis_storage_k8s_io_v1_namespaces__namespace__csistoragecapacities__name_: (
        FieldApisStorageK8sIoV1NamespacesNamespaceCsistoragecapacitiesName
    ) = Field(
        ...,
        alias='/apis/storage.k8s.io/v1/namespaces/{namespace}/csistoragecapacities/{name}',
    )
    field_apis_storage_k8s_io_v1_storageclasses: (
        FieldApisStorageK8sIoV1Storageclasses
    ) = Field(..., alias='/apis/storage.k8s.io/v1/storageclasses')
    field_apis_storage_k8s_io_v1_storageclasses__name_: (
        FieldApisStorageK8sIoV1StorageclassesName
    ) = Field(..., alias='/apis/storage.k8s.io/v1/storageclasses/{name}')
    field_apis_storage_k8s_io_v1_volumeattachments: (
        FieldApisStorageK8sIoV1Volumeattachments
    ) = Field(..., alias='/apis/storage.k8s.io/v1/volumeattachments')
    field_apis_storage_k8s_io_v1_volumeattachments__name_: (
        FieldApisStorageK8sIoV1VolumeattachmentsName
    ) = Field(..., alias='/apis/storage.k8s.io/v1/volumeattachments/{name}')
    field_apis_storage_k8s_io_v1_volumeattachments__name__status: (
        FieldApisStorageK8sIoV1VolumeattachmentsNameStatus
    ) = Field(..., alias='/apis/storage.k8s.io/v1/volumeattachments/{name}/status')
    field_apis_storage_k8s_io_v1_watch_csidrivers: (
        FieldApisStorageK8sIoV1WatchCsidrivers
    ) = Field(..., alias='/apis/storage.k8s.io/v1/watch/csidrivers')
    field_apis_storage_k8s_io_v1_watch_csidrivers__name_: (
        FieldApisStorageK8sIoV1WatchCsidriversName
    ) = Field(..., alias='/apis/storage.k8s.io/v1/watch/csidrivers/{name}')
    field_apis_storage_k8s_io_v1_watch_csinodes: (
        FieldApisStorageK8sIoV1WatchCsinodes
    ) = Field(..., alias='/apis/storage.k8s.io/v1/watch/csinodes')
    field_apis_storage_k8s_io_v1_watch_csinodes__name_: (
        FieldApisStorageK8sIoV1WatchCsinodesName
    ) = Field(..., alias='/apis/storage.k8s.io/v1/watch/csinodes/{name}')
    field_apis_storage_k8s_io_v1_watch_csistoragecapacities: (
        FieldApisStorageK8sIoV1WatchCsistoragecapacities
    ) = Field(..., alias='/apis/storage.k8s.io/v1/watch/csistoragecapacities')
    field_apis_storage_k8s_io_v1_watch_namespaces__namespace__csistoragecapacities: (
        FieldApisStorageK8sIoV1WatchNamespacesNamespaceCsistoragecapacities
    ) = Field(
        ...,
        alias='/apis/storage.k8s.io/v1/watch/namespaces/{namespace}/csistoragecapacities',
    )
    field_apis_storage_k8s_io_v1_watch_namespaces__namespace__csistoragecapacities__name_: (
        FieldApisStorageK8sIoV1WatchNamespacesNamespaceCsistoragecapacitiesName
    ) = Field(
        ...,
        alias='/apis/storage.k8s.io/v1/watch/namespaces/{namespace}/csistoragecapacities/{name}',
    )
    field_apis_storage_k8s_io_v1_watch_storageclasses: (
        FieldApisStorageK8sIoV1WatchStorageclasses
    ) = Field(..., alias='/apis/storage.k8s.io/v1/watch/storageclasses')
    field_apis_storage_k8s_io_v1_watch_storageclasses__name_: (
        FieldApisStorageK8sIoV1WatchStorageclassesName
    ) = Field(..., alias='/apis/storage.k8s.io/v1/watch/storageclasses/{name}')
    field_apis_storage_k8s_io_v1_watch_volumeattachments: (
        FieldApisStorageK8sIoV1WatchVolumeattachments
    ) = Field(..., alias='/apis/storage.k8s.io/v1/watch/volumeattachments')
    field_apis_storage_k8s_io_v1_watch_volumeattachments__name_: (
        FieldApisStorageK8sIoV1WatchVolumeattachmentsName
    ) = Field(..., alias='/apis/storage.k8s.io/v1/watch/volumeattachments/{name}')
    field_apis_storage_k8s_io_v1alpha1_: FieldApisStorageK8sIoV1alpha1 = Field(
        ..., alias='/apis/storage.k8s.io/v1alpha1/'
    )
    field_apis_storage_k8s_io_v1alpha1_volumeattributesclasses: (
        FieldApisStorageK8sIoV1alpha1Volumeattributesclasses
    ) = Field(..., alias='/apis/storage.k8s.io/v1alpha1/volumeattributesclasses')
    field_apis_storage_k8s_io_v1alpha1_volumeattributesclasses__name_: (
        FieldApisStorageK8sIoV1alpha1VolumeattributesclassesName
    ) = Field(..., alias='/apis/storage.k8s.io/v1alpha1/volumeattributesclasses/{name}')
    field_apis_storage_k8s_io_v1alpha1_watch_volumeattributesclasses: (
        FieldApisStorageK8sIoV1alpha1WatchVolumeattributesclasses
    ) = Field(..., alias='/apis/storage.k8s.io/v1alpha1/watch/volumeattributesclasses')
    field_apis_storage_k8s_io_v1alpha1_watch_volumeattributesclasses__name_: (
        FieldApisStorageK8sIoV1alpha1WatchVolumeattributesclassesName
    ) = Field(
        ..., alias='/apis/storage.k8s.io/v1alpha1/watch/volumeattributesclasses/{name}'
    )
    field_apis_storage_k8s_io_v1beta1_: FieldApisStorageK8sIoV1beta1 = Field(
        ..., alias='/apis/storage.k8s.io/v1beta1/'
    )
    field_apis_storage_k8s_io_v1beta1_volumeattributesclasses: (
        FieldApisStorageK8sIoV1beta1Volumeattributesclasses
    ) = Field(..., alias='/apis/storage.k8s.io/v1beta1/volumeattributesclasses')
    field_apis_storage_k8s_io_v1beta1_volumeattributesclasses__name_: (
        FieldApisStorageK8sIoV1beta1VolumeattributesclassesName
    ) = Field(..., alias='/apis/storage.k8s.io/v1beta1/volumeattributesclasses/{name}')
    field_apis_storage_k8s_io_v1beta1_watch_volumeattributesclasses: (
        FieldApisStorageK8sIoV1beta1WatchVolumeattributesclasses
    ) = Field(..., alias='/apis/storage.k8s.io/v1beta1/watch/volumeattributesclasses')
    field_apis_storage_k8s_io_v1beta1_watch_volumeattributesclasses__name_: (
        FieldApisStorageK8sIoV1beta1WatchVolumeattributesclassesName
    ) = Field(
        ..., alias='/apis/storage.k8s.io/v1beta1/watch/volumeattributesclasses/{name}'
    )
    field_apis_storagemigration_k8s_io_: FieldApisStoragemigrationK8sIo = Field(
        ..., alias='/apis/storagemigration.k8s.io/'
    )
    field_apis_storagemigration_k8s_io_v1alpha1_: (
        FieldApisStoragemigrationK8sIoV1alpha1
    ) = Field(..., alias='/apis/storagemigration.k8s.io/v1alpha1/')
    field_apis_storagemigration_k8s_io_v1alpha1_storageversionmigrations: (
        FieldApisStoragemigrationK8sIoV1alpha1Storageversionmigrations
    ) = Field(
        ..., alias='/apis/storagemigration.k8s.io/v1alpha1/storageversionmigrations'
    )
    field_apis_storagemigration_k8s_io_v1alpha1_storageversionmigrations__name_: (
        FieldApisStoragemigrationK8sIoV1alpha1StorageversionmigrationsName
    ) = Field(
        ...,
        alias='/apis/storagemigration.k8s.io/v1alpha1/storageversionmigrations/{name}',
    )
    field_apis_storagemigration_k8s_io_v1alpha1_storageversionmigrations__name__status: (
        FieldApisStoragemigrationK8sIoV1alpha1StorageversionmigrationsNameStatus
    ) = Field(
        ...,
        alias='/apis/storagemigration.k8s.io/v1alpha1/storageversionmigrations/{name}/status',
    )
    field_apis_storagemigration_k8s_io_v1alpha1_watch_storageversionmigrations: (
        FieldApisStoragemigrationK8sIoV1alpha1WatchStorageversionmigrations
    ) = Field(
        ...,
        alias='/apis/storagemigration.k8s.io/v1alpha1/watch/storageversionmigrations',
    )
    field_apis_storagemigration_k8s_io_v1alpha1_watch_storageversionmigrations__name_: (
        FieldApisStoragemigrationK8sIoV1alpha1WatchStorageversionmigrationsName
    ) = Field(
        ...,
        alias='/apis/storagemigration.k8s.io/v1alpha1/watch/storageversionmigrations/{name}',
    )
    field_logs_: FieldLogs = Field(..., alias='/logs/')
    field_logs__logpath_: FieldLogsLogpath = Field(..., alias='/logs/{logpath}')
    field_openid_v1_jwks_: FieldOpenidV1Jwks = Field(..., alias='/openid/v1/jwks/')
    field_version_: FieldVersion = Field(..., alias='/version/')


class SecurityItem(BaseModel):
    BearerToken: List


class BearerToken(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    type: str


class SecurityDefinitions(BaseModel):
    BearerToken: BearerToken


class Model(BaseModel):
    definitions: Definitions
    info: Info
    parameters: Parameters5
    paths: Paths1
    security: List[SecurityItem]
    securityDefinitions: SecurityDefinitions
    swagger: str
